{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/config/security.config.ts"],"sourcesContent":["/**\n * Central Security Configuration\n * Provides centralized security settings and constants for the restaurant dashboard\n */\n\n// Helper function to get environment variable with fallback\nconst getEnvVar = (key: string, fallback?: string): string => {\n  const value = process.env[key];\n  if (!value && !fallback) {\n    console.warn(`Missing environment variable: ${key}`);\n  }\n  return value || fallback || '';\n};\n\n// Helper function to parse boolean environment variables\nconst getEnvBool = (key: string, fallback: boolean): boolean => {\n  const value = process.env[key];\n  if (value === undefined) return fallback;\n  return value === 'true' || value === '1';\n};\n\n// Helper function to parse number environment variables\nconst getEnvNumber = (key: string, fallback: number): number => {\n  const value = process.env[key];\n  if (!value) return fallback;\n  const parsed = parseInt(value, 10);\n  return isNaN(parsed) ? fallback : parsed;\n};\n\nexport const SECURITY_CONFIG = {\n  // Authentication & Session\n  session: {\n    cookieName: getEnvVar('SESSION_COOKIE_NAME', 'restaurant-dashboard-session'),\n    maxAge: getEnvNumber('SESSION_MAX_AGE_MS', 24 * 60 * 60 * 1000), // 24 hours\n    sameSite: 'strict' as const,\n    secure: process.env.NODE_ENV === 'production',\n    httpOnly: true,\n    path: '/',\n    domain: getEnvVar('COOKIE_DOMAIN'),\n    secret: getEnvVar('SESSION_SECRET', ''),\n  },\n\n  // Password Requirements\n  password: {\n    minLength: getEnvNumber('PASSWORD_MIN_LENGTH', 12),\n    requireUppercase: getEnvBool('PASSWORD_REQUIRE_UPPERCASE', true),\n    requireLowercase: getEnvBool('PASSWORD_REQUIRE_LOWERCASE', true),\n    requireNumbers: getEnvBool('PASSWORD_REQUIRE_NUMBERS', true),\n    requireSpecialChars: getEnvBool('PASSWORD_REQUIRE_SPECIAL', true),\n    maxLength: getEnvNumber('PASSWORD_MAX_LENGTH', 128),\n    preventCommon: getEnvBool('PASSWORD_PREVENT_COMMON', true),\n  },\n\n  // Rate Limiting\n  rateLimiting: {\n    // General API rate limiting\n    api: {\n      windowMs: getEnvNumber('RATE_LIMIT_WINDOW_MS', 15 * 60 * 1000), // 15 minutes\n      maxRequests: getEnvNumber('RATE_LIMIT_MAX_REQUESTS', 1000),\n      skipSuccessfulRequests: getEnvBool('RATE_LIMIT_SKIP_SUCCESS', false),\n      skipFailedRequests: getEnvBool('RATE_LIMIT_SKIP_FAILED', false),\n      redisUrl: getEnvVar('RATE_LIMIT_REDIS_URL', 'redis://localhost:6379'),\n    },\n    // Login attempts\n    login: {\n      windowMs: getEnvNumber('LOGIN_WINDOW_MS', 15 * 60 * 1000), // 15 minutes\n      maxAttempts: getEnvNumber('LOGIN_MAX_ATTEMPTS', 5),\n      blockDuration: getEnvNumber('LOGIN_BLOCK_DURATION_MS', 30 * 60 * 1000), // 30 minutes\n    },\n    // Password reset\n    passwordReset: {\n      windowMs: getEnvNumber('PASSWORD_RESET_WINDOW_MS', 60 * 60 * 1000), // 1 hour\n      maxAttempts: getEnvNumber('PASSWORD_RESET_MAX_ATTEMPTS', 3),\n      blockDuration: getEnvNumber('PASSWORD_RESET_BLOCK_MS', 60 * 60 * 1000), // 1 hour\n    },\n    // Email verification\n    emailVerification: {\n      windowMs: getEnvNumber('EMAIL_VERIFY_WINDOW_MS', 60 * 60 * 1000), // 1 hour\n      maxAttempts: getEnvNumber('EMAIL_VERIFY_MAX_ATTEMPTS', 5),\n      blockDuration: getEnvNumber('EMAIL_VERIFY_BLOCK_MS', 60 * 60 * 1000), // 1 hour\n    },\n  },\n\n  // CSRF Protection\n  csrf: {\n    secret: getEnvVar('CSRF_SECRET', ''),\n    cookieName: '__Host-csrf-token',\n    headerName: 'x-csrf-token',\n    cookieOptions: {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict' as const,\n      path: '/',\n      maxAge: getEnvNumber('CSRF_TOKEN_MAX_AGE_MS', 24 * 60 * 60 * 1000), // 24 hours\n    },\n  },\n\n  // Encryption\n  encryption: {\n    algorithm: 'aes-256-gcm',\n    keyLength: 32,\n    ivLength: 16,\n    tagLength: 16,\n    saltLength: 64,\n    iterations: getEnvNumber('ENCRYPTION_ITERATIONS', 100000),\n    key: getEnvVar('ENCRYPTION_KEY', ''),\n  },\n\n  // JWT Configuration\n  jwt: {\n    issuer: getEnvVar('JWT_ISSUER', 'restaurant-dashboard'),\n    audience: getEnvVar('JWT_AUDIENCE', 'restaurant-dashboard-users'),\n    algorithm: 'HS256' as const,\n    accessTokenExpiry: getEnvVar('JWT_ACCESS_TOKEN_EXPIRY', '15m'),\n    refreshTokenExpiry: getEnvVar('JWT_REFRESH_TOKEN_EXPIRY', '7d'),\n    secret: getEnvVar('JWT_SECRET', ''),\n  },\n\n  // Content Security Policy\n  csp: {\n    defaultSrc: [\"'self'\"],\n    scriptSrc: [\n      \"'self'\",\n      process.env.NODE_ENV === 'development' ? \"'unsafe-eval'\" : '',\n      \"'unsafe-inline'\", // Required for styled-components\n      'https://cdn.jsdelivr.net',\n      'https://unpkg.com',\n    ].filter(Boolean),\n    styleSrc: [\n      \"'self'\",\n      \"'unsafe-inline'\",\n      'https://fonts.googleapis.com',\n    ],\n    imgSrc: [\n      \"'self'\",\n      'data:',\n      'blob:',\n      'https:',\n    ],\n    fontSrc: [\n      \"'self'\",\n      'https://fonts.gstatic.com',\n    ],\n    connectSrc: [\n      \"'self'\",\n      getEnvVar('STRIPE_API_URL', 'https://api.stripe.com'),\n      getEnvVar('SQUARE_API_URL', 'https://api.square.com'),\n    ].filter(Boolean),\n    frameSrc: [\n      \"'self'\",\n      'https://js.stripe.com',\n    ],\n    objectSrc: [\"'none'\"],\n    baseUri: [\"'self'\"],\n    formAction: [\"'self'\"],\n    upgradeInsecureRequests: process.env.NODE_ENV === 'production',\n  },\n\n  // Security Headers\n  headers: {\n    'X-Frame-Options': 'DENY',\n    'X-Content-Type-Options': 'nosniff',\n    'X-XSS-Protection': '1; mode=block',\n    'Referrer-Policy': 'strict-origin-when-cross-origin',\n    'Permissions-Policy': 'geolocation=(), microphone=(), camera=()',\n    'Strict-Transport-Security': process.env.NODE_ENV === 'production' \n      ? 'max-age=31536000; includeSubDomains; preload'\n      : '',\n  },\n\n  // CORS Configuration\n  cors: {\n    origin: getEnvVar('CORS_ORIGINS', 'http://localhost:3000').split(','),\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-CSRF-Token'],\n    credentials: true,\n    maxAge: getEnvNumber('CORS_MAX_AGE', 86400), // 24 hours\n  },\n\n  // File Upload Security\n  fileUpload: {\n    maxFileSize: getEnvNumber('MAX_FILE_SIZE_BYTES', 10 * 1024 * 1024), // 10MB\n    allowedTypes: [\n      'image/jpeg',\n      'image/png',\n      'image/gif',\n      'image/webp',\n      'application/pdf',\n      'text/csv',\n      'application/vnd.ms-excel',\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    ],\n    scanForMalware: getEnvBool('SCAN_UPLOADS_FOR_MALWARE', process.env.NODE_ENV === 'production'),\n    quarantineDirectory: getEnvVar('QUARANTINE_DIR', './quarantine'),\n    uploadDirectory: getEnvVar('UPLOAD_DIR', './uploads'),\n  },\n\n  // Audit Logging\n  audit: {\n    enabled: getEnvBool('AUDIT_LOGGING_ENABLED', true),\n    logLevel: getEnvVar('LOG_LEVEL', 'info'),\n    destinations: getEnvVar('LOG_DESTINATIONS', 'console,file').split(','),\n    sensitiveFields: ['password', 'token', 'secret', 'key', 'creditCard', 'ssn'],\n    retentionDays: getEnvNumber('LOG_RETENTION_DAYS', 90),\n  },\n\n  // Two-Factor Authentication\n  twoFactor: {\n    issuer: getEnvVar('TWO_FACTOR_ISSUER', 'Restaurant Dashboard'),\n    window: getEnvNumber('TWO_FACTOR_WINDOW', 2), // Allow 2 steps tolerance\n    digits: 6,\n    period: 30, // 30 seconds\n    algorithm: 'sha1',\n  },\n\n  // IP Whitelisting (for admin functions)\n  ipWhitelist: {\n    enabled: getEnvBool('IP_WHITELIST_ENABLED', process.env.NODE_ENV === 'production'),\n    adminIPs: getEnvVar('ADMIN_IPS', '').split(',').filter(Boolean),\n    developmentBypass: getEnvBool('IP_WHITELIST_DEV_BYPASS', true),\n  },\n\n  // Database Security\n  database: {\n    connectionTimeout: getEnvNumber('DB_CONNECTION_TIMEOUT_MS', 30000),\n    maxConnections: getEnvNumber('DB_MAX_CONNECTIONS', 20),\n    enableSSL: getEnvBool('DB_ENABLE_SSL', process.env.NODE_ENV === 'production'),\n    certificateValidation: getEnvBool('DB_CERT_VALIDATION', true),\n    poolSize: getEnvNumber('DATABASE_POOL_SIZE', 10),\n  },\n\n  // API Security\n  api: {\n    maxRequestSize: getEnvVar('API_MAX_REQUEST_SIZE', '10mb'),\n    timeout: getEnvNumber('API_TIMEOUT_MS', 30000),\n    enableCompression: getEnvBool('API_ENABLE_COMPRESSION', true),\n    validateContentType: getEnvBool('API_VALIDATE_CONTENT_TYPE', true),\n  },\n\n  // Redis Configuration\n  redis: {\n    url: getEnvVar('REDIS_URL', 'redis://localhost:6379'),\n    ttl: getEnvNumber('REDIS_TTL_SECONDS', 3600),\n    maxRetries: getEnvNumber('REDIS_MAX_RETRIES', 3),\n    retryDelay: getEnvNumber('REDIS_RETRY_DELAY_MS', 1000),\n  },\n\n  // WebAuthn/Passkeys\n  webauthn: {\n    rpName: getEnvVar('WEBAUTHN_RP_NAME', 'Restaurant Dashboard'),\n    rpId: getEnvVar('WEBAUTHN_RP_ID', 'localhost'),\n    origin: getEnvVar('WEBAUTHN_ORIGIN', 'http://localhost:3000'),\n    userVerification: 'preferred' as const,\n  },\n\n  // Development & Testing\n  development: {\n    disableSecurityInDev: getEnvBool('DISABLE_SECURITY_IN_DEV', false),\n    logSecurityEvents: getEnvBool('LOG_SECURITY_EVENTS', true),\n    mockExternalServices: getEnvBool('MOCK_EXTERNAL_SERVICES', process.env.NODE_ENV === 'test'),\n    verboseLogging: getEnvBool('VERBOSE_LOGGING', false),\n  },\n} as const;\n\n// Validate critical environment variables on startup\nconst validateSecurityConfig = () => {\n  const criticalVars = [\n    { key: 'SESSION_SECRET', value: SECURITY_CONFIG.session.secret },\n    { key: 'CSRF_SECRET', value: SECURITY_CONFIG.csrf.secret },\n    { key: 'ENCRYPTION_KEY', value: SECURITY_CONFIG.encryption.key },\n    { key: 'JWT_SECRET', value: SECURITY_CONFIG.jwt.secret },\n  ];\n\n  const missingVars = criticalVars.filter(v => !v.value);\n  \n  if (missingVars.length > 0 && process.env.NODE_ENV === 'production') {\n    throw new Error(\n      `Missing critical environment variables: ${missingVars.map(v => v.key).join(', ')}`\n    );\n  } else if (missingVars.length > 0) {\n    console.warn(\n      `⚠️  Missing critical environment variables in development: ${missingVars.map(v => v.key).join(', ')}`\n    );\n  }\n};\n\n// Run validation\nif (typeof process !== 'undefined') {\n  validateSecurityConfig();\n}\n\nexport type SecurityConfig = typeof SECURITY_CONFIG;\n\n// Security event types for audit logging\nexport const SECURITY_EVENTS = {\n  LOGIN_SUCCESS: 'login_success',\n  LOGIN_FAILURE: 'login_failure',\n  LOGIN_BLOCKED: 'login_blocked',\n  PASSWORD_CHANGE: 'password_change',\n  PASSWORD_RESET_REQUEST: 'password_reset_request',\n  PASSWORD_RESET_SUCCESS: 'password_reset_success',\n  ACCOUNT_LOCKED: 'account_locked',\n  ACCOUNT_UNLOCKED: 'account_unlocked',\n  PERMISSION_DENIED: 'permission_denied',\n  CSRF_TOKEN_INVALID: 'csrf_token_invalid',\n  RATE_LIMIT_EXCEEDED: 'rate_limit_exceeded',\n  SUSPICIOUS_ACTIVITY: 'suspicious_activity',\n  FILE_UPLOAD_BLOCKED: 'file_upload_blocked',\n  IP_BLOCKED: 'ip_blocked',\n  SESSION_CREATED: 'session_created',\n  SESSION_DESTROYED: 'session_destroyed',\n  SESSION_EXPIRED: 'session_expired',\n  TWO_FACTOR_ENABLED: 'two_factor_enabled',\n  TWO_FACTOR_DISABLED: 'two_factor_disabled',\n  TWO_FACTOR_VERIFICATION_SUCCESS: 'two_factor_verification_success',\n  TWO_FACTOR_VERIFICATION_FAILURE: 'two_factor_verification_failure',\n  DATA_EXPORT: 'data_export',\n  DATA_IMPORT: 'data_import',\n  API_KEY_CREATED: 'api_key_created',\n  API_KEY_REVOKED: 'api_key_revoked',\n} as const;\n\nexport type SecurityEvent = typeof SECURITY_EVENTS[keyof typeof SECURITY_EVENTS];\n\n// Common security patterns\nexport const SECURITY_PATTERNS = {\n  EMAIL_REGEX: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  PHONE_REGEX: /^\\+?[\\d\\s\\-\\(\\)]{10,}$/,\n  PASSWORD_STRENGTH_REGEX: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n  SQL_INJECTION_PATTERNS: [\n    /(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|EXECUTE)\\b)/i,\n    /(\\b(UNION|OR|AND)\\b.*\\b(SELECT|INSERT|UPDATE|DELETE)\\b)/i,\n    /(\\'|\\\"|;|--|\\*|\\/\\*|\\*\\/)/,\n  ],\n  XSS_PATTERNS: [\n    /<script[^>]*>.*?<\\/script>/gi,\n    /javascript:/gi,\n    /on\\w+\\s*=/gi,\n    /<iframe[^>]*>.*?<\\/iframe>/gi,\n  ],\n  COMMON_PASSWORDS: [\n    'password', '123456', 'password123', 'admin', 'letmein',\n    'qwerty', 'abc123', 'monkey', '1234567890', 'password1',\n  ],\n} as const;\n\nexport default SECURITY_CONFIG;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/security/csrf-edge.ts"],"sourcesContent":["/**\n * CSRF Protection Implementation for Edge Runtime\n * Uses Web Crypto API instead of Node.js crypto module\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { SECURITY_CONFIG } from '../../config/security.config';\n\n// CSRF Token Interface\ninterface CSRFTokenData {\n  token: string;\n  hash: string;\n  timestamp: number;\n  userId?: string;\n  sessionId?: string;\n}\n\n// CSRF Configuration\nconst CSRF_CONFIG = {\n  secret: process.env.CSRF_SECRET || SECURITY_CONFIG.csrf.secret || 'default-csrf-secret',\n  tokenLength: 32,\n  hashAlgorithm: 'SHA-256',\n  maxAge: SECURITY_CONFIG.csrf.cookieOptions.maxAge || 24 * 60 * 60 * 1000, // 24 hours\n  cookieName: SECURITY_CONFIG.csrf.cookieName,\n  headerName: SECURITY_CONFIG.csrf.headerName,\n  paramName: '_csrf_token',\n  bypassMethods: ['GET', 'HEAD', 'OPTIONS'],\n};\n\n/**\n * Generate random bytes using Web Crypto API\n */\nfunction generateRandomBytes(length: number): string {\n  const array = new Uint8Array(length);\n  crypto.getRandomValues(array);\n  return Array.from(array).map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n/**\n * Create HMAC using Web Crypto API\n */\nasync function createHMAC(data: string, secret: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const keyData = encoder.encode(secret);\n  const dataBuffer = encoder.encode(data);\n  \n  const key = await crypto.subtle.importKey(\n    'raw',\n    keyData,\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  );\n  \n  const signature = await crypto.subtle.sign('HMAC', key, dataBuffer);\n  return Array.from(new Uint8Array(signature))\n    .map(b => b.toString(16).padStart(2, '0'))\n    .join('');\n}\n\n/**\n * Generate a cryptographically secure CSRF token\n */\nexport async function generateCSRFToken(userId?: string, sessionId?: string): Promise<string> {\n  const timestamp = Date.now();\n  const randomToken = generateRandomBytes(CSRF_CONFIG.tokenLength);\n  \n  // Create token data\n  const tokenData = {\n    token: randomToken,\n    timestamp,\n    userId: userId || '',\n    sessionId: sessionId || '',\n  };\n  \n  // Create HMAC hash of the token data\n  const hash = await createHMAC(JSON.stringify(tokenData), CSRF_CONFIG.secret);\n  \n  // Combine token components\n  const csrfToken = btoa(JSON.stringify({\n    ...tokenData,\n    hash,\n  })).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  \n  return csrfToken;\n}\n\n/**\n * Validate a CSRF token\n */\nexport async function validateCSRFToken(\n  token: string,\n  userId?: string,\n  sessionId?: string\n): Promise<{ valid: boolean; reason?: string }> {\n  try {\n    // Decode the token (handle base64url)\n    const base64 = token.replace(/-/g, '+').replace(/_/g, '/');\n    const tokenDataString = atob(base64);\n    const tokenData: CSRFTokenData = JSON.parse(tokenDataString);\n    \n    // Check if token is expired\n    const now = Date.now();\n    if (now - tokenData.timestamp > CSRF_CONFIG.maxAge) {\n      return { valid: false, reason: 'Token expired' };\n    }\n    \n    // Verify user and session match\n    if (userId && tokenData.userId !== userId) {\n      return { valid: false, reason: 'User mismatch' };\n    }\n    \n    if (sessionId && tokenData.sessionId !== sessionId) {\n      return { valid: false, reason: 'Session mismatch' };\n    }\n    \n    // Recreate the hash to verify integrity\n    const verificationData = {\n      token: tokenData.token,\n      timestamp: tokenData.timestamp,\n      userId: tokenData.userId,\n      sessionId: tokenData.sessionId,\n    };\n    \n    const expectedHash = await createHMAC(JSON.stringify(verificationData), CSRF_CONFIG.secret);\n    \n    if (tokenData.hash !== expectedHash) {\n      return { valid: false, reason: 'Invalid token signature' };\n    }\n    \n    return { valid: true };\n  } catch (error) {\n    return { valid: false, reason: 'Malformed token' };\n  }\n}\n\n/**\n * Extract CSRF token from request\n */\nexport function extractCSRFToken(request: NextRequest): string | null {\n  // Check header first\n  const headerToken = request.headers.get(CSRF_CONFIG.headerName);\n  if (headerToken) {\n    return headerToken;\n  }\n  \n  // Check query parameters (less secure, not recommended)\n  const queryToken = request.nextUrl.searchParams.get(CSRF_CONFIG.paramName);\n  if (queryToken) {\n    return queryToken;\n  }\n  \n  return null;\n}\n\n/**\n * Set CSRF token in response cookies\n */\nexport function setCSRFTokenCookie(response: NextResponse, token: string): void {\n  const cookieOptions = {\n    ...SECURITY_CONFIG.csrf.cookieOptions,\n    expires: new Date(Date.now() + CSRF_CONFIG.maxAge),\n  };\n  \n  response.cookies.set(CSRF_CONFIG.cookieName, token, cookieOptions);\n}\n\n/**\n * Get CSRF token from request cookies\n */\nexport function getCSRFTokenFromCookies(request: NextRequest): string | null {\n  return request.cookies.get(CSRF_CONFIG.cookieName)?.value || null;\n}\n\n/**\n * CSRF Protection Middleware\n */\nexport function createCSRFMiddleware() {\n  return async (request: NextRequest): Promise<NextResponse | null> => {\n    const method = request.method.toUpperCase();\n    \n    // Skip CSRF check for safe methods\n    if (CSRF_CONFIG.bypassMethods.includes(method)) {\n      return null; // Continue to next middleware\n    }\n    \n    // Skip CSRF check for API routes that explicitly opt out\n    const pathname = request.nextUrl.pathname;\n    if (pathname.startsWith('/api/webhook') || \n        pathname.startsWith('/api/health') ||\n        pathname.includes('/api/auth/callback')) {\n      return null; // Continue to next middleware\n    }\n    \n    // Extract user and session information\n    const sessionCookie = request.cookies.get('session');\n    const userId = request.headers.get('x-user-id');\n    const sessionId = sessionCookie?.value;\n    \n    // Get CSRF token from request\n    const providedToken = extractCSRFToken(request);\n    \n    if (!providedToken) {\n      return new NextResponse(\n        JSON.stringify({\n          error: 'CSRF token required',\n          message: 'Request must include a valid CSRF token',\n        }),\n        {\n          status: 403,\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n    }\n    \n    // Validate the token\n    const validation = await validateCSRFToken(providedToken, userId || undefined, sessionId);\n    \n    if (!validation.valid) {\n      console.warn('CSRF token validation failed:', validation.reason, {\n        ip: request.ip,\n        userAgent: request.headers.get('user-agent'),\n        pathname,\n        method,\n        timestamp: new Date().toISOString(),\n      });\n      \n      return new NextResponse(\n        JSON.stringify({\n          error: 'Invalid CSRF token',\n          message: 'The provided CSRF token is invalid or expired',\n        }),\n        {\n          status: 403,\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n    }\n    \n    return null; // Continue to next middleware\n  };\n}\n\n/**\n * Generate and set CSRF token for a response\n */\nexport async function provideCSRFToken(\n  response: NextResponse,\n  userId?: string,\n  sessionId?: string\n): Promise<string> {\n  const token = await generateCSRFToken(userId, sessionId);\n  setCSRFTokenCookie(response, token);\n  \n  // Also add token to response headers for client-side access\n  response.headers.set('X-CSRF-Token', token);\n  \n  return token;\n}\n\nexport default {\n  generateCSRFToken,\n  validateCSRFToken,\n  extractCSRFToken,\n  setCSRFTokenCookie,\n  getCSRFTokenFromCookies,\n  createCSRFMiddleware,\n  provideCSRFToken,\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/ (unsupported edge import 'cluster')"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`cluster`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,OAAO,CAAC"}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/ (unsupported edge import 'crypto')"],"sourcesContent":["__turbopack_context__.n(__import_unsupported(`crypto`));\n"],"names":[],"mappings":"AAAA,sBAAsB,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC"}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/security/rate-limit.ts"],"sourcesContent":["/**\n * Rate Limiting Implementation\n * Comprehensive rate limiting with sliding window algorithm and Redis support\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\nimport { RateLimiterMemory, RateLimiterRes } from 'rate-limiter-flexible';\nimport { SECURITY_CONFIG, SECURITY_EVENTS } from '../../config/security.config';\n// Note: Redis support removed for Edge runtime compatibility\n// import Redis from 'ioredis';\n\n// Rate Limiter Configuration\ninterface RateLimitConfig {\n  windowMs: number;\n  maxRequests: number;\n  blockDuration?: number;\n  skipSuccessfulRequests?: boolean;\n  skipFailedRequests?: boolean;\n  keyGenerator?: (req: NextRequest) => string;\n  onLimitReached?: (req: NextRequest, identifier: string) => void;\n  whitelist?: string[];\n  blacklist?: string[];\n}\n\n// Rate Limiter Instance\ninterface RateLimiterInstance {\n  limiter: RateLimiterMemory;\n  config: RateLimitConfig;\n}\n\n// Global rate limiters\nconst rateLimiters = new Map<string, RateLimiterInstance>();\n\n// Note: Redis connection removed for Edge runtime compatibility\n// In production, consider using Upstash Redis or KV storage for Edge-compatible persistence\n\n/**\n * Create a rate limiter instance\n */\nexport function createRateLimiter(\n  name: string,\n  config: RateLimitConfig\n): RateLimiterInstance {\n  const limiterOptions = {\n    keyPrefix: `rate_limit_${name}`,\n    points: config.maxRequests,\n    duration: Math.ceil(config.windowMs / 1000), // Convert to seconds\n    blockDuration: Math.ceil((config.blockDuration || config.windowMs) / 1000),\n    execEvenly: true, // Spread requests evenly across the duration\n  };\n  \n  // Using memory-only rate limiter for Edge runtime compatibility\n  const limiter = new RateLimiterMemory(limiterOptions);\n  \n  const instance = { limiter, config };\n  rateLimiters.set(name, instance);\n  \n  return instance;\n}\n\n/**\n * Get rate limiter instance\n */\nexport function getRateLimiter(name: string): RateLimiterInstance | null {\n  return rateLimiters.get(name) || null;\n}\n\n/**\n * Generate rate limit key from request\n */\nfunction generateKey(req: NextRequest, config: RateLimitConfig): string {\n  if (config.keyGenerator) {\n    return config.keyGenerator(req);\n  }\n  \n  // Default key generation: IP + User-Agent hash\n  const ip = req.ip || req.headers.get('x-forwarded-for') || req.headers.get('x-real-ip') || 'unknown';\n  const userAgent = req.headers.get('user-agent') || 'unknown';\n  \n  // For authenticated requests, include user ID\n  const userId = req.headers.get('x-user-id') || req.cookies.get('userId')?.value;\n  \n  return userId ? `${userId}:${ip}` : `${ip}:${Buffer.from(userAgent).toString('base64').slice(0, 20)}`;\n}\n\n/**\n * Check if IP is whitelisted\n */\nfunction isWhitelisted(ip: string, whitelist?: string[]): boolean {\n  if (!whitelist || whitelist.length === 0) return false;\n  \n  return whitelist.some(whitelistedIp => {\n    // Support CIDR notation and exact matches\n    if (whitelistedIp.includes('/')) {\n      // TODO: Implement CIDR matching\n      return false;\n    }\n    return ip === whitelistedIp;\n  });\n}\n\n/**\n * Check if IP is blacklisted\n */\nfunction isBlacklisted(ip: string, blacklist?: string[]): boolean {\n  if (!blacklist || blacklist.length === 0) return false;\n  \n  return blacklist.includes(ip);\n}\n\n/**\n * Apply rate limiting to request\n */\nexport async function applyRateLimit(\n  req: NextRequest,\n  limiterName: string\n): Promise<{ allowed: boolean; reset: Date; remaining: number; total: number }> {\n  const limiterInstance = getRateLimiter(limiterName);\n  \n  if (!limiterInstance) {\n    throw new Error(`Rate limiter '${limiterName}' not found`);\n  }\n  \n  const { limiter, config } = limiterInstance;\n  const key = generateKey(req, config);\n  const ip = req.ip || req.headers.get('x-forwarded-for') || 'unknown';\n  \n  // Check whitelist\n  if (isWhitelisted(ip, config.whitelist)) {\n    return {\n      allowed: true,\n      reset: new Date(Date.now() + config.windowMs),\n      remaining: config.maxRequests,\n      total: config.maxRequests,\n    };\n  }\n  \n  // Check blacklist\n  if (isBlacklisted(ip, config.blacklist)) {\n    logSecurityEvent(SECURITY_EVENTS.IP_BLOCKED, {\n      ip,\n      reason: 'blacklisted',\n      limiter: limiterName,\n    });\n    \n    return {\n      allowed: false,\n      reset: new Date(Date.now() + config.blockDuration || config.windowMs),\n      remaining: 0,\n      total: config.maxRequests,\n    };\n  }\n  \n  try {\n    const res = await limiter.consume(key);\n    \n    return {\n      allowed: true,\n      reset: new Date(Date.now() + res.msBeforeNext),\n      remaining: res.remainingPoints || 0,\n      total: config.maxRequests,\n    };\n  } catch (rejRes: any) {\n    const result = rejRes as RateLimiterRes;\n    \n    // Log rate limit exceeded\n    logSecurityEvent(SECURITY_EVENTS.RATE_LIMIT_EXCEEDED, {\n      ip,\n      key,\n      limiter: limiterName,\n      totalHits: result.totalHits,\n      remainingPoints: result.remainingPoints,\n      msBeforeNext: result.msBeforeNext,\n    });\n    \n    if (config.onLimitReached) {\n      config.onLimitReached(req, key);\n    }\n    \n    return {\n      allowed: false,\n      reset: new Date(Date.now() + result.msBeforeNext),\n      remaining: result.remainingPoints || 0,\n      total: config.maxRequests,\n    };\n  }\n}\n\n/**\n * Create rate limiting middleware\n */\nexport function createRateLimitMiddleware(limiterName: string) {\n  return async (req: NextRequest): Promise<NextResponse | null> => {\n    try {\n      const result = await applyRateLimit(req, limiterName);\n      \n      if (!result.allowed) {\n        const response = NextResponse.json(\n          {\n            error: 'Too many requests',\n            message: 'Rate limit exceeded. Please try again later.',\n            resetTime: result.reset.toISOString(),\n          },\n          { status: 429 }\n        );\n        \n        // Add rate limit headers\n        response.headers.set('X-RateLimit-Limit', result.total.toString());\n        response.headers.set('X-RateLimit-Remaining', result.remaining.toString());\n        response.headers.set('X-RateLimit-Reset', result.reset.toISOString());\n        response.headers.set('Retry-After', Math.ceil((result.reset.getTime() - Date.now()) / 1000).toString());\n        \n        return response;\n      }\n      \n      return null; // Continue to next middleware\n    } catch (error) {\n      console.error('Rate limiting error:', error);\n      return null; // Continue to next middleware on error\n    }\n  };\n}\n\n/**\n * Initialize default rate limiters\n */\nexport function initializeDefaultRateLimiters(): void {\n  // General API rate limiting\n  createRateLimiter('api', {\n    windowMs: SECURITY_CONFIG.rateLimiting.api.windowMs,\n    maxRequests: SECURITY_CONFIG.rateLimiting.api.maxRequests,\n    skipSuccessfulRequests: SECURITY_CONFIG.rateLimiting.api.skipSuccessfulRequests,\n    skipFailedRequests: SECURITY_CONFIG.rateLimiting.api.skipFailedRequests,\n  });\n  \n  // Login attempts rate limiting\n  createRateLimiter('login', {\n    windowMs: SECURITY_CONFIG.rateLimiting.login.windowMs,\n    maxRequests: SECURITY_CONFIG.rateLimiting.login.maxAttempts,\n    blockDuration: SECURITY_CONFIG.rateLimiting.login.blockDuration,\n    keyGenerator: (req) => {\n      // Rate limit by IP + email combination\n      const ip = req.ip || 'unknown';\n      const email = req.headers.get('x-login-email') || 'unknown';\n      return `${ip}:${email}`;\n    },\n  });\n  \n  // Password reset rate limiting\n  createRateLimiter('password-reset', {\n    windowMs: SECURITY_CONFIG.rateLimiting.passwordReset.windowMs,\n    maxRequests: SECURITY_CONFIG.rateLimiting.passwordReset.maxAttempts,\n    blockDuration: SECURITY_CONFIG.rateLimiting.passwordReset.blockDuration,\n    keyGenerator: (req) => {\n      // Rate limit by email\n      const email = req.headers.get('x-reset-email') || req.ip || 'unknown';\n      return `password-reset:${email}`;\n    },\n  });\n  \n  // Email verification rate limiting\n  createRateLimiter('email-verification', {\n    windowMs: SECURITY_CONFIG.rateLimiting.emailVerification.windowMs,\n    maxRequests: SECURITY_CONFIG.rateLimiting.emailVerification.maxAttempts,\n    blockDuration: SECURITY_CONFIG.rateLimiting.emailVerification.blockDuration,\n    keyGenerator: (req) => {\n      const email = req.headers.get('x-verification-email') || req.ip || 'unknown';\n      return `email-verification:${email}`;\n    },\n  });\n  \n  // File upload rate limiting\n  createRateLimiter('file-upload', {\n    windowMs: 60 * 60 * 1000, // 1 hour\n    maxRequests: 50, // 50 uploads per hour\n    blockDuration: 60 * 60 * 1000, // 1 hour block\n    keyGenerator: (req) => {\n      const userId = req.headers.get('x-user-id') || req.ip || 'unknown';\n      return `file-upload:${userId}`;\n    },\n  });\n  \n  // Search/Query rate limiting\n  createRateLimiter('search', {\n    windowMs: 60 * 1000, // 1 minute\n    maxRequests: 30, // 30 searches per minute\n    blockDuration: 5 * 60 * 1000, // 5 minutes block\n  });\n  \n  // Report generation rate limiting\n  createRateLimiter('reports', {\n    windowMs: 60 * 60 * 1000, // 1 hour\n    maxRequests: 10, // 10 reports per hour\n    blockDuration: 60 * 60 * 1000, // 1 hour block\n    keyGenerator: (req) => {\n      const userId = req.headers.get('x-user-id') || req.ip || 'unknown';\n      return `reports:${userId}`;\n    },\n  });\n  \n  // Two-factor authentication rate limiting\n  createRateLimiter('2fa', {\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    maxRequests: 5, // 5 attempts per 15 minutes\n    blockDuration: 30 * 60 * 1000, // 30 minutes block\n    keyGenerator: (req) => {\n      const userId = req.headers.get('x-user-id') || req.ip || 'unknown';\n      return `2fa:${userId}`;\n    },\n  });\n  \n  // Admin actions rate limiting\n  createRateLimiter('admin', {\n    windowMs: 60 * 60 * 1000, // 1 hour\n    maxRequests: 100, // 100 admin actions per hour\n    blockDuration: 60 * 60 * 1000, // 1 hour block\n    keyGenerator: (req) => {\n      const userId = req.headers.get('x-user-id') || req.ip || 'unknown';\n      return `admin:${userId}`;\n    },\n  });\n}\n\n/**\n * Dynamic rate limiter for specific endpoints\n */\nexport function createDynamicRateLimit(\n  endpoint: string,\n  config: Partial<RateLimitConfig> = {}\n) {\n  const defaultConfig: RateLimitConfig = {\n    windowMs: 60 * 1000, // 1 minute\n    maxRequests: 60, // 60 requests per minute\n    ...config,\n  };\n  \n  const limiterName = `dynamic_${endpoint}`;\n  return createRateLimiter(limiterName, defaultConfig);\n}\n\n/**\n * Get rate limit status for a request\n */\nexport async function getRateLimitStatus(\n  req: NextRequest,\n  limiterName: string\n): Promise<{ remaining: number; reset: Date; total: number }> {\n  const limiterInstance = getRateLimiter(limiterName);\n  \n  if (!limiterInstance) {\n    throw new Error(`Rate limiter '${limiterName}' not found`);\n  }\n  \n  const { limiter, config } = limiterInstance;\n  const key = generateKey(req, config);\n  \n  try {\n    const res = await limiter.get(key);\n    \n    return {\n      remaining: res?.remainingPoints || config.maxRequests,\n      reset: new Date(Date.now() + (res?.msBeforeNext || config.windowMs)),\n      total: config.maxRequests,\n    };\n  } catch (error) {\n    return {\n      remaining: config.maxRequests,\n      reset: new Date(Date.now() + config.windowMs),\n      total: config.maxRequests,\n    };\n  }\n}\n\n/**\n * Reset rate limit for a specific key\n */\nexport async function resetRateLimit(\n  req: NextRequest,\n  limiterName: string\n): Promise<void> {\n  const limiterInstance = getRateLimiter(limiterName);\n  \n  if (!limiterInstance) {\n    throw new Error(`Rate limiter '${limiterName}' not found`);\n  }\n  \n  const { limiter, config } = limiterInstance;\n  const key = generateKey(req, config);\n  \n  await limiter.delete(key);\n}\n\n/**\n * Higher-order function for API route protection\n */\nexport function withRateLimit<T extends any[]>(\n  limiterName: string,\n  handler: (...args: T) => Promise<NextResponse> | NextResponse\n) {\n  return async (req: NextRequest, ...args: any[]): Promise<NextResponse> => {\n    try {\n      const result = await applyRateLimit(req, limiterName);\n      \n      if (!result.allowed) {\n        const response = NextResponse.json(\n          {\n            error: 'Too many requests',\n            message: 'Rate limit exceeded. Please try again later.',\n          },\n          { status: 429 }\n        );\n        \n        response.headers.set('X-RateLimit-Limit', result.total.toString());\n        response.headers.set('X-RateLimit-Remaining', result.remaining.toString());\n        response.headers.set('X-RateLimit-Reset', result.reset.toISOString());\n        \n        return response;\n      }\n      \n      // Continue with original handler\n      const response = await handler(req, ...args);\n      \n      // Add rate limit headers to successful responses\n      response.headers.set('X-RateLimit-Limit', result.total.toString());\n      response.headers.set('X-RateLimit-Remaining', result.remaining.toString());\n      response.headers.set('X-RateLimit-Reset', result.reset.toISOString());\n      \n      return response;\n    } catch (error) {\n      console.error('Rate limiting error:', error);\n      // Continue with original handler on rate limiting error\n      return handler(req, ...args);\n    }\n  };\n}\n\n/**\n * Security event logging\n */\nfunction logSecurityEvent(event: string, details: any): void {\n  const logData = {\n    event,\n    timestamp: new Date().toISOString(),\n    ...details,\n  };\n  \n  if (process.env.NODE_ENV === 'development') {\n    console.log('Rate Limit Event:', logData);\n  }\n  \n  // TODO: Integrate with audit logging system\n}\n\n/**\n * Cleanup function for graceful shutdown\n */\nexport async function cleanup(): Promise<void> {\n  // Cleanup not needed for memory-only rate limiter\n  // In production with persistent storage, implement cleanup here\n}\n\n// Initialize default rate limiters on module load\nif (process.env.NODE_ENV !== 'test') {\n  initializeDefaultRateLimiters();\n}\n\nexport default {\n  createRateLimiter,\n  getRateLimiter,\n  applyRateLimit,\n  createRateLimitMiddleware,\n  initializeDefaultRateLimiters,\n  createDynamicRateLimit,\n  getRateLimitStatus,\n  resetRateLimit,\n  withRateLimit,\n  cleanup,\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 988, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/security/session-edge.ts"],"sourcesContent":["/**\n * Secure Session Management for Edge Runtime\n * Uses Web Crypto API instead of Node.js crypto module\n */\n\nimport { getIronSession, IronSession, SessionOptions } from 'iron-session';\nimport { NextRequest, NextResponse } from 'next/server';\nimport { SECURITY_CONFIG, SECURITY_EVENTS } from '../../config/security.config';\n\n// Session Data Interface\nexport interface SessionData {\n  userId: string;\n  email: string;\n  role: string;\n  permissions: string[];\n  firstName: string;\n  lastName: string;\n  isLoggedIn: boolean;\n  loginTime: number;\n  lastActivity: number;\n  ipAddress?: string;\n  userAgent?: string;\n  sessionId: string;\n  csrfToken?: string;\n  twoFactorVerified: boolean;\n  deviceFingerprint?: string;\n  loginAttempts?: number;\n  accountLocked?: boolean;\n  passwordChangeRequired?: boolean;\n}\n\n// Session Configuration\nconst sessionOptions: SessionOptions = {\n  password: process.env.SESSION_SECRET || 'complex_password_at_least_32_characters_long',\n  cookieName: SECURITY_CONFIG.session.cookieName,\n  cookieOptions: {\n    secure: SECURITY_CONFIG.session.secure,\n    httpOnly: SECURITY_CONFIG.session.httpOnly,\n    maxAge: SECURITY_CONFIG.session.maxAge,\n    sameSite: SECURITY_CONFIG.session.sameSite,\n    path: SECURITY_CONFIG.session.path,\n    domain: SECURITY_CONFIG.session.domain,\n  },\n  ttl: SECURITY_CONFIG.session.maxAge / 1000, // Convert to seconds\n};\n\n/**\n * Generate random session ID using Web Crypto API\n */\nexport function generateSessionId(): string {\n  const array = new Uint8Array(32);\n  crypto.getRandomValues(array);\n  return Array.from(array).map(b => b.toString(16).padStart(2, '0')).join('');\n}\n\n/**\n * Create hash using Web Crypto API\n */\nexport async function createHash(data: string): Promise<string> {\n  const encoder = new TextEncoder();\n  const dataBuffer = encoder.encode(data);\n  const hashBuffer = await crypto.subtle.digest('SHA-256', dataBuffer);\n  return Array.from(new Uint8Array(hashBuffer))\n    .map(b => b.toString(16).padStart(2, '0'))\n    .join('');\n}\n\n/**\n * Get session from request\n */\nexport async function getSession(\n  req: NextRequest,\n  res: NextResponse\n): Promise<IronSession<SessionData>> {\n  const session = await getIronSession<SessionData>(req, res, sessionOptions);\n  return session;\n}\n\n/**\n * Create a new session\n */\nexport async function createSession(\n  req: NextRequest,\n  res: NextResponse,\n  userData: Partial<SessionData>\n): Promise<IronSession<SessionData>> {\n  const session = await getSession(req, res);\n  \n  // Generate session ID\n  const sessionId = generateSessionId();\n  \n  // Set session data\n  Object.assign(session, {\n    ...userData,\n    sessionId,\n    isLoggedIn: true,\n    loginTime: Date.now(),\n    lastActivity: Date.now(),\n    ipAddress: req.ip || req.headers.get('x-forwarded-for') || 'unknown',\n    userAgent: req.headers.get('user-agent') || 'unknown',\n    twoFactorVerified: userData.twoFactorVerified || false,\n  });\n  \n  await session.save();\n  \n  // Log session creation\n  logSessionEvent(SECURITY_EVENTS.SESSION_CREATED, {\n    userId: userData.userId,\n    sessionId,\n    ipAddress: session.ipAddress,\n  });\n  \n  return session;\n}\n\n/**\n * Validate session\n */\nexport async function validateSession(\n  session: IronSession<SessionData>\n): Promise<{ valid: boolean; reason?: string }> {\n  // Check if session exists and is logged in\n  if (!session || !session.isLoggedIn) {\n    return { valid: false, reason: 'No active session' };\n  }\n  \n  // Check session timeout\n  const now = Date.now();\n  const sessionAge = now - session.loginTime;\n  const inactivityPeriod = now - session.lastActivity;\n  \n  if (sessionAge > SECURITY_CONFIG.session.absoluteTimeout) {\n    return { valid: false, reason: 'Session expired (absolute timeout)' };\n  }\n  \n  if (inactivityPeriod > SECURITY_CONFIG.session.idleTimeout) {\n    return { valid: false, reason: 'Session expired (idle timeout)' };\n  }\n  \n  // Check if account is locked\n  if (session.accountLocked) {\n    return { valid: false, reason: 'Account locked' };\n  }\n  \n  // Check if password change is required\n  if (session.passwordChangeRequired) {\n    return { valid: false, reason: 'Password change required' };\n  }\n  \n  return { valid: true };\n}\n\n/**\n * Refresh session activity\n */\nexport async function refreshSession(\n  session: IronSession<SessionData>\n): Promise<void> {\n  session.lastActivity = Date.now();\n  await session.save();\n}\n\n/**\n * Destroy session\n */\nexport async function destroySession(\n  session: IronSession<SessionData>\n): Promise<void> {\n  const sessionId = session.sessionId;\n  const userId = session.userId;\n  \n  session.destroy();\n  \n  // Log session destruction\n  logSessionEvent(SECURITY_EVENTS.SESSION_DESTROYED, {\n    userId,\n    sessionId,\n  });\n}\n\n/**\n * Session middleware for API routes\n */\nexport function withSession(\n  handler: (\n    req: NextRequest,\n    res: NextResponse,\n    session: IronSession<SessionData>\n  ) => Promise<NextResponse> | NextResponse\n) {\n  return async (req: NextRequest, res: NextResponse): Promise<NextResponse> => {\n    const session = await getSession(req, res);\n    \n    // Validate session\n    const validation = await validateSession(session);\n    if (!validation.valid) {\n      return new NextResponse(\n        JSON.stringify({\n          error: 'Unauthorized',\n          message: validation.reason,\n        }),\n        {\n          status: 401,\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n    }\n    \n    // Refresh session activity\n    await refreshSession(session);\n    \n    // Call the handler with session\n    return handler(req, res, session);\n  };\n}\n\n/**\n * Check if user has required permission\n */\nexport function hasPermission(\n  session: IronSession<SessionData>,\n  permission: string\n): boolean {\n  return session.permissions?.includes(permission) || false;\n}\n\n/**\n * Check if user has required role\n */\nexport function hasRole(\n  session: IronSession<SessionData>,\n  role: string\n): boolean {\n  return session.role === role;\n}\n\n/**\n * Log session events\n */\nfunction logSessionEvent(event: string, details: any): void {\n  const logData = {\n    event,\n    timestamp: new Date().toISOString(),\n    ...details,\n  };\n  \n  // In production, this would go to a proper logging service\n  if (process.env.NODE_ENV === 'development') {\n    console.log('Session Event:', logData);\n  }\n}\n\n/**\n * Session utilities for client-side\n */\nexport const SessionUtils = {\n  /**\n   * Check if user is logged in\n   */\n  async isLoggedIn(): Promise<boolean> {\n    try {\n      const response = await fetch('/api/auth/session');\n      return response.ok;\n    } catch {\n      return false;\n    }\n  },\n  \n  /**\n   * Get current session data\n   */\n  async getSessionData(): Promise<SessionData | null> {\n    try {\n      const response = await fetch('/api/auth/session');\n      if (response.ok) {\n        return await response.json();\n      }\n      return null;\n    } catch {\n      return null;\n    }\n  },\n  \n  /**\n   * Logout\n   */\n  async logout(): Promise<void> {\n    await fetch('/api/auth/logout', { method: 'POST' });\n  },\n};\n\n/**\n * Session middleware for Next.js middleware\n */\nexport function createSessionMiddleware() {\n  return async (request: NextRequest): Promise<NextResponse | null> => {\n    // This is a simplified version for middleware\n    // Actual session handling is done in API routes\n    return null;\n  };\n}\n\nexport default {\n  getSession,\n  createSession,\n  validateSession,\n  refreshSession,\n  destroySession,\n  withSession,\n  hasPermission,\n  hasRole,\n  generateSessionId,\n  createSessionMiddleware,\n  SessionUtils,\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1232, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/security/headers.ts"],"sourcesContent":["/**\n * Security Headers Configuration\n * Comprehensive security headers to protect against various web vulnerabilities\n */\n\nimport { NextResponse } from 'next/server';\nimport { SECURITY_CONFIG } from '../../config/security.config';\n\n// Security Headers Interface\nexport interface SecurityHeaders {\n  [key: string]: string;\n}\n\n// Content Security Policy Builder\nclass CSPBuilder {\n  private directives: Map<string, string[]> = new Map();\n\n  constructor(initialConfig: Record<string, string[]> = {}) {\n    Object.entries(initialConfig).forEach(([directive, values]) => {\n      this.directives.set(directive, [...values]);\n    });\n  }\n\n  addDirective(directive: string, values: string[]): this {\n    if (this.directives.has(directive)) {\n      const existing = this.directives.get(directive)!;\n      this.directives.set(directive, [...existing, ...values]);\n    } else {\n      this.directives.set(directive, [...values]);\n    }\n    return this;\n  }\n\n  removeDirective(directive: string): this {\n    this.directives.delete(directive);\n    return this;\n  }\n\n  build(): string {\n    const policies: string[] = [];\n    \n    this.directives.forEach((values, directive) => {\n      const uniqueValues = [...new Set(values)];\n      policies.push(`${directive} ${uniqueValues.join(' ')}`);\n    });\n\n    return policies.join('; ');\n  }\n}\n\n/**\n * Get base security headers\n */\nexport function getBaseSecurityHeaders(): SecurityHeaders {\n  return {\n    // Prevent clickjacking attacks\n    'X-Frame-Options': SECURITY_CONFIG.headers['X-Frame-Options'],\n    \n    // Prevent MIME type sniffing\n    'X-Content-Type-Options': SECURITY_CONFIG.headers['X-Content-Type-Options'],\n    \n    // Enable XSS protection (legacy browsers)\n    'X-XSS-Protection': SECURITY_CONFIG.headers['X-XSS-Protection'],\n    \n    // Control referrer information\n    'Referrer-Policy': SECURITY_CONFIG.headers['Referrer-Policy'],\n    \n    // Control browser features\n    'Permissions-Policy': SECURITY_CONFIG.headers['Permissions-Policy'],\n    \n    // Force HTTPS in production\n    ...(process.env.NODE_ENV === 'production' && {\n      'Strict-Transport-Security': SECURITY_CONFIG.headers['Strict-Transport-Security'],\n    }),\n    \n    // Prevent DNS prefetching\n    'X-DNS-Prefetch-Control': 'off',\n    \n    // Disable client-side caching of sensitive content\n    'Cache-Control': 'no-store, no-cache, must-revalidate, private',\n    'Pragma': 'no-cache',\n    'Expires': '0',\n    \n    // Server information disclosure\n    'Server': 'Restaurant-Dashboard',\n    \n    // Cross-Origin policies\n    'Cross-Origin-Opener-Policy': 'same-origin',\n    'Cross-Origin-Embedder-Policy': 'require-corp',\n    'Cross-Origin-Resource-Policy': 'same-site',\n  };\n}\n\n/**\n * Build Content Security Policy\n */\nexport function buildCSP(customConfig?: Record<string, string[]>): string {\n  const baseConfig = {\n    'default-src': SECURITY_CONFIG.csp.defaultSrc,\n    'script-src': SECURITY_CONFIG.csp.scriptSrc,\n    'style-src': SECURITY_CONFIG.csp.styleSrc,\n    'img-src': SECURITY_CONFIG.csp.imgSrc,\n    'font-src': SECURITY_CONFIG.csp.fontSrc,\n    'connect-src': SECURITY_CONFIG.csp.connectSrc,\n    'frame-src': SECURITY_CONFIG.csp.frameSrc,\n    'object-src': SECURITY_CONFIG.csp.objectSrc,\n    'base-uri': SECURITY_CONFIG.csp.baseUri,\n    'form-action': SECURITY_CONFIG.csp.formAction,\n    ...(SECURITY_CONFIG.csp.upgradeInsecureRequests && {\n      'upgrade-insecure-requests': [],\n    }),\n  };\n\n  const builder = new CSPBuilder(baseConfig);\n\n  // Add custom configuration if provided\n  if (customConfig) {\n    Object.entries(customConfig).forEach(([directive, values]) => {\n      builder.addDirective(directive, values);\n    });\n  }\n\n  // Development-specific CSP adjustments\n  if (process.env.NODE_ENV === 'development') {\n    builder.addDirective('script-src', [\"'unsafe-eval'\"]);\n    builder.addDirective('connect-src', ['ws://localhost:*', 'wss://localhost:*']);\n  }\n\n  return builder.build();\n}\n\n/**\n * Get security headers for API routes\n */\nexport function getAPISecurityHeaders(): SecurityHeaders {\n  return {\n    ...getBaseSecurityHeaders(),\n    'Content-Type': 'application/json',\n    'X-Robots-Tag': 'noindex, nofollow, nosnippet, noarchive',\n  };\n}\n\n/**\n * Get security headers for file uploads\n */\nexport function getFileUploadSecurityHeaders(): SecurityHeaders {\n  return {\n    ...getBaseSecurityHeaders(),\n    'Content-Security-Policy': buildCSP({\n      'script-src': [\"'none'\"],\n      'object-src': [\"'none'\"],\n    }),\n    'X-Content-Type-Options': 'nosniff',\n    'Content-Disposition': 'attachment',\n  };\n}\n\n/**\n * Get security headers for authentication routes\n */\nexport function getAuthSecurityHeaders(): SecurityHeaders {\n  return {\n    ...getBaseSecurityHeaders(),\n    'Content-Security-Policy': buildCSP({\n      'form-action': [\"'self'\"],\n      'frame-ancestors': [\"'none'\"],\n    }),\n    'Cache-Control': 'no-store, no-cache, must-revalidate, private, max-age=0',\n  };\n}\n\n/**\n * Get security headers for admin routes\n */\nexport function getAdminSecurityHeaders(): SecurityHeaders {\n  return {\n    ...getBaseSecurityHeaders(),\n    'Content-Security-Policy': buildCSP({\n      'script-src': [\"'self'\", \"'unsafe-inline'\"], // Admin may need inline scripts\n      'frame-ancestors': [\"'none'\"],\n    }),\n    'X-Admin-Route': 'true', // Custom header to identify admin routes\n  };\n}\n\n/**\n * Apply security headers to NextResponse\n */\nexport function applySecurityHeaders(\n  response: NextResponse,\n  headerType: 'base' | 'api' | 'upload' | 'auth' | 'admin' = 'base',\n  customHeaders?: SecurityHeaders\n): NextResponse {\n  let headers: SecurityHeaders;\n\n  switch (headerType) {\n    case 'api':\n      headers = getAPISecurityHeaders();\n      break;\n    case 'upload':\n      headers = getFileUploadSecurityHeaders();\n      break;\n    case 'auth':\n      headers = getAuthSecurityHeaders();\n      break;\n    case 'admin':\n      headers = getAdminSecurityHeaders();\n      break;\n    default:\n      headers = getBaseSecurityHeaders();\n  }\n\n  // Add Content Security Policy\n  headers['Content-Security-Policy'] = buildCSP();\n\n  // Merge custom headers\n  if (customHeaders) {\n    headers = { ...headers, ...customHeaders };\n  }\n\n  // Apply headers to response\n  Object.entries(headers).forEach(([name, value]) => {\n    response.headers.set(name, value);\n  });\n\n  return response;\n}\n\n/**\n * Create security headers middleware\n */\nexport function createSecurityHeadersMiddleware() {\n  return (response: NextResponse, pathname: string): NextResponse => {\n    // Determine header type based on pathname\n    let headerType: 'base' | 'api' | 'upload' | 'auth' | 'admin' = 'base';\n\n    if (pathname.startsWith('/api/')) {\n      if (pathname.includes('/upload')) {\n        headerType = 'upload';\n      } else if (pathname.includes('/auth')) {\n        headerType = 'auth';\n      } else if (pathname.includes('/admin')) {\n        headerType = 'admin';\n      } else {\n        headerType = 'api';\n      }\n    } else if (pathname.includes('/admin')) {\n      headerType = 'admin';\n    } else if (pathname.includes('/auth') || pathname.includes('/login') || pathname.includes('/register')) {\n      headerType = 'auth';\n    }\n\n    return applySecurityHeaders(response, headerType);\n  };\n}\n\n/**\n * Validate CSP violation reports\n */\nexport interface CSPViolationReport {\n  'document-uri': string;\n  referrer: string;\n  'violated-directive': string;\n  'effective-directive': string;\n  'original-policy': string;\n  'blocked-uri': string;\n  'line-number': number;\n  'column-number': number;\n  'source-file': string;\n  'status-code': number;\n  'script-sample': string;\n}\n\n/**\n * Handle CSP violation reports\n */\nexport function handleCSPViolation(report: CSPViolationReport): void {\n  // Log the violation\n  console.warn('CSP Violation:', {\n    documentUri: report['document-uri'],\n    violatedDirective: report['violated-directive'],\n    blockedUri: report['blocked-uri'],\n    sourceFile: report['source-file'],\n    lineNumber: report['line-number'],\n    timestamp: new Date().toISOString(),\n  });\n\n  // In production, you might want to:\n  // 1. Send to logging service\n  // 2. Alert security team for suspicious patterns\n  // 3. Update CSP policy if legitimate violations occur frequently\n  \n  if (process.env.NODE_ENV === 'production') {\n    // TODO: Integrate with monitoring/alerting system\n  }\n}\n\n/**\n * Generate nonce for inline scripts (when absolutely necessary)\n */\nexport function generateNonce(): string {\n  const crypto = require('crypto');\n  return crypto.randomBytes(16).toString('base64');\n}\n\n/**\n * Build CSP with nonce support\n */\nexport function buildCSPWithNonce(nonce: string, customConfig?: Record<string, string[]>): string {\n  const configWithNonce = {\n    ...customConfig,\n    'script-src': [\n      ...(customConfig?.['script-src'] || SECURITY_CONFIG.csp.scriptSrc),\n      `'nonce-${nonce}'`,\n    ],\n  };\n\n  return buildCSP(configWithNonce);\n}\n\n/**\n * Security headers for different environments\n */\nexport function getEnvironmentSecurityHeaders(): SecurityHeaders {\n  const baseHeaders = getBaseSecurityHeaders();\n\n  if (process.env.NODE_ENV === 'development') {\n    return {\n      ...baseHeaders,\n      'Content-Security-Policy': buildCSP({\n        'script-src': [\"'self'\", \"'unsafe-eval'\", \"'unsafe-inline'\"],\n        'style-src': [\"'self'\", \"'unsafe-inline'\"],\n        'connect-src': [\"'self'\", 'ws://localhost:*', 'wss://localhost:*', 'http://localhost:*'],\n      }),\n    };\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    return {\n      ...baseHeaders,\n      'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload',\n      'Content-Security-Policy': buildCSP(),\n    };\n  }\n\n  return baseHeaders;\n}\n\n/**\n * Check security headers compliance\n */\nexport function checkSecurityHeadersCompliance(headers: Record<string, string>): {\n  score: number;\n  passed: string[];\n  failed: string[];\n  warnings: string[];\n} {\n  const requiredHeaders = [\n    'X-Frame-Options',\n    'X-Content-Type-Options',\n    'Referrer-Policy',\n    'Content-Security-Policy',\n  ];\n\n  const recommendedHeaders = [\n    'Strict-Transport-Security',\n    'X-XSS-Protection',\n    'Permissions-Policy',\n  ];\n\n  const passed: string[] = [];\n  const failed: string[] = [];\n  const warnings: string[] = [];\n\n  // Check required headers\n  requiredHeaders.forEach(header => {\n    if (headers[header]) {\n      passed.push(header);\n    } else {\n      failed.push(header);\n    }\n  });\n\n  // Check recommended headers\n  recommendedHeaders.forEach(header => {\n    if (headers[header]) {\n      passed.push(header);\n    } else {\n      warnings.push(`Recommended header missing: ${header}`);\n    }\n  });\n\n  // Calculate score\n  const totalChecks = requiredHeaders.length + recommendedHeaders.length;\n  const score = Math.round((passed.length / totalChecks) * 100);\n\n  return { score, passed, failed, warnings };\n}\n\n/**\n * Dynamic CSP for specific pages/routes\n */\nexport class DynamicCSP {\n  private policies: Map<string, Record<string, string[]>> = new Map();\n\n  addPagePolicy(pathname: string, policy: Record<string, string[]>): void {\n    this.policies.set(pathname, policy);\n  }\n\n  getCSPForPath(pathname: string, customConfig?: Record<string, string[]>): string {\n    const pagePolicy = this.policies.get(pathname) || {};\n    const mergedConfig = { ...customConfig, ...pagePolicy };\n    return buildCSP(mergedConfig);\n  }\n\n  removePagePolicy(pathname: string): void {\n    this.policies.delete(pathname);\n  }\n}\n\n// Export singleton instance\nexport const dynamicCSP = new DynamicCSP();\n\nexport default {\n  getBaseSecurityHeaders,\n  buildCSP,\n  getAPISecurityHeaders,\n  getFileUploadSecurityHeaders,\n  getAuthSecurityHeaders,\n  getAdminSecurityHeaders,\n  applySecurityHeaders,\n  createSecurityHeadersMiddleware,\n  handleCSPViolation,\n  generateNonce,\n  buildCSPWithNonce,\n  getEnvironmentSecurityHeaders,\n  checkSecurityHeadersCompliance,\n  DynamicCSP,\n  dynamicCSP,\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1620, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/security/sanitization.ts"],"sourcesContent":["/**\n * Input Sanitization Utilities\n * Comprehensive input cleaning and validation to prevent XSS, injection attacks, and data corruption\n */\n\nimport DOMPurify from 'dompurify';\nimport validator from 'validator';\nimport { SECURITY_PATTERNS } from '../../config/security.config';\n\n// Sanitization Configuration\nconst SANITIZATION_CONFIG = {\n  // HTML sanitization options\n  html: {\n    allowedTags: [\n      'p', 'br', 'strong', 'em', 'u', 'ol', 'ul', 'li', 'blockquote',\n      'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'a', 'span', 'div'\n    ],\n    allowedAttributes: {\n      'a': ['href', 'title', 'target'],\n      'span': ['class'],\n      'div': ['class'],\n    },\n    allowedSchemes: ['http', 'https', 'mailto'],\n    allowedClasses: ['highlight', 'text-bold', 'text-italic'],\n  },\n  \n  // File name sanitization\n  fileName: {\n    maxLength: 255,\n    allowedChars: /^[a-zA-Z0-9._-]+$/,\n    forbiddenNames: ['CON', 'PRN', 'AUX', 'NUL', 'COM1', 'COM2', 'COM3', 'COM4', 'COM5', 'COM6', 'COM7', 'COM8', 'COM9', 'LPT1', 'LPT2', 'LPT3', 'LPT4', 'LPT5', 'LPT6', 'LPT7', 'LPT8', 'LPT9'],\n  },\n  \n  // SQL injection patterns (more comprehensive)\n  sqlPatterns: [\n    /(\\b(ALTER|CREATE|DELETE|DROP|EXEC(UTE)?|INSERT|MERGE|SELECT|UPDATE|UNION)\\b)/gi,\n    /(\\b(SCRIPT|JAVASCRIPT|VBSCRIPT|ONLOAD|ONERROR|ONCLICK)\\b)/gi,\n    /((\\%27)|(\\'))((\\%6F)|o|(\\%4F))((\\%72)|r|(\\%52))/gi,\n    /((\\%27)|(\\'))union/gi,\n    /exec(\\s|\\+)+(s|x)p\\w+/gi,\n    /UNION(?:\\s|\\+|\\/\\*[\\s\\S]*?\\*\\/)*SELECT/gi,\n  ],\n  \n  // XSS patterns (comprehensive)\n  xssPatterns: [\n    /<script[^>]*>[\\s\\S]*?<\\/script>/gi,\n    /<iframe[^>]*>[\\s\\S]*?<\\/iframe>/gi,\n    /<object[^>]*>[\\s\\S]*?<\\/object>/gi,\n    /<embed[^>]*>/gi,\n    /<link[^>]*>/gi,\n    /<style[^>]*>[\\s\\S]*?<\\/style>/gi,\n    /javascript:/gi,\n    /vbscript:/gi,\n    /data:text\\/html/gi,\n    /on\\w+\\s*=/gi,\n    /expression\\s*\\(/gi,\n    /@import/gi,\n    /binding\\s*:/gi,\n    /behavior\\s*:/gi,\n  ],\n  \n  // Path traversal patterns\n  pathTraversalPatterns: [\n    /\\.\\./g,\n    /\\.\\\\\\./g,\n    /\\.\\//g,\n    /~\\//g,\n    /%2e%2e/gi,\n    /%2f/gi,\n    /%5c/gi,\n  ],\n};\n\n/**\n * Sanitize HTML content using DOMPurify\n */\nexport function sanitizeHTML(input: string, allowedTags?: string[]): string {\n  if (typeof input !== 'string') return '';\n  \n  // Configure DOMPurify\n  const config: any = {\n    ALLOWED_TAGS: allowedTags || SANITIZATION_CONFIG.html.allowedTags,\n    ALLOWED_ATTR: Object.keys(SANITIZATION_CONFIG.html.allowedAttributes).reduce((acc, tag) => {\n      const attrs = SANITIZATION_CONFIG.html.allowedAttributes[tag as keyof typeof SANITIZATION_CONFIG.html.allowedAttributes];\n      return [...acc, ...attrs];\n    }, [] as string[]),\n    ALLOWED_URI_REGEXP: new RegExp(`^(${SANITIZATION_CONFIG.html.allowedSchemes.join('|')}):`, 'i'),\n  };\n  \n  return DOMPurify.sanitize(input, config);\n}\n\n/**\n * Sanitize plain text by escaping HTML characters\n */\nexport function sanitizeText(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  return input\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n}\n\n/**\n * Remove potential SQL injection patterns\n */\nexport function sanitizeSQL(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  let sanitized = input;\n  \n  // Remove SQL injection patterns\n  SANITIZATION_CONFIG.sqlPatterns.forEach(pattern => {\n    sanitized = sanitized.replace(pattern, '');\n  });\n  \n  return sanitized.trim();\n}\n\n/**\n * Remove XSS patterns from input\n */\nexport function sanitizeXSS(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  let sanitized = input;\n  \n  // Remove XSS patterns\n  SANITIZATION_CONFIG.xssPatterns.forEach(pattern => {\n    sanitized = sanitized.replace(pattern, '');\n  });\n  \n  return sanitized;\n}\n\n/**\n * Sanitize email address\n */\nexport function sanitizeEmail(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  const email = input.toLowerCase().trim();\n  \n  // Basic email validation and sanitization\n  if (!validator.isEmail(email)) {\n    throw new Error('Invalid email format');\n  }\n  \n  // Remove potential XSS from email\n  return sanitizeXSS(email);\n}\n\n/**\n * Sanitize phone number\n */\nexport function sanitizePhone(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  // Remove all non-digit characters except +, -, (, ), and spaces\n  const sanitized = input.replace(/[^\\d+\\-\\(\\)\\s]/g, '');\n  \n  // Validate format\n  if (!SECURITY_PATTERNS.PHONE_REGEX.test(sanitized)) {\n    throw new Error('Invalid phone number format');\n  }\n  \n  return sanitized.trim();\n}\n\n/**\n * Sanitize file name\n */\nexport function sanitizeFileName(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  let fileName = input.trim();\n  \n  // Check length\n  if (fileName.length > SANITIZATION_CONFIG.fileName.maxLength) {\n    fileName = fileName.substring(0, SANITIZATION_CONFIG.fileName.maxLength);\n  }\n  \n  // Remove path traversal attempts\n  SANITIZATION_CONFIG.pathTraversalPatterns.forEach(pattern => {\n    fileName = fileName.replace(pattern, '');\n  });\n  \n  // Remove or replace unsafe characters\n  fileName = fileName.replace(/[<>:\"|?*]/g, '_');\n  \n  // Check for forbidden names (Windows reserved names)\n  const nameWithoutExt = fileName.split('.')[0].toUpperCase();\n  if (SANITIZATION_CONFIG.fileName.forbiddenNames.includes(nameWithoutExt)) {\n    fileName = `safe_${fileName}`;\n  }\n  \n  // Ensure it doesn't start with a dot or dash\n  if (fileName.startsWith('.') || fileName.startsWith('-')) {\n    fileName = `file_${fileName}`;\n  }\n  \n  return fileName;\n}\n\n/**\n * Sanitize file path\n */\nexport function sanitizeFilePath(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  let path = input.trim();\n  \n  // Remove path traversal attempts\n  SANITIZATION_CONFIG.pathTraversalPatterns.forEach(pattern => {\n    path = path.replace(pattern, '');\n  });\n  \n  // Normalize path separators\n  path = path.replace(/\\\\/g, '/');\n  \n  // Remove multiple consecutive slashes\n  path = path.replace(/\\/+/g, '/');\n  \n  // Remove leading slash if present\n  if (path.startsWith('/')) {\n    path = path.substring(1);\n  }\n  \n  return path;\n}\n\n/**\n * Sanitize URL\n */\nexport function sanitizeURL(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  const url = input.trim();\n  \n  // Validate URL format\n  if (!validator.isURL(url, {\n    protocols: ['http', 'https'],\n    require_protocol: true,\n    require_valid_protocol: true,\n  })) {\n    throw new Error('Invalid URL format');\n  }\n  \n  // Remove XSS attempts\n  return sanitizeXSS(url);\n}\n\n/**\n * Sanitize numeric input\n */\nexport function sanitizeNumber(input: string | number, options: {\n  min?: number;\n  max?: number;\n  allowDecimals?: boolean;\n} = {}): number {\n  const { min, max, allowDecimals = true } = options;\n  \n  let numStr = typeof input === 'number' ? input.toString() : input;\n  \n  if (typeof numStr !== 'string') {\n    throw new Error('Invalid number input');\n  }\n  \n  // Remove non-numeric characters except decimal point and minus sign\n  numStr = numStr.replace(/[^\\d.-]/g, '');\n  \n  if (!allowDecimals) {\n    numStr = numStr.replace(/\\./g, '');\n  }\n  \n  const num = parseFloat(numStr);\n  \n  if (isNaN(num)) {\n    throw new Error('Invalid number format');\n  }\n  \n  if (min !== undefined && num < min) {\n    throw new Error(`Number must be at least ${min}`);\n  }\n  \n  if (max !== undefined && num > max) {\n    throw new Error(`Number must be at most ${max}`);\n  }\n  \n  return num;\n}\n\n/**\n * Sanitize JSON input\n */\nexport function sanitizeJSON(input: string): any {\n  if (typeof input !== 'string') return null;\n  \n  try {\n    // First, sanitize the string for XSS\n    const sanitized = sanitizeXSS(input);\n    \n    // Parse JSON\n    const parsed = JSON.parse(sanitized);\n    \n    // Recursively sanitize object values if it's an object\n    if (typeof parsed === 'object' && parsed !== null) {\n      return sanitizeObject(parsed);\n    }\n    \n    return parsed;\n  } catch (error) {\n    throw new Error('Invalid JSON format');\n  }\n}\n\n/**\n * Recursively sanitize object properties\n */\nexport function sanitizeObject(obj: any, depth: number = 0): any {\n  // Prevent deep recursion attacks\n  if (depth > 10) {\n    throw new Error('Object nesting too deep');\n  }\n  \n  if (Array.isArray(obj)) {\n    return obj.map(item => sanitizeObject(item, depth + 1));\n  }\n  \n  if (typeof obj === 'object' && obj !== null) {\n    const sanitized: any = {};\n    \n    for (const [key, value] of Object.entries(obj)) {\n      // Sanitize key\n      const sanitizedKey = sanitizeText(key);\n      \n      if (typeof value === 'string') {\n        sanitized[sanitizedKey] = sanitizeText(value);\n      } else if (typeof value === 'object') {\n        sanitized[sanitizedKey] = sanitizeObject(value, depth + 1);\n      } else {\n        sanitized[sanitizedKey] = value;\n      }\n    }\n    \n    return sanitized;\n  }\n  \n  return obj;\n}\n\n/**\n * Sanitize search query\n */\nexport function sanitizeSearchQuery(input: string): string {\n  if (typeof input !== 'string') return '';\n  \n  let query = input.trim();\n  \n  // Remove potential SQL injection\n  query = sanitizeSQL(query);\n  \n  // Remove XSS attempts\n  query = sanitizeXSS(query);\n  \n  // Limit length\n  if (query.length > 100) {\n    query = query.substring(0, 100);\n  }\n  \n  // Remove special regex characters that could cause issues\n  query = query.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  \n  return query;\n}\n\n/**\n * Sanitize form data\n */\nexport function sanitizeFormData(data: Record<string, any>): Record<string, any> {\n  const sanitized: Record<string, any> = {};\n  \n  for (const [key, value] of Object.entries(data)) {\n    const sanitizedKey = sanitizeText(key);\n    \n    if (typeof value === 'string') {\n      // Apply different sanitization based on field type\n      switch (sanitizedKey.toLowerCase()) {\n        case 'email':\n          sanitized[sanitizedKey] = sanitizeEmail(value);\n          break;\n        case 'phone':\n          sanitized[sanitizedKey] = sanitizePhone(value);\n          break;\n        case 'url':\n        case 'website':\n          sanitized[sanitizedKey] = sanitizeURL(value);\n          break;\n        default:\n          sanitized[sanitizedKey] = sanitizeText(value);\n      }\n    } else if (typeof value === 'number') {\n      sanitized[sanitizedKey] = value;\n    } else if (typeof value === 'boolean') {\n      sanitized[sanitizedKey] = value;\n    } else if (Array.isArray(value)) {\n      sanitized[sanitizedKey] = value.map(item => \n        typeof item === 'string' ? sanitizeText(item) : item\n      );\n    } else if (typeof value === 'object' && value !== null) {\n      sanitized[sanitizedKey] = sanitizeObject(value);\n    } else {\n      sanitized[sanitizedKey] = value;\n    }\n  }\n  \n  return sanitized;\n}\n\n/**\n * Comprehensive input sanitization function\n */\nexport function sanitizeInput(\n  input: any,\n  type: 'text' | 'html' | 'email' | 'phone' | 'url' | 'filename' | 'number' | 'json' | 'search' = 'text'\n): any {\n  if (input === null || input === undefined) return input;\n  \n  switch (type) {\n    case 'text':\n      return sanitizeText(input);\n    case 'html':\n      return sanitizeHTML(input);\n    case 'email':\n      return sanitizeEmail(input);\n    case 'phone':\n      return sanitizePhone(input);\n    case 'url':\n      return sanitizeURL(input);\n    case 'filename':\n      return sanitizeFileName(input);\n    case 'number':\n      return sanitizeNumber(input);\n    case 'json':\n      return sanitizeJSON(input);\n    case 'search':\n      return sanitizeSearchQuery(input);\n    default:\n      return sanitizeText(input);\n  }\n}\n\n/**\n * Validate input against common attack patterns\n */\nexport function validateInput(input: string): { \n  isValid: boolean; \n  threats: string[]; \n  sanitized: string \n} {\n  if (typeof input !== 'string') {\n    return { isValid: false, threats: ['invalid_type'], sanitized: '' };\n  }\n  \n  const threats: string[] = [];\n  let sanitized = input;\n  \n  // Check for SQL injection\n  if (SECURITY_PATTERNS.SQL_INJECTION_PATTERNS.some(pattern => pattern.test(input))) {\n    threats.push('sql_injection');\n    sanitized = sanitizeSQL(sanitized);\n  }\n  \n  // Check for XSS\n  if (SECURITY_PATTERNS.XSS_PATTERNS.some(pattern => pattern.test(input))) {\n    threats.push('xss');\n    sanitized = sanitizeXSS(sanitized);\n  }\n  \n  // Check for path traversal\n  if (SANITIZATION_CONFIG.pathTraversalPatterns.some(pattern => pattern.test(input))) {\n    threats.push('path_traversal');\n    sanitized = sanitizeFilePath(sanitized);\n  }\n  \n  return {\n    isValid: threats.length === 0,\n    threats,\n    sanitized,\n  };\n}\n\n/**\n * Create sanitization middleware for API routes\n */\nexport function createSanitizationMiddleware() {\n  return async (req: Request): Promise<any> => {\n    // Sanitize request body if present\n    if (req.body) {\n      req.body = sanitizeFormData(req.body);\n    }\n    \n    // Sanitize query parameters\n    const url = new URL(req.url);\n    for (const [key, value] of url.searchParams.entries()) {\n      const sanitizedValue = sanitizeText(value);\n      url.searchParams.set(key, sanitizedValue);\n    }\n    \n    return req;\n  };\n}\n\nexport default {\n  sanitizeHTML,\n  sanitizeText,\n  sanitizeSQL,\n  sanitizeXSS,\n  sanitizeEmail,\n  sanitizePhone,\n  sanitizeFileName,\n  sanitizeFilePath,\n  sanitizeURL,\n  sanitizeNumber,\n  sanitizeJSON,\n  sanitizeObject,\n  sanitizeSearchQuery,\n  sanitizeFormData,\n  sanitizeInput,\n  validateInput,\n  createSanitizationMiddleware,\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2106, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["/**\n * Security Middleware\n * Central security middleware that coordinates all security measures\n */\n\nimport { NextRequest, NextResponse } from 'next/server';\n// Temporarily disabled security middleware due to missing dependencies\nimport { createCSRFMiddleware } from './lib/security/csrf-edge';\nimport { createRateLimitMiddleware } from './lib/security/rate-limit';\nimport { createSessionMiddleware } from './lib/security/session-edge';\nimport { createSecurityHeadersMiddleware } from './lib/security/headers';\nimport { validateInput } from './lib/security/sanitization';\nimport { SECURITY_CONFIG, SECURITY_EVENTS } from './config/security.config';\n\n// Middleware configuration\nconst MIDDLEWARE_CONFIG = {\n  // Routes that should bypass certain security checks\n  publicRoutes: ['/api/health', '/api/status'],\n  authRoutes: ['/api/auth', '/auth', '/login', '/register'],\n  staticRoutes: ['/_next', '/favicon.ico', '/robots.txt', '/sitemap.xml'],\n  \n  // Routes that require authentication\n  protectedRoutes: ['/dashboard', '/admin', '/settings', '/reports'],\n  \n  // API routes that require CSRF protection\n  csrfProtectedRoutes: ['/api/'],\n  \n  // Routes with specific rate limits\n  rateLimitedRoutes: {\n    '/api/auth/login': 'login',\n    '/api/auth/register': 'login',\n    '/api/auth/reset-password': 'password-reset',\n    '/api/upload': 'file-upload',\n    '/api/reports': 'reports',\n    '/api/search': 'search',\n  },\n};\n\n/**\n * Check if route matches pattern\n */\nfunction matchesRoute(pathname: string, patterns: string[]): boolean {\n  return patterns.some(pattern => {\n    if (pattern.endsWith('*')) {\n      return pathname.startsWith(pattern.slice(0, -1));\n    }\n    if (pattern.endsWith('/')) {\n      return pathname.startsWith(pattern);\n    }\n    return pathname === pattern || pathname.startsWith(pattern + '/');\n  });\n}\n\n/**\n * Check if route is public (no authentication required)\n */\nfunction isPublicRoute(pathname: string): boolean {\n  return matchesRoute(pathname, MIDDLEWARE_CONFIG.publicRoutes) ||\n         matchesRoute(pathname, MIDDLEWARE_CONFIG.staticRoutes);\n}\n\n/**\n * Check if route is protected (authentication required)\n */\nfunction isProtectedRoute(pathname: string): boolean {\n  return matchesRoute(pathname, MIDDLEWARE_CONFIG.protectedRoutes);\n}\n\n/**\n * Check if route requires CSRF protection\n */\nfunction requiresCSRFProtection(pathname: string): boolean {\n  return matchesRoute(pathname, MIDDLEWARE_CONFIG.csrfProtectedRoutes);\n}\n\n/**\n * Get rate limiter name for route\n */\nfunction getRateLimiterForRoute(pathname: string): string | null {\n  for (const [route, limiter] of Object.entries(MIDDLEWARE_CONFIG.rateLimitedRoutes)) {\n    if (pathname.startsWith(route)) {\n      return limiter;\n    }\n  }\n  return 'api'; // Default rate limiter\n}\n\n/**\n * Security event logging\n */\nfunction logSecurityEvent(event: string, details: any): void {\n  const logData = {\n    event,\n    timestamp: new Date().toISOString(),\n    ...details,\n  };\n  \n  if (process.env.NODE_ENV === 'development') {\n    console.log('Security Event:', logData);\n  }\n  \n  // TODO: Integrate with proper logging service\n}\n\n/**\n * Validate request for suspicious patterns\n */\nfunction validateRequest(request: NextRequest): { isValid: boolean; threats: string[] } {\n  const threats: string[] = [];\n  const pathname = request.nextUrl.pathname;\n  const userAgent = request.headers.get('user-agent') || '';\n  const referer = request.headers.get('referer') || '';\n  \n  // Check for malicious user agents\n  const maliciousUAPatterns = [\n    /sqlmap/i,\n    /nmap/i,\n    /nikto/i,\n    /wget/i,\n    /curl.*bot/i,\n    /python-requests/i,\n    /scanner/i,\n  ];\n  \n  if (maliciousUAPatterns.some(pattern => pattern.test(userAgent))) {\n    threats.push('suspicious_user_agent');\n  }\n  \n  // Check for suspicious query parameters\n  const url = request.nextUrl;\n  for (const [key, value] of url.searchParams.entries()) {\n    const validation = validateInput(value);\n    if (!validation.isValid) {\n      threats.push(...validation.threats.map(threat => `query_${threat}`));\n    }\n  }\n  \n  // Check for path traversal in URL\n  if (pathname.includes('../') || pathname.includes('..\\\\') || pathname.includes('%2e%2e')) {\n    threats.push('path_traversal');\n  }\n  \n  // Check for suspicious file extensions\n  const suspiciousExtensions = ['.php', '.asp', '.jsp', '.cgi', '.pl'];\n  if (suspiciousExtensions.some(ext => pathname.includes(ext))) {\n    threats.push('suspicious_file_extension');\n  }\n  \n  return {\n    isValid: threats.length === 0,\n    threats,\n  };\n}\n\n/**\n * Main security middleware function\n */\nexport async function middleware(request: NextRequest): Promise<NextResponse> {\n  const startTime = Date.now();\n  const pathname = request.nextUrl.pathname;\n  const method = request.method;\n  const ip = request.ip || request.headers.get('x-forwarded-for') || 'unknown';\n  \n  // Create base response\n  let response = NextResponse.next();\n  \n  try {\n    // Skip middleware for static assets and health checks\n    if (matchesRoute(pathname, MIDDLEWARE_CONFIG.staticRoutes) || \n        pathname.startsWith('/_next/static/')) {\n      return response;\n    }\n    \n    // Validate request for suspicious patterns\n    const requestValidation = validateRequest(request);\n    if (!requestValidation.isValid) {\n      logSecurityEvent(SECURITY_EVENTS.SUSPICIOUS_ACTIVITY, {\n        ip,\n        pathname,\n        method,\n        userAgent: request.headers.get('user-agent'),\n        threats: requestValidation.threats,\n      });\n      \n      // Block severely suspicious requests\n      if (requestValidation.threats.includes('path_traversal') ||\n          requestValidation.threats.includes('suspicious_user_agent')) {\n        return new NextResponse('Forbidden', { status: 403 });\n      }\n    }\n    \n    // Apply security headers\n    const securityHeadersMiddleware = createSecurityHeadersMiddleware();\n    response = securityHeadersMiddleware(response, pathname);\n    \n    // Apply rate limiting for API routes\n    if (pathname.startsWith('/api/')) {\n      const rateLimiter = getRateLimiterForRoute(pathname);\n      if (rateLimiter) {\n        const rateLimitMiddleware = createRateLimitMiddleware(rateLimiter);\n        const rateLimitResult = await rateLimitMiddleware(request);\n        if (rateLimitResult) {\n          return rateLimitResult; // Rate limit exceeded\n        }\n      }\n    }\n    \n    // Apply CSRF protection for state-changing requests\n    if (requiresCSRFProtection(pathname) && \n        !['GET', 'HEAD', 'OPTIONS'].includes(method)) {\n      const csrfMiddleware = createCSRFMiddleware();\n      const csrfResult = await csrfMiddleware(request);\n      if (csrfResult) {\n        return csrfResult; // CSRF validation failed\n      }\n    }\n    \n    // Apply session middleware for all routes (handles session validation)\n    const sessionMiddleware = createSessionMiddleware();\n    const sessionResult = await sessionMiddleware(request);\n    if (sessionResult) {\n      response = sessionResult;\n    }\n    \n    // Check authentication for protected routes\n    if (isProtectedRoute(pathname)) {\n      // Check if user is authenticated\n      const sessionCookie = request.cookies.get('restaurant-dashboard-session');\n      \n      if (!sessionCookie) {\n        // Redirect to login for protected routes\n        const loginUrl = new URL('/auth/login', request.url);\n        loginUrl.searchParams.set('returnTo', pathname);\n        return NextResponse.redirect(loginUrl);\n      }\n    }\n    \n    // Special handling for admin routes\n    if (pathname.startsWith('/admin')) {\n      const userRole = request.headers.get('x-user-role');\n      \n      if (userRole !== 'admin') {\n        logSecurityEvent(SECURITY_EVENTS.PERMISSION_DENIED, {\n          ip,\n          pathname,\n          userRole,\n          requiredRole: 'admin',\n        });\n        \n        return new NextResponse('Forbidden - Admin access required', { status: 403 });\n      }\n    }\n    \n    // Add request timing header for monitoring\n    const processingTime = Date.now() - startTime;\n    response.headers.set('X-Response-Time', `${processingTime}ms`);\n    \n    // Add security-related headers for debugging (development only)\n    if (process.env.NODE_ENV === 'development') {\n      response.headers.set('X-Security-Applied', 'true');\n      response.headers.set('X-Request-ID', crypto.randomUUID());\n    }\n    \n    return response;\n    \n  } catch (error) {\n    console.error('Middleware error:', error);\n    \n    logSecurityEvent('middleware_error', {\n      ip,\n      pathname,\n      method,\n      error: (error as Error).message,\n    });\n    \n    // Return a safe response even if middleware fails\n    return new NextResponse('Internal Server Error', { status: 500 });\n  }\n}\n\n/**\n * Enhanced middleware with additional security features\n */\nexport async function enhancedMiddleware(request: NextRequest): Promise<NextResponse> {\n  const response = await middleware(request);\n  \n  // Add additional security measures for production\n  if (process.env.NODE_ENV === 'production') {\n    // Add security monitoring headers\n    response.headers.set('X-Content-Type-Options', 'nosniff');\n    response.headers.set('X-Frame-Options', 'DENY');\n    response.headers.set('X-XSS-Protection', '1; mode=block');\n    \n    // Remove server information\n    response.headers.delete('Server');\n    response.headers.delete('X-Powered-By');\n  }\n  \n  return response;\n}\n\n/**\n * Middleware configuration for Next.js\n */\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)  \n     * - favicon.ico (favicon file)\n     * - public folder files\n     */\n    '/((?!_next/static|_next/image|favicon.ico|public/).*)',\n  ],\n};\n\n/**\n * API route middleware wrapper\n */\nexport function withSecurityMiddleware<T extends any[]>(\n  handler: (...args: T) => Promise<NextResponse> | NextResponse\n) {\n  return async (request: NextRequest, ...args: any[]): Promise<NextResponse> => {\n    // Apply middleware logic\n    const middlewareResponse = await middleware(request);\n    \n    // If middleware returns a response (error/redirect), return it\n    if (middlewareResponse.status !== 200 && middlewareResponse.status !== 304) {\n      return middlewareResponse;\n    }\n    \n    // Continue with original handler\n    const handlerResponse = await handler(request, ...args);\n    \n    // Apply security headers to handler response\n    const securityHeadersMiddleware = createSecurityHeadersMiddleware();\n    return securityHeadersMiddleware(handlerResponse, request.nextUrl.pathname);\n  };\n}\n\n/**\n * Route-specific middleware configurations\n */\nexport const routeMiddleware = {\n  /**\n   * Middleware for authentication routes\n   */\n  auth: async (request: NextRequest): Promise<NextResponse | null> => {\n    const pathname = request.nextUrl.pathname;\n    \n    if (!matchesRoute(pathname, MIDDLEWARE_CONFIG.authRoutes)) {\n      return null;\n    }\n    \n    // Apply stricter rate limiting for auth routes\n    const rateLimitMiddleware = createRateLimitMiddleware('login');\n    return await rateLimitMiddleware(request);\n  },\n  \n  /**\n   * Middleware for file upload routes\n   */\n  upload: async (request: NextRequest): Promise<NextResponse | null> => {\n    if (!request.nextUrl.pathname.includes('/upload')) {\n      return null;\n    }\n    \n    // Check file size limits\n    const contentLength = request.headers.get('content-length');\n    if (contentLength && parseInt(contentLength) > SECURITY_CONFIG.fileUpload.maxFileSize) {\n      return new NextResponse('File too large', { status: 413 });\n    }\n    \n    return null;\n  },\n  \n  /**\n   * Middleware for admin routes\n   */\n  admin: async (request: NextRequest): Promise<NextResponse | null> => {\n    if (!request.nextUrl.pathname.startsWith('/admin')) {\n      return null;\n    }\n    \n    // Additional security for admin routes\n    const ip = request.ip || 'unknown';\n    const userRole = request.headers.get('x-user-role');\n    \n    logSecurityEvent('admin_access_attempt', {\n      ip,\n      pathname: request.nextUrl.pathname,\n      userRole,\n      userAgent: request.headers.get('user-agent'),\n    });\n    \n    return null;\n  },\n};\n\nexport default middleware;"],"names":[],"mappings":"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"}}]
}