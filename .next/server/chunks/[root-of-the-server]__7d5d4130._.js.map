{"version":3,"sources":["turbopack:///[project]/app/api/analytics/performance/route.ts","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// Interface for performance metrics\ninterface PerformanceMetric {\n  name: string;\n  value: number;\n  id: string;\n  delta: number;\n  rating: 'good' | 'needs-improvement' | 'poor';\n  navigationType: string;\n  timestamp: number;\n  url: string;\n  userAgent: string;\n  connection?: {\n    effectiveType?: string;\n    downlink?: number;\n    rtt?: number;\n    saveData?: boolean;\n  };\n  viewport?: {\n    width: number;\n    height: number;\n    devicePixelRatio: number;\n  };\n  sessionId: string;\n}\n\n// In-memory store for metrics (in production, use a proper database)\nlet metricsStore: PerformanceMetric[] = [];\nconst MAX_METRICS = 10000; // Limit to prevent memory issues\n\n// POST /api/analytics/performance - Collect performance metrics\nexport async function POST(request: NextRequest) {\n  try {\n    const contentType = request.headers.get('content-type');\n    \n    let metrics: PerformanceMetric | PerformanceMetric[];\n    \n    if (contentType?.includes('application/json')) {\n      metrics = await request.json();\n    } else {\n      // Handle sendBeacon data (sent as text)\n      const text = await request.text();\n      metrics = JSON.parse(text);\n    }\n    \n    // Ensure metrics is an array\n    const metricsArray = Array.isArray(metrics) ? metrics : [metrics];\n    \n    // Validate and store metrics\n    const validMetrics = metricsArray.filter(isValidMetric);\n    \n    // Add to store\n    metricsStore.push(...validMetrics);\n    \n    // Keep store size manageable\n    if (metricsStore.length > MAX_METRICS) {\n      metricsStore = metricsStore.slice(-MAX_METRICS);\n    }\n    \n    console.log(`[Performance Analytics] Stored ${validMetrics.length} metrics`);\n    \n    return NextResponse.json({ \n      success: true, \n      stored: validMetrics.length,\n      total: metricsStore.length \n    });\n    \n  } catch (error) {\n    console.error('[Performance Analytics] Error storing metrics:', error);\n    \n    return NextResponse.json(\n      { \n        success: false, \n        error: 'Failed to store metrics',\n        message: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 400 }\n    );\n  }\n}\n\n// GET /api/analytics/performance - Retrieve performance analytics\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const timeframe = searchParams.get('timeframe') || '24h';\n    const metric = searchParams.get('metric');\n    const url = searchParams.get('url');\n    const format = searchParams.get('format') || 'summary';\n    \n    // Calculate time filter\n    const now = Date.now();\n    const timeframes: Record<string, number> = {\n      '1h': 60 * 60 * 1000,\n      '24h': 24 * 60 * 60 * 1000,\n      '7d': 7 * 24 * 60 * 60 * 1000,\n      '30d': 30 * 24 * 60 * 60 * 1000,\n    };\n    \n    const timeLimit = now - (timeframes[timeframe] || timeframes['24h']);\n    \n    // Filter metrics\n    let filteredMetrics = metricsStore.filter(m => m.timestamp > timeLimit);\n    \n    if (metric) {\n      filteredMetrics = filteredMetrics.filter(m => m.name === metric);\n    }\n    \n    if (url) {\n      filteredMetrics = filteredMetrics.filter(m => m.url === url);\n    }\n    \n    if (format === 'raw') {\n      return NextResponse.json({\n        metrics: filteredMetrics,\n        count: filteredMetrics.length,\n        timeframe,\n      });\n    }\n    \n    // Generate analytics summary\n    const analytics = generateAnalyticsSummary(filteredMetrics, timeframe);\n    \n    return NextResponse.json(analytics);\n    \n  } catch (error) {\n    console.error('[Performance Analytics] Error retrieving metrics:', error);\n    \n    return NextResponse.json(\n      { \n        success: false, \n        error: 'Failed to retrieve metrics',\n        message: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE /api/analytics/performance - Clear metrics (admin only)\nexport async function DELETE(request: NextRequest) {\n  try {\n    // In production, add proper authentication\n    const authHeader = request.headers.get('Authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return NextResponse.json(\n        { error: 'Unauthorized' },\n        { status: 401 }\n      );\n    }\n    \n    const previousCount = metricsStore.length;\n    metricsStore = [];\n    \n    return NextResponse.json({\n      success: true,\n      message: `Cleared ${previousCount} metrics`,\n      clearedCount: previousCount,\n    });\n    \n  } catch (error) {\n    console.error('[Performance Analytics] Error clearing metrics:', error);\n    \n    return NextResponse.json(\n      { \n        success: false, \n        error: 'Failed to clear metrics',\n        message: error instanceof Error ? error.message : 'Unknown error'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n// Utility functions\nfunction isValidMetric(metric: any): metric is PerformanceMetric {\n  return (\n    typeof metric === 'object' &&\n    typeof metric.name === 'string' &&\n    typeof metric.value === 'number' &&\n    typeof metric.id === 'string' &&\n    typeof metric.timestamp === 'number' &&\n    typeof metric.url === 'string' &&\n    ['good', 'needs-improvement', 'poor'].includes(metric.rating)\n  );\n}\n\nfunction generateAnalyticsSummary(metrics: PerformanceMetric[], timeframe: string) {\n  if (metrics.length === 0) {\n    return {\n      summary: {\n        totalSamples: 0,\n        timeframe,\n        webVitals: {},\n        performance: {},\n        devices: {},\n        pages: {},\n      }\n    };\n  }\n  \n  // Group metrics by type\n  const metricsByType = metrics.reduce((acc, metric) => {\n    if (!acc[metric.name]) {\n      acc[metric.name] = [];\n    }\n    acc[metric.name].push(metric);\n    return acc;\n  }, {} as Record<string, PerformanceMetric[]>);\n  \n  // Calculate Web Vitals summary\n  const webVitals = calculateWebVitalsSummary(metricsByType);\n  \n  // Calculate performance summary\n  const performance = calculatePerformanceSummary(metricsByType);\n  \n  // Calculate device/browser summary\n  const devices = calculateDeviceSummary(metrics);\n  \n  // Calculate page performance summary\n  const pages = calculatePageSummary(metrics);\n  \n  // Calculate trends\n  const trends = calculateTrends(metrics);\n  \n  return {\n    summary: {\n      totalSamples: metrics.length,\n      timeframe,\n      webVitals,\n      performance,\n      devices,\n      pages,\n      trends,\n      generatedAt: new Date().toISOString(),\n    }\n  };\n}\n\nfunction calculateWebVitalsSummary(metricsByType: Record<string, PerformanceMetric[]>) {\n  const vitals = ['CLS', 'FID', 'FCP', 'LCP', 'TTFB'];\n  const summary: Record<string, any> = {};\n  \n  vitals.forEach(vital => {\n    const vitalMetrics = metricsByType[vital] || [];\n    if (vitalMetrics.length > 0) {\n      const values = vitalMetrics.map(m => m.value);\n      const ratings = vitalMetrics.map(m => m.rating);\n      \n      summary[vital] = {\n        samples: vitalMetrics.length,\n        p75: calculatePercentile(values, 75),\n        p90: calculatePercentile(values, 90),\n        p95: calculatePercentile(values, 95),\n        average: values.reduce((a, b) => a + b, 0) / values.length,\n        ratings: {\n          good: ratings.filter(r => r === 'good').length,\n          'needs-improvement': ratings.filter(r => r === 'needs-improvement').length,\n          poor: ratings.filter(r => r === 'poor').length,\n        },\n      };\n    }\n  });\n  \n  return summary;\n}\n\nfunction calculatePerformanceSummary(metricsByType: Record<string, PerformanceMetric[]>) {\n  const performanceTypes = ['route-change', 'component-render', 'api-call'];\n  const summary: Record<string, any> = {};\n  \n  performanceTypes.forEach(type => {\n    const typeMetrics = metricsByType[type] || [];\n    if (typeMetrics.length > 0) {\n      const values = typeMetrics.map(m => m.value);\n      \n      summary[type] = {\n        samples: typeMetrics.length,\n        average: values.reduce((a, b) => a + b, 0) / values.length,\n        p95: calculatePercentile(values, 95),\n        slowest: Math.max(...values),\n        fastest: Math.min(...values),\n      };\n    }\n  });\n  \n  return summary;\n}\n\nfunction calculateDeviceSummary(metrics: PerformanceMetric[]) {\n  const devices: Record<string, number> = {};\n  const connections: Record<string, number> = {};\n  const viewports: Record<string, number> = {};\n  \n  metrics.forEach(metric => {\n    // Extract device type from user agent (simplified)\n    const isMobile = /Mobile|Android|iPhone|iPad/.test(metric.userAgent);\n    const deviceType = isMobile ? 'mobile' : 'desktop';\n    devices[deviceType] = (devices[deviceType] || 0) + 1;\n    \n    // Connection type\n    if (metric.connection?.effectiveType) {\n      const connType = metric.connection.effectiveType;\n      connections[connType] = (connections[connType] || 0) + 1;\n    }\n    \n    // Viewport sizes\n    if (metric.viewport) {\n      const vpSize = metric.viewport.width < 768 ? 'small' : \n                    metric.viewport.width < 1200 ? 'medium' : 'large';\n      viewports[vpSize] = (viewports[vpSize] || 0) + 1;\n    }\n  });\n  \n  return { devices, connections, viewports };\n}\n\nfunction calculatePageSummary(metrics: PerformanceMetric[]) {\n  const pages: Record<string, any> = {};\n  \n  metrics.forEach(metric => {\n    const url = metric.url;\n    if (!pages[url]) {\n      pages[url] = {\n        samples: 0,\n        totalValue: 0,\n        ratings: { good: 0, 'needs-improvement': 0, poor: 0 },\n      };\n    }\n    \n    pages[url].samples++;\n    pages[url].totalValue += metric.value;\n    pages[url].ratings[metric.rating]++;\n  });\n  \n  // Calculate averages\n  Object.keys(pages).forEach(url => {\n    pages[url].average = pages[url].totalValue / pages[url].samples;\n  });\n  \n  return pages;\n}\n\nfunction calculateTrends(metrics: PerformanceMetric[]) {\n  // Sort by timestamp\n  const sortedMetrics = metrics.sort((a, b) => a.timestamp - b.timestamp);\n  \n  // Group by hour for trend analysis\n  const hourlyData: Record<string, PerformanceMetric[]> = {};\n  \n  sortedMetrics.forEach(metric => {\n    const hour = new Date(metric.timestamp).toISOString().substring(0, 13);\n    if (!hourlyData[hour]) {\n      hourlyData[hour] = [];\n    }\n    hourlyData[hour].push(metric);\n  });\n  \n  // Calculate hourly averages for key metrics\n  const trends: Record<string, any[]> = {\n    LCP: [],\n    FID: [],\n    CLS: [],\n    TTFB: [],\n  };\n  \n  Object.entries(hourlyData).forEach(([hour, hourMetrics]) => {\n    ['LCP', 'FID', 'CLS', 'TTFB'].forEach(metric => {\n      const metricData = hourMetrics.filter(m => m.name === metric);\n      if (metricData.length > 0) {\n        const average = metricData.reduce((sum, m) => sum + m.value, 0) / metricData.length;\n        trends[metric].push({\n          time: hour,\n          value: average,\n          samples: metricData.length,\n        });\n      }\n    });\n  });\n  \n  return trends;\n}\n\nfunction calculatePercentile(values: number[], percentile: number): number {\n  const sorted = values.sort((a, b) => a - b);\n  const index = Math.ceil(sorted.length * (percentile / 100)) - 1;\n  return sorted[Math.max(0, index)] || 0;\n}","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/analytics/performance/route\",\n        pathname: \"/api/analytics/performance\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/analytics/performance/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/analytics/performance/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n"],"names":[],"mappings":"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","ignoreList":[1]}