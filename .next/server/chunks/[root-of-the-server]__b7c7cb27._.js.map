{"version":3,"sources":["turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/base64url.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/digest.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/buffer_utils.js","turbopack:///[project]/node_modules/jose/dist/node/esm/util/errors.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/iv.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/check_iv_length.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/is_key_object.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/check_cek_length.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/timing_safe_equal.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/cbc_tag.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/webcrypto.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/crypto_key.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/invalid_key_input.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/ciphers.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/is_key_like.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/decrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/is_disjoint.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/is_object.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/aeskw.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/is_jwk.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/get_named_curve.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/ecdhes.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/check_p2s.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/pbes2kw.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/check_key_length.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/rsaes.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/normalize_key.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/cek.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/asn1.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/jwk_to_key.js","turbopack:///[project]/node_modules/jose/dist/node/esm/key/import.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/check_key_type.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/encrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/aesgcmkw.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/decrypt_key_management.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/validate_crit.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/validate_algorithms.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwe/flattened/decrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwe/compact/decrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwe/general/decrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/private_symbols.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/key_to_jwk.js","turbopack:///[project]/node_modules/jose/dist/node/esm/key/export.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/encrypt_key_management.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwe/flattened/encrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwe/general/encrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/dsa_digest.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/node_key.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/hmac_digest.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/get_sign_verify_key.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/sign.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/verify.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jws/flattened/verify.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jws/compact/verify.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jws/general/verify.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/epoch.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/secs.js","turbopack:///[project]/node_modules/jose/dist/node/esm/lib/jwt_claims_set.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwt/verify.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwt/decrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwe/compact/encrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jws/flattened/sign.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jws/compact/sign.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jws/general/sign.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwt/produce.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwt/sign.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwt/encrypt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwk/thumbprint.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwk/embedded.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwks/local.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/fetch_jwks.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwks/remote.js","turbopack:///[project]/node_modules/jose/dist/node/esm/jwt/unsecured.js","turbopack:///[project]/node_modules/jose/dist/node/esm/util/base64url.js","turbopack:///[project]/node_modules/jose/dist/node/esm/util/decode_protected_header.js","turbopack:///[project]/node_modules/jose/dist/node/esm/util/decode_jwt.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/generate.js","turbopack:///[project]/node_modules/jose/dist/node/esm/key/generate_key_pair.js","turbopack:///[project]/node_modules/jose/dist/node/esm/key/generate_secret.js","turbopack:///[project]/node_modules/jose/dist/node/esm/runtime/runtime.js","turbopack:///[project]/node_modules/jose/dist/node/esm/util/runtime.js"],"sourcesContent":["import { Buffer } from 'node:buffer';\nimport { decoder } from '../lib/buffer_utils.js';\nfunction normalize(input) {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    return encoded;\n}\nconst encode = (input) => Buffer.from(input).toString('base64url');\nexport const decodeBase64 = (input) => new Uint8Array(Buffer.from(input, 'base64'));\nexport const encodeBase64 = (input) => Buffer.from(input).toString('base64');\nexport { encode };\nexport const decode = (input) => new Uint8Array(Buffer.from(normalize(input), 'base64url'));\n","import { createHash } from 'node:crypto';\nconst digest = (algorithm, data) => createHash(algorithm).update(data).digest();\nexport default digest;\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    for (const buffer of buffers) {\n        buf.set(buffer, i);\n        i += buffer.length;\n    }\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","export class JOSEError extends Error {\n    static code = 'ERR_JOSE_GENERIC';\n    code = 'ERR_JOSE_GENERIC';\n    constructor(message, options) {\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static code = 'ERR_JWT_EXPIRED';\n    code = 'ERR_JWT_EXPIRED';\n    claim;\n    reason;\n    payload;\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\n        super(message, { cause: { claim, reason, payload } });\n        this.claim = claim;\n        this.reason = reason;\n        this.payload = payload;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    static code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n    code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n}\nexport class JOSENotSupported extends JOSEError {\n    static code = 'ERR_JOSE_NOT_SUPPORTED';\n    code = 'ERR_JOSE_NOT_SUPPORTED';\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    static code = 'ERR_JWE_DECRYPTION_FAILED';\n    code = 'ERR_JWE_DECRYPTION_FAILED';\n    constructor(message = 'decryption operation failed', options) {\n        super(message, options);\n    }\n}\nexport class JWEInvalid extends JOSEError {\n    static code = 'ERR_JWE_INVALID';\n    code = 'ERR_JWE_INVALID';\n}\nexport class JWSInvalid extends JOSEError {\n    static code = 'ERR_JWS_INVALID';\n    code = 'ERR_JWS_INVALID';\n}\nexport class JWTInvalid extends JOSEError {\n    static code = 'ERR_JWT_INVALID';\n    code = 'ERR_JWT_INVALID';\n}\nexport class JWKInvalid extends JOSEError {\n    static code = 'ERR_JWK_INVALID';\n    code = 'ERR_JWK_INVALID';\n}\nexport class JWKSInvalid extends JOSEError {\n    static code = 'ERR_JWKS_INVALID';\n    code = 'ERR_JWKS_INVALID';\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    static code = 'ERR_JWKS_NO_MATCHING_KEY';\n    code = 'ERR_JWKS_NO_MATCHING_KEY';\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    [Symbol.asyncIterator];\n    static code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\n        super(message, options);\n    }\n}\nexport class JWKSTimeout extends JOSEError {\n    static code = 'ERR_JWKS_TIMEOUT';\n    code = 'ERR_JWKS_TIMEOUT';\n    constructor(message = 'request timed out', options) {\n        super(message, options);\n    }\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    static code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    constructor(message = 'signature verification failed', options) {\n        super(message, options);\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A128GCMKW':\n        case 'A192GCM':\n        case 'A192GCMKW':\n        case 'A256GCM':\n        case 'A256GCMKW':\n            return 96;\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return 128;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { JWEInvalid } from '../util/errors.js';\nimport { bitLength } from './iv.js';\nconst checkIvLength = (enc, iv) => {\n    if (iv.length << 3 !== bitLength(enc)) {\n        throw new JWEInvalid('Invalid Initialization Vector length');\n    }\n};\nexport default checkIvLength;\n","import * as util from 'node:util';\nexport default (obj) => util.types.isKeyObject(obj);\n","import { JWEInvalid, JOSENotSupported } from '../util/errors.js';\nimport isKeyObject from './is_key_object.js';\nconst checkCekLength = (enc, cek) => {\n    let expected;\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            expected = parseInt(enc.slice(-3), 10);\n            break;\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            expected = parseInt(enc.slice(1, 4), 10);\n            break;\n        default:\n            throw new JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n    }\n    if (cek instanceof Uint8Array) {\n        const actual = cek.byteLength << 3;\n        if (actual !== expected) {\n            throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    if (isKeyObject(cek) && cek.type === 'secret') {\n        const actual = cek.symmetricKeySize << 3;\n        if (actual !== expected) {\n            throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    throw new TypeError('Invalid Content Encryption Key type');\n};\nexport default checkCekLength;\n","import { timingSafeEqual as impl } from 'node:crypto';\nconst timingSafeEqual = impl;\nexport default timingSafeEqual;\n","import { createHmac } from 'node:crypto';\nimport { concat, uint64be } from '../lib/buffer_utils.js';\nexport default function cbcTag(aad, iv, ciphertext, macSize, macKey, keySize) {\n    const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));\n    const hmac = createHmac(`sha${macSize}`, macKey);\n    hmac.update(macData);\n    return hmac.digest().slice(0, keySize >> 3);\n}\n","import * as crypto from 'node:crypto';\nimport * as util from 'node:util';\nconst webcrypto = crypto.webcrypto;\nexport default webcrypto;\nexport const isCryptoKey = (key) => util.types.isCryptoKey(key);\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'Ed25519': {\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\n                throw unusable('Ed25519');\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    types = types.filter(Boolean);\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor?.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import { getCiphers } from 'node:crypto';\nlet ciphers;\nexport default (algorithm) => {\n    ciphers ||= new Set(getCiphers());\n    return ciphers.has(algorithm);\n};\n","import webcrypto, { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nexport default (key) => isKeyObject(key) || isCryptoKey(key);\nconst types = ['KeyObject'];\nif (globalThis.CryptoKey || webcrypto?.CryptoKey) {\n    types.push('CryptoKey');\n}\nexport { types };\n","import { createDecipheriv, KeyObject } from 'node:crypto';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport { concat } from '../lib/buffer_utils.js';\nimport { JOSENotSupported, JWEDecryptionFailed, JWEInvalid } from '../util/errors.js';\nimport timingSafeEqual from './timing_safe_equal.js';\nimport cbcTag from './cbc_tag.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport supported from './ciphers.js';\nimport { types } from './is_key_like.js';\nfunction cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if (isKeyObject(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const macSize = parseInt(enc.slice(-3), 10);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!supported(algorithm)) {\n        throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const expectedTag = cbcTag(aad, iv, ciphertext, macSize, macKey, keySize);\n    let macCheckPassed;\n    try {\n        macCheckPassed = timingSafeEqual(tag, expectedTag);\n    }\n    catch {\n    }\n    if (!macCheckPassed) {\n        throw new JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        const decipher = createDecipheriv(algorithm, encKey, iv);\n        plaintext = concat(decipher.update(ciphertext), decipher.final());\n    }\n    catch {\n    }\n    if (!plaintext) {\n        throw new JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nfunction gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!supported(algorithm)) {\n        throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    try {\n        const decipher = createDecipheriv(algorithm, cek, iv, { authTagLength: 16 });\n        decipher.setAuthTag(tag);\n        if (aad.byteLength) {\n            decipher.setAAD(aad, { plaintextLength: ciphertext.length });\n        }\n        const plaintext = decipher.update(ciphertext);\n        decipher.final();\n        return plaintext;\n    }\n    catch {\n        throw new JWEDecryptionFailed();\n    }\n}\nconst decrypt = (enc, cek, ciphertext, iv, tag, aad) => {\n    let key;\n    if (isCryptoKey(cek)) {\n        checkEncCryptoKey(cek, enc, 'decrypt');\n        key = KeyObject.from(cek);\n    }\n    else if (cek instanceof Uint8Array || isKeyObject(cek)) {\n        key = cek;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    if (!iv) {\n        throw new JWEInvalid('JWE Initialization Vector missing');\n    }\n    if (!tag) {\n        throw new JWEInvalid('JWE Authentication Tag missing');\n    }\n    checkCekLength(enc, key);\n    checkIvLength(enc, iv);\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcDecrypt(enc, key, ciphertext, iv, tag, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmDecrypt(enc, key, ciphertext, iv, tag, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default decrypt;\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import { Buffer } from 'node:buffer';\nimport { KeyObject, createDecipheriv, createCipheriv, createSecretKey } from 'node:crypto';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { concat } from '../lib/buffer_utils.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport supported from './ciphers.js';\nimport { types } from './is_key_like.js';\nfunction checkKeySize(key, alg) {\n    if (key.symmetricKeySize << 3 !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction ensureKeyObject(key, alg, usage) {\n    if (isKeyObject(key)) {\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return createSecretKey(key);\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, usage);\n        return KeyObject.from(key);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const wrap = (alg, key, cek) => {\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!supported(algorithm)) {\n        throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, 'wrapKey');\n    checkKeySize(keyObject, alg);\n    const cipher = createCipheriv(algorithm, keyObject, Buffer.alloc(8, 0xa6));\n    return concat(cipher.update(cek), cipher.final());\n};\nexport const unwrap = (alg, key, encryptedKey) => {\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!supported(algorithm)) {\n        throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, 'unwrapKey');\n    checkKeySize(keyObject, alg);\n    const cipher = createDecipheriv(algorithm, keyObject, Buffer.alloc(8, 0xa6));\n    return concat(cipher.update(encryptedKey), cipher.final());\n};\n","import isObject from './is_object.js';\nexport function isJWK(key) {\n    return isObject(key) && typeof key.kty === 'string';\n}\nexport function isPrivateJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'string';\n}\nexport function isPublicJWK(key) {\n    return key.kty !== 'oct' && typeof key.d === 'undefined';\n}\nexport function isSecretJWK(key) {\n    return isJWK(key) && key.kty === 'oct' && typeof key.k === 'string';\n}\n","import { KeyObject } from 'node:crypto';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport { isJWK } from '../lib/is_jwk.js';\nexport const weakMap = new WeakMap();\nconst namedCurveToJOSE = (namedCurve) => {\n    switch (namedCurve) {\n        case 'prime256v1':\n            return 'P-256';\n        case 'secp384r1':\n            return 'P-384';\n        case 'secp521r1':\n            return 'P-521';\n        case 'secp256k1':\n            return 'secp256k1';\n        default:\n            throw new JOSENotSupported('Unsupported key curve for this operation');\n    }\n};\nconst getNamedCurve = (kee, raw) => {\n    let key;\n    if (isCryptoKey(kee)) {\n        key = KeyObject.from(kee);\n    }\n    else if (isKeyObject(kee)) {\n        key = kee;\n    }\n    else if (isJWK(kee)) {\n        return kee.crv;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(kee, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n    }\n    switch (key.asymmetricKeyType) {\n        case 'ed25519':\n        case 'ed448':\n            return `Ed${key.asymmetricKeyType.slice(2)}`;\n        case 'x25519':\n        case 'x448':\n            return `X${key.asymmetricKeyType.slice(1)}`;\n        case 'ec': {\n            const namedCurve = key.asymmetricKeyDetails.namedCurve;\n            if (raw) {\n                return namedCurve;\n            }\n            return namedCurveToJOSE(namedCurve);\n        }\n        default:\n            throw new TypeError('Invalid asymmetric key type for this operation');\n    }\n};\nexport default getNamedCurve;\n","import { diffieHellman, generateKeyPair as generateKeyPairCb, KeyObject } from 'node:crypto';\nimport { promisify } from 'node:util';\nimport getNamedCurve from './get_named_curve.js';\nimport { encoder, concat, uint32be, lengthAndInput, concatKdf } from '../lib/buffer_utils.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst generateKeyPair = promisify(generateKeyPairCb);\nexport async function deriveKey(publicKee, privateKee, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    let publicKey;\n    if (isCryptoKey(publicKee)) {\n        checkEncCryptoKey(publicKee, 'ECDH');\n        publicKey = KeyObject.from(publicKee);\n    }\n    else if (isKeyObject(publicKee)) {\n        publicKey = publicKee;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(publicKee, ...types));\n    }\n    let privateKey;\n    if (isCryptoKey(privateKee)) {\n        checkEncCryptoKey(privateKee, 'ECDH', 'deriveBits');\n        privateKey = KeyObject.from(privateKee);\n    }\n    else if (isKeyObject(privateKee)) {\n        privateKey = privateKee;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(privateKee, ...types));\n    }\n    const value = concat(lengthAndInput(encoder.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));\n    const sharedSecret = diffieHellman({ privateKey, publicKey });\n    return concatKdf(sharedSecret, keyLength, value);\n}\nexport async function generateEpk(kee) {\n    let key;\n    if (isCryptoKey(kee)) {\n        key = KeyObject.from(kee);\n    }\n    else if (isKeyObject(kee)) {\n        key = kee;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(kee, ...types));\n    }\n    switch (key.asymmetricKeyType) {\n        case 'x25519':\n            return generateKeyPair('x25519');\n        case 'x448': {\n            return generateKeyPair('x448');\n        }\n        case 'ec': {\n            const namedCurve = getNamedCurve(key);\n            return generateKeyPair('ec', { namedCurve });\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported EPK');\n    }\n}\nexport const ecdhAllowed = (key) => ['P-256', 'P-384', 'P-521', 'X25519', 'X448'].includes(getNamedCurve(key));\n","import { JWEInvalid } from '../util/errors.js';\nexport default function checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new JWEInvalid('PBES2 Salt Input must be 8 or more octets');\n    }\n}\n","import { promisify } from 'node:util';\nimport { KeyObject, pbkdf2 as pbkdf2cb } from 'node:crypto';\nimport random from './random.js';\nimport { p2s as concatSalt } from '../lib/buffer_utils.js';\nimport { encode as base64url } from './base64url.js';\nimport { wrap, unwrap } from './aeskw.js';\nimport checkP2s from '../lib/check_p2s.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst pbkdf2 = promisify(pbkdf2cb);\nfunction getPassword(key, alg) {\n    if (isKeyObject(key)) {\n        return key.export();\n    }\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, 'deriveBits', 'deriveKey');\n        return KeyObject.from(key).export();\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\nexport const encrypt = async (alg, key, cek, p2c = 2048, p2s = random(new Uint8Array(16))) => {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    const encryptedKey = await wrap(alg.slice(-6), derivedKey, cek);\n    return { encryptedKey, p2c, p2s: base64url(p2s) };\n};\nexport const decrypt = async (alg, key, encryptedKey, p2c, p2s) => {\n    checkP2s(p2s);\n    const salt = concatSalt(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    return unwrap(alg.slice(-6), derivedKey, encryptedKey);\n};\n","import { KeyObject } from 'node:crypto';\nexport default (key, alg) => {\n    let modulusLength;\n    try {\n        if (key instanceof KeyObject) {\n            modulusLength = key.asymmetricKeyDetails?.modulusLength;\n        }\n        else {\n            modulusLength = Buffer.from(key.n, 'base64url').byteLength << 3;\n        }\n    }\n    catch { }\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n    }\n};\n","import { KeyObject, publicEncrypt, constants, privateDecrypt } from 'node:crypto';\nimport { deprecate } from 'node:util';\nimport checkKeyLength from './check_key_length.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst checkKey = (key, alg) => {\n    if (key.asymmetricKeyType !== 'rsa') {\n        throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n    }\n    checkKeyLength(key, alg);\n};\nconst RSA1_5 = deprecate(() => constants.RSA_PKCS1_PADDING, 'The RSA1_5 \"alg\" (JWE Algorithm) is deprecated and will be removed in the next major revision.');\nconst resolvePadding = (alg) => {\n    switch (alg) {\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n            return constants.RSA_PKCS1_OAEP_PADDING;\n        case 'RSA1_5':\n            return RSA1_5();\n        default:\n            return undefined;\n    }\n};\nconst resolveOaepHash = (alg) => {\n    switch (alg) {\n        case 'RSA-OAEP':\n            return 'sha1';\n        case 'RSA-OAEP-256':\n            return 'sha256';\n        case 'RSA-OAEP-384':\n            return 'sha384';\n        case 'RSA-OAEP-512':\n            return 'sha512';\n        default:\n            return undefined;\n    }\n};\nfunction ensureKeyObject(key, alg, ...usages) {\n    if (isKeyObject(key)) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        checkEncCryptoKey(key, alg, ...usages);\n        return KeyObject.from(key);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types));\n}\nexport const encrypt = (alg, key, cek) => {\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, 'wrapKey', 'encrypt');\n    checkKey(keyObject, alg);\n    return publicEncrypt({ key: keyObject, oaepHash, padding }, cek);\n};\nexport const decrypt = (alg, key, encryptedKey) => {\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, 'unwrapKey', 'decrypt');\n    checkKey(keyObject, alg);\n    return privateDecrypt({ key: keyObject, oaepHash, padding }, encryptedKey);\n};\n","export default {};\n","import { JOSENotSupported } from '../util/errors.js';\nimport random from '../runtime/random.js';\nexport function bitLength(alg) {\n    switch (alg) {\n        case 'A128GCM':\n            return 128;\n        case 'A192GCM':\n            return 192;\n        case 'A256GCM':\n        case 'A128CBC-HS256':\n            return 256;\n        case 'A192CBC-HS384':\n            return 384;\n        case 'A256CBC-HS512':\n            return 512;\n        default:\n            throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexport default (alg) => random(new Uint8Array(bitLength(alg) >> 3));\n","import { createPrivateKey, createPublicKey, KeyObject } from 'node:crypto';\nimport { Buffer } from 'node:buffer';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst genericExport = (keyType, keyFormat, key) => {\n    let keyObject;\n    if (isCryptoKey(key)) {\n        if (!key.extractable) {\n            throw new TypeError('CryptoKey is not extractable');\n        }\n        keyObject = KeyObject.from(key);\n    }\n    else if (isKeyObject(key)) {\n        keyObject = key;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (keyObject.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return keyObject.export({ format: 'pem', type: keyFormat });\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nexport const fromPKCS8 = (pem) => createPrivateKey({\n    key: Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, ''), 'base64'),\n    type: 'pkcs8',\n    format: 'der',\n});\nexport const fromSPKI = (pem) => createPublicKey({\n    key: Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, ''), 'base64'),\n    type: 'spki',\n    format: 'der',\n});\nexport const fromX509 = (pem) => createPublicKey({\n    key: pem,\n    type: 'spki',\n    format: 'pem',\n});\n","import { createPrivateKey, createPublicKey } from 'node:crypto';\nconst parse = (key) => {\n    if (key.d) {\n        return createPrivateKey({ format: 'jwk', key });\n    }\n    return createPublicKey({ format: 'jwk', key });\n};\nexport default parse;\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg ||= jwk.alg;\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if ('oth' in jwk && jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nimport * as jwk from './is_jwk.js';\nconst tag = (key) => key?.[Symbol.toStringTag];\nconst jwkMatchesOp = (alg, key, usage) => {\n    if (key.use !== undefined && key.use !== 'sig') {\n        throw new TypeError('Invalid key for this operation, when present its use must be sig');\n    }\n    if (key.key_ops !== undefined && key.key_ops.includes?.(usage) !== true) {\n        throw new TypeError(`Invalid key for this operation, when present its key_ops must include ${usage}`);\n    }\n    if (key.alg !== undefined && key.alg !== alg) {\n        throw new TypeError(`Invalid key for this operation, when present its alg must be ${alg}`);\n    }\n    return true;\n};\nconst symmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (allowJwk && jwk.isJWK(key)) {\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\n            return;\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array', allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage, allowJwk) => {\n    if (allowJwk && jwk.isJWK(key)) {\n        switch (usage) {\n            case 'sign':\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\n            case 'verify':\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\n                    return;\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\n        }\n    }\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, allowJwk ? 'JSON Web Key' : null));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nfunction checkKeyType(allowJwk, alg, key, usage) {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage, allowJwk);\n    }\n}\nexport default checkKeyType.bind(undefined, false);\nexport const checkKeyTypeWithJwk = checkKeyType.bind(undefined, true);\n","import { createCipheriv, KeyObject } from 'node:crypto';\nimport checkIvLength from '../lib/check_iv_length.js';\nimport checkCekLength from './check_cek_length.js';\nimport { concat } from '../lib/buffer_utils.js';\nimport cbcTag from './cbc_tag.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkEncCryptoKey } from '../lib/crypto_key.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport generateIv from '../lib/iv.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport supported from './ciphers.js';\nimport { types } from './is_key_like.js';\nfunction cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if (isKeyObject(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!supported(algorithm)) {\n        throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = createCipheriv(algorithm, encKey, iv);\n    const ciphertext = concat(cipher.update(plaintext), cipher.final());\n    const macSize = parseInt(enc.slice(-3), 10);\n    const tag = cbcTag(aad, iv, ciphertext, macSize, macKey, keySize);\n    return { ciphertext, tag, iv };\n}\nfunction gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!supported(algorithm)) {\n        throw new JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = createCipheriv(algorithm, cek, iv, { authTagLength: 16 });\n    if (aad.byteLength) {\n        cipher.setAAD(aad, { plaintextLength: plaintext.length });\n    }\n    const ciphertext = cipher.update(plaintext);\n    cipher.final();\n    const tag = cipher.getAuthTag();\n    return { ciphertext, tag, iv };\n}\nconst encrypt = (enc, plaintext, cek, iv, aad) => {\n    let key;\n    if (isCryptoKey(cek)) {\n        checkEncCryptoKey(cek, enc, 'encrypt');\n        key = KeyObject.from(cek);\n    }\n    else if (cek instanceof Uint8Array || isKeyObject(cek)) {\n        key = cek;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(cek, ...types, 'Uint8Array'));\n    }\n    checkCekLength(enc, key);\n    if (iv) {\n        checkIvLength(enc, iv);\n    }\n    else {\n        iv = generateIv(enc);\n    }\n    switch (enc) {\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            return cbcEncrypt(enc, plaintext, key, iv, aad);\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            return gcmEncrypt(enc, plaintext, key, iv, aad);\n        default:\n            throw new JOSENotSupported('Unsupported JWE Content Encryption Algorithm');\n    }\n};\nexport default encrypt;\n","import encrypt from '../runtime/encrypt.js';\nimport decrypt from '../runtime/decrypt.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nexport async function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    const wrapped = await encrypt(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return {\n        encryptedKey: wrapped.ciphertext,\n        iv: base64url(wrapped.iv),\n        tag: base64url(wrapped.tag),\n    };\n}\nexport async function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return decrypt(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n","import { unwrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { decrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { decrypt as rsaEs } from '../runtime/rsaes.js';\nimport { decode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport { JOSENotSupported, JWEInvalid } from '../util/errors.js';\nimport { bitLength as cekLength } from '../lib/cek.js';\nimport { importJWK } from '../key/import.js';\nimport checkKeyType from './check_key_type.js';\nimport isObject from './is_object.js';\nimport { unwrap as aesGcmKw } from './aesgcmkw.js';\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    checkKeyType(alg, key, 'decrypt');\n    key = (await normalize.normalizePrivateKey?.(key, alg)) || key;\n    switch (alg) {\n        case 'dir': {\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n            return key;\n        }\n        case 'ECDH-ES':\n            if (encryptedKey !== undefined)\n                throw new JWEInvalid('Encountered unexpected JWE Encrypted Key');\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!isObject(joseHeader.epk))\n                throw new JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n            if (!ECDH.ecdhAllowed(key))\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            const epk = await importJWK(joseHeader.epk, alg);\n            let partyUInfo;\n            let partyVInfo;\n            if (joseHeader.apu !== undefined) {\n                if (typeof joseHeader.apu !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                try {\n                    partyUInfo = base64url(joseHeader.apu);\n                }\n                catch {\n                    throw new JWEInvalid('Failed to base64url decode the apu');\n                }\n            }\n            if (joseHeader.apv !== undefined) {\n                if (typeof joseHeader.apv !== 'string')\n                    throw new JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                try {\n                    partyVInfo = base64url(joseHeader.apv);\n                }\n                catch {\n                    throw new JWEInvalid('Failed to base64url decode the apv');\n                }\n            }\n            const sharedSecret = await ECDH.deriveKey(epk, key, alg === 'ECDH-ES' ? joseHeader.enc : alg, alg === 'ECDH-ES' ? cekLength(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n            if (alg === 'ECDH-ES')\n                return sharedSecret;\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg.slice(-6), sharedSecret, encryptedKey);\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return rsaEs(alg, key, encryptedKey);\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.p2c !== 'number')\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n            const p2cLimit = options?.maxPBES2Count || 10_000;\n            if (joseHeader.p2c > p2cLimit)\n                throw new JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n            if (typeof joseHeader.p2s !== 'string')\n                throw new JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n            let p2s;\n            try {\n                p2s = base64url(joseHeader.p2s);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the p2s');\n            }\n            return pbes2Kw(alg, key, encryptedKey, joseHeader.p2c, p2s);\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            return aesKw(alg, key, encryptedKey);\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            if (encryptedKey === undefined)\n                throw new JWEInvalid('JWE Encrypted Key missing');\n            if (typeof joseHeader.iv !== 'string')\n                throw new JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n            if (typeof joseHeader.tag !== 'string')\n                throw new JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n            let iv;\n            try {\n                iv = base64url(joseHeader.iv);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the iv');\n            }\n            let tag;\n            try {\n                tag = base64url(joseHeader.tag);\n            }\n            catch {\n                throw new JWEInvalid('Failed to base64url decode the tag');\n            }\n            return aesGcmKw(alg, key, encryptedKey, iv, tag);\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n}\nexport default decryptKeyManagement;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport decrypt from '../../runtime/decrypt.js';\nimport { JOSEAlgNotAllowed, JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport decryptKeyManagement from '../../lib/decrypt_key_management.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport generateCek from '../../lib/cek.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('Flattened JWE must be an object');\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new JWEInvalid('JOSE Header missing');\n    }\n    if (jwe.iv !== undefined && typeof jwe.iv !== 'string') {\n        throw new JWEInvalid('JWE Initialization Vector incorrect type');\n    }\n    if (typeof jwe.ciphertext !== 'string') {\n        throw new JWEInvalid('JWE Ciphertext missing or incorrect type');\n    }\n    if (jwe.tag !== undefined && typeof jwe.tag !== 'string') {\n        throw new JWEInvalid('JWE Authentication Tag incorrect type');\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== 'string') {\n        throw new JWEInvalid('JWE Protected Header incorrect type');\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== 'string') {\n        throw new JWEInvalid('JWE Encrypted Key incorrect type');\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== 'string') {\n        throw new JWEInvalid('JWE AAD incorrect type');\n    }\n    if (jwe.header !== undefined && !isObject(jwe.header)) {\n        throw new JWEInvalid('JWE Shared Unprotected Header incorrect type');\n    }\n    if (jwe.unprotected !== undefined && !isObject(jwe.unprotected)) {\n        throw new JWEInvalid('JWE Per-Recipient Unprotected Header incorrect type');\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = base64url(jwe.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWEInvalid('JWE Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new JWEInvalid('JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected,\n    };\n    validateCrit(JWEInvalid, new Map(), options?.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWEInvalid('missing JWE Algorithm (alg) in JWE Header');\n    }\n    if (typeof enc !== 'string' || !enc) {\n        throw new JWEInvalid('missing JWE Encryption Algorithm (enc) in JWE Header');\n    }\n    const keyManagementAlgorithms = options && validateAlgorithms('keyManagementAlgorithms', options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options &&\n        validateAlgorithms('contentEncryptionAlgorithms', options.contentEncryptionAlgorithms);\n    if ((keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) ||\n        (!keyManagementAlgorithms && alg.startsWith('PBES2'))) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter value not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = base64url(jwe.encrypted_key);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the encrypted_key');\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await decryptKeyManagement(alg, key, encryptedKey, joseHeader, options);\n    }\n    catch (err) {\n        if (err instanceof TypeError || err instanceof JWEInvalid || err instanceof JOSENotSupported) {\n            throw err;\n        }\n        cek = generateCek(enc);\n    }\n    let iv;\n    let tag;\n    if (jwe.iv !== undefined) {\n        try {\n            iv = base64url(jwe.iv);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the iv');\n        }\n    }\n    if (jwe.tag !== undefined) {\n        try {\n            tag = base64url(jwe.tag);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the tag');\n        }\n    }\n    const protectedHeader = encoder.encode(jwe.protected ?? '');\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(jwe.aad));\n    }\n    else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = base64url(jwe.ciphertext);\n    }\n    catch {\n        throw new JWEInvalid('Failed to base64url decode the ciphertext');\n    }\n    const plaintext = await decrypt(enc, cek, ciphertext, iv, tag, additionalData);\n    const result = { plaintext };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = base64url(jwe.aad);\n        }\n        catch {\n            throw new JWEInvalid('Failed to base64url decode the aad');\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = decoder.decode(jwe);\n    }\n    if (typeof jwe !== 'string') {\n        throw new JWEInvalid('Compact JWE must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length, } = jwe.split('.');\n    if (length !== 5) {\n        throw new JWEInvalid('Invalid Compact JWE');\n    }\n    const decrypted = await flattenedDecrypt({\n        ciphertext,\n        iv: iv || undefined,\n        protected: protectedHeader,\n        tag: tag || undefined,\n        encrypted_key: encryptedKey || undefined,\n    }, key, options);\n    const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { flattenedDecrypt } from '../flattened/decrypt.js';\nimport { JWEDecryptionFailed, JWEInvalid } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalDecrypt(jwe, key, options) {\n    if (!isObject(jwe)) {\n        throw new JWEInvalid('General JWE must be an object');\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(isObject)) {\n        throw new JWEInvalid('JWE Recipients missing or incorrect type');\n    }\n    if (!jwe.recipients.length) {\n        throw new JWEInvalid('JWE Recipients has no members');\n    }\n    for (const recipient of jwe.recipients) {\n        try {\n            return await flattenedDecrypt({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new JWEDecryptionFailed();\n}\n","export const unprotected = Symbol();\n","import { KeyObject } from 'node:crypto';\nimport { encode as base64url } from './base64url.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst keyToJWK = (key) => {\n    let keyObject;\n    if (isCryptoKey(key)) {\n        if (!key.extractable) {\n            throw new TypeError('CryptoKey is not extractable');\n        }\n        keyObject = KeyObject.from(key);\n    }\n    else if (isKeyObject(key)) {\n        keyObject = key;\n    }\n    else if (key instanceof Uint8Array) {\n        return {\n            kty: 'oct',\n            k: base64url(key),\n        };\n    }\n    else {\n        throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n    }\n    if (keyObject.type !== 'secret' &&\n        !['rsa', 'ec', 'ed25519', 'x25519', 'ed448', 'x448'].includes(keyObject.asymmetricKeyType)) {\n        throw new JOSENotSupported('Unsupported key asymmetricKeyType');\n    }\n    return keyObject.export({ format: 'jwk' });\n};\nexport default keyToJWK;\n","import { toSPKI as exportPublic } from '../runtime/asn1.js';\nimport { toPKCS8 as exportPrivate } from '../runtime/asn1.js';\nimport keyToJWK from '../runtime/key_to_jwk.js';\nexport async function exportSPKI(key) {\n    return exportPublic(key);\n}\nexport async function exportPKCS8(key) {\n    return exportPrivate(key);\n}\nexport async function exportJWK(key) {\n    return keyToJWK(key);\n}\n","import { wrap as aesKw } from '../runtime/aeskw.js';\nimport * as ECDH from '../runtime/ecdhes.js';\nimport { encrypt as pbes2Kw } from '../runtime/pbes2kw.js';\nimport { encrypt as rsaEs } from '../runtime/rsaes.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport normalize from '../runtime/normalize_key.js';\nimport generateCek, { bitLength as cekLength } from '../lib/cek.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { exportJWK } from '../key/export.js';\nimport checkKeyType from './check_key_type.js';\nimport { wrap as aesGcmKw } from './aesgcmkw.js';\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    checkKeyType(alg, key, 'encrypt');\n    key = (await normalize.normalizePublicKey?.(key, alg)) || key;\n    switch (alg) {\n        case 'dir': {\n            cek = key;\n            break;\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            if (!ECDH.ecdhAllowed(key)) {\n                throw new JOSENotSupported('ECDH with the provided key is not allowed or not supported by your javascript runtime');\n            }\n            const { apu, apv } = providedParameters;\n            let { epk: ephemeralKey } = providedParameters;\n            ephemeralKey ||= (await ECDH.generateEpk(key)).privateKey;\n            const { x, y, crv, kty } = await exportJWK(ephemeralKey);\n            const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === 'ECDH-ES' ? enc : alg, alg === 'ECDH-ES' ? cekLength(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n            parameters = { epk: { x, crv, kty } };\n            if (kty === 'EC')\n                parameters.epk.y = y;\n            if (apu)\n                parameters.apu = base64url(apu);\n            if (apv)\n                parameters.apv = base64url(apv);\n            if (alg === 'ECDH-ES') {\n                cek = sharedSecret;\n                break;\n            }\n            cek = providedCek || generateCek(enc);\n            const kwAlg = alg.slice(-6);\n            encryptedKey = await aesKw(kwAlg, sharedSecret, cek);\n            break;\n        }\n        case 'RSA1_5':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await rsaEs(alg, key, cek);\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW': {\n            cek = providedCek || generateCek(enc);\n            const { p2c, p2s } = providedParameters;\n            ({ encryptedKey, ...parameters } = await pbes2Kw(alg, key, cek, p2c, p2s));\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            cek = providedCek || generateCek(enc);\n            encryptedKey = await aesKw(alg, key, cek);\n            break;\n        }\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW': {\n            cek = providedCek || generateCek(enc);\n            const { iv } = providedParameters;\n            ({ encryptedKey, ...parameters } = await aesGcmKw(alg, key, cek, iv));\n            break;\n        }\n        default: {\n            throw new JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n        }\n    }\n    return { cek, encryptedKey, parameters };\n}\nexport default encryptKeyManagement;\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport { unprotected } from '../../lib/private_symbols.js';\nimport encrypt from '../../runtime/encrypt.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedEncrypt {\n    _plaintext;\n    _protectedHeader;\n    _sharedUnprotectedHeader;\n    _unprotectedHeader;\n    _aad;\n    _cek;\n    _iv;\n    _keyManagementParameters;\n    constructor(plaintext) {\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError('plaintext must be an instance of Uint8Array');\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new JWEInvalid('either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader,\n        };\n        validateCrit(JWEInvalid, new Map(), options?.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== 'string' || !enc) {\n            throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (this._cek && (alg === 'dir' || alg === 'ECDH-ES')) {\n            throw new TypeError(`setContentEncryptionKey cannot be called with JWE \"alg\" (Algorithm) Header ${alg}`);\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await encryptKeyManagement(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    }\n                    else {\n                        this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };\n                    }\n                }\n                else if (!this._protectedHeader) {\n                    this.setProtectedHeader(parameters);\n                }\n                else {\n                    this._protectedHeader = { ...this._protectedHeader, ...parameters };\n                }\n            }\n        }\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        if (this._aad) {\n            aadMember = base64url(this._aad);\n            additionalData = concat(protectedHeader, encoder.encode('.'), encoder.encode(aadMember));\n        }\n        else {\n            additionalData = protectedHeader;\n        }\n        const { ciphertext, tag, iv } = await encrypt(enc, this._plaintext, cek, this._iv, additionalData);\n        const jwe = {\n            ciphertext: base64url(ciphertext),\n        };\n        if (iv) {\n            jwe.iv = base64url(iv);\n        }\n        if (tag) {\n            jwe.tag = base64url(tag);\n        }\n        if (encryptedKey) {\n            jwe.encrypted_key = base64url(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n","import { FlattenedEncrypt } from '../flattened/encrypt.js';\nimport { unprotected } from '../../lib/private_symbols.js';\nimport { JOSENotSupported, JWEInvalid } from '../../util/errors.js';\nimport generateCek from '../../lib/cek.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport encryptKeyManagement from '../../lib/encrypt_key_management.js';\nimport { encode as base64url } from '../../runtime/base64url.js';\nimport validateCrit from '../../lib/validate_crit.js';\nclass IndividualRecipient {\n    parent;\n    unprotectedHeader;\n    key;\n    options;\n    constructor(enc, key, options) {\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralEncrypt {\n    _plaintext;\n    _recipients = [];\n    _protectedHeader;\n    _unprotectedHeader;\n    _aad;\n    constructor(plaintext) {\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, { crit: options?.crit });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setSharedUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt() {\n        if (!this._recipients.length) {\n            throw new JWEInvalid('at least one recipient must be added');\n        }\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new FlattenedEncrypt(this._plaintext)\n                .setAdditionalAuthenticatedData(this._aad)\n                .setProtectedHeader(this._protectedHeader)\n                .setSharedUnprotectedHeader(this._unprotectedHeader)\n                .setUnprotectedHeader(recipient.unprotectedHeader)\n                .encrypt(recipient.key, { ...recipient.options });\n            const jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [{}],\n                tag: flattened.tag,\n            };\n            if (flattened.aad)\n                jwe.aad = flattened.aad;\n            if (flattened.protected)\n                jwe.protected = flattened.protected;\n            if (flattened.unprotected)\n                jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key)\n                jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header)\n                jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            if (!isDisjoint(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new JWEInvalid('JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== 'string' || !alg) {\n                throw new JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === 'dir' || alg === 'ECDH-ES') {\n                throw new JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== 'string' || !joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            }\n            else if (enc !== joseHeader.enc) {\n                throw new JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            validateCrit(JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                throw new JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported.');\n            }\n        }\n        const cek = generateCek(enc);\n        const jwe = {\n            ciphertext: '',\n            iv: '',\n            recipients: [],\n            tag: '',\n        };\n        for (let i = 0; i < this._recipients.length; i++) {\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader,\n            };\n            const p2c = joseHeader.alg.startsWith('PBES2') ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new FlattenedEncrypt(this._plaintext)\n                    .setAdditionalAuthenticatedData(this._aad)\n                    .setContentEncryptionKey(cek)\n                    .setProtectedHeader(this._protectedHeader)\n                    .setSharedUnprotectedHeader(this._unprotectedHeader)\n                    .setUnprotectedHeader(recipient.unprotectedHeader)\n                    .setKeyManagementParameters({ p2c })\n                    .encrypt(recipient.key, {\n                    ...recipient.options,\n                    [unprotected]: true,\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad)\n                    jwe.aad = flattened.aad;\n                if (flattened.protected)\n                    jwe.protected = flattened.protected;\n                if (flattened.unprotected)\n                    jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header)\n                    target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await encryptKeyManagement(recipient.unprotectedHeader?.alg ||\n                this._protectedHeader?.alg ||\n                this._unprotectedHeader?.alg, enc, recipient.key, cek, { p2c });\n            target.encrypted_key = base64url(encryptedKey);\n            if (recipient.unprotectedHeader || parameters)\n                target.header = { ...recipient.unprotectedHeader, ...parameters };\n        }\n        return jwe;\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function dsaDigest(alg) {\n    switch (alg) {\n        case 'PS256':\n        case 'RS256':\n        case 'ES256':\n        case 'ES256K':\n            return 'sha256';\n        case 'PS384':\n        case 'RS384':\n        case 'ES384':\n            return 'sha384';\n        case 'PS512':\n        case 'RS512':\n        case 'ES512':\n            return 'sha512';\n        case 'Ed25519':\n        case 'EdDSA':\n            return undefined;\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import { constants, KeyObject } from 'node:crypto';\nimport getNamedCurve from './get_named_curve.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport checkKeyLength from './check_key_length.js';\nconst ecCurveAlgMap = new Map([\n    ['ES256', 'P-256'],\n    ['ES256K', 'secp256k1'],\n    ['ES384', 'P-384'],\n    ['ES512', 'P-521'],\n]);\nexport default function keyForCrypto(alg, key) {\n    let asymmetricKeyType;\n    let asymmetricKeyDetails;\n    let isJWK;\n    if (key instanceof KeyObject) {\n        asymmetricKeyType = key.asymmetricKeyType;\n        asymmetricKeyDetails = key.asymmetricKeyDetails;\n    }\n    else {\n        isJWK = true;\n        switch (key.kty) {\n            case 'RSA':\n                asymmetricKeyType = 'rsa';\n                break;\n            case 'EC':\n                asymmetricKeyType = 'ec';\n                break;\n            case 'OKP': {\n                if (key.crv === 'Ed25519') {\n                    asymmetricKeyType = 'ed25519';\n                    break;\n                }\n                if (key.crv === 'Ed448') {\n                    asymmetricKeyType = 'ed448';\n                    break;\n                }\n                throw new TypeError('Invalid key for this operation, its crv must be Ed25519 or Ed448');\n            }\n            default:\n                throw new TypeError('Invalid key for this operation, its kty must be RSA, OKP, or EC');\n        }\n    }\n    let options;\n    switch (alg) {\n        case 'Ed25519':\n            if (asymmetricKeyType !== 'ed25519') {\n                throw new TypeError(`Invalid key for this operation, its asymmetricKeyType must be ed25519`);\n            }\n            break;\n        case 'EdDSA':\n            if (!['ed25519', 'ed448'].includes(asymmetricKeyType)) {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448');\n            }\n            break;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            if (asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n            }\n            checkKeyLength(key, alg);\n            break;\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            if (asymmetricKeyType === 'rsa-pss') {\n                const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = asymmetricKeyDetails;\n                const length = parseInt(alg.slice(-3), 10);\n                if (hashAlgorithm !== undefined &&\n                    (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n                }\n                if (saltLength !== undefined && saltLength > length >> 3) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n                }\n            }\n            else if (asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss');\n            }\n            checkKeyLength(key, alg);\n            options = {\n                padding: constants.RSA_PKCS1_PSS_PADDING,\n                saltLength: constants.RSA_PSS_SALTLEN_DIGEST,\n            };\n            break;\n        case 'ES256':\n        case 'ES256K':\n        case 'ES384':\n        case 'ES512': {\n            if (asymmetricKeyType !== 'ec') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ec');\n            }\n            const actual = getNamedCurve(key);\n            const expected = ecCurveAlgMap.get(alg);\n            if (actual !== expected) {\n                throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n            }\n            options = { dsaEncoding: 'ieee-p1363' };\n            break;\n        }\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    if (isJWK) {\n        return { format: 'jwk', key, ...options };\n    }\n    return options ? { ...options, key } : key;\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function hmacDigest(alg) {\n    switch (alg) {\n        case 'HS256':\n            return 'sha256';\n        case 'HS384':\n            return 'sha384';\n        case 'HS512':\n            return 'sha512';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import { KeyObject, createSecretKey } from 'node:crypto';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nimport * as jwk from '../lib/is_jwk.js';\nexport default function getSignVerifyKey(alg, key, usage) {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return createSecretKey(key);\n    }\n    if (key instanceof KeyObject) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return KeyObject.from(key);\n    }\n    if (jwk.isJWK(key)) {\n        if (alg.startsWith('HS')) {\n            return createSecretKey(Buffer.from(key.k, 'base64url'));\n        }\n        return key;\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array', 'JSON Web Key'));\n}\n","import * as crypto from 'node:crypto';\nimport { promisify } from 'node:util';\nimport nodeDigest from './dsa_digest.js';\nimport hmacDigest from './hmac_digest.js';\nimport nodeKey from './node_key.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst oneShotSign = promisify(crypto.sign);\nconst sign = async (alg, key, data) => {\n    const k = getSignKey(alg, key, 'sign');\n    if (alg.startsWith('HS')) {\n        const hmac = crypto.createHmac(hmacDigest(alg), k);\n        hmac.update(data);\n        return hmac.digest();\n    }\n    return oneShotSign(nodeDigest(alg), data, nodeKey(alg, k));\n};\nexport default sign;\n","import * as crypto from 'node:crypto';\nimport { promisify } from 'node:util';\nimport nodeDigest from './dsa_digest.js';\nimport nodeKey from './node_key.js';\nimport sign from './sign.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst oneShotVerify = promisify(crypto.verify);\nconst verify = async (alg, key, signature, data) => {\n    const k = getVerifyKey(alg, key, 'verify');\n    if (alg.startsWith('HS')) {\n        const expected = await sign(alg, k, data);\n        const actual = signature;\n        try {\n            return crypto.timingSafeEqual(actual, expected);\n        }\n        catch {\n            return false;\n        }\n    }\n    const algorithm = nodeDigest(alg);\n    const keyInput = nodeKey(alg, k);\n    try {\n        return await oneShotVerify(algorithm, data, keyInput, signature);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nimport { isJWK } from '../../lib/is_jwk.js';\nimport { importJWK } from '../../key/import.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n        checkKeyTypeWithJwk(alg, key, 'verify');\n        if (isJWK(key)) {\n            key = await importJWK(key, alg);\n        }\n    }\n    else {\n        checkKeyTypeWithJwk(alg, key, 'verify');\n    }\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport isObject from '../../lib/is_object.js';\nexport async function generalVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('General JWS must be an object');\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(isObject)) {\n        throw new JWSInvalid('JWS Signatures missing or incorrect type');\n    }\n    for (const signature of jws.signatures) {\n        try {\n            return await flattenedVerify({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature,\n            }, key, options);\n        }\n        catch {\n        }\n    }\n    throw new JWSSignatureVerificationFailed();\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\n        }\n    }\n    if (issuer &&\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","import { compactDecrypt } from '../jwe/compact/decrypt.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTClaimValidationFailed } from '../util/errors.js';\nexport async function jwtDecrypt(jwt, key, options) {\n    const decrypted = await compactDecrypt(jwt, key, options);\n    const payload = jwtPayload(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', payload, 'iss', 'mismatch');\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', payload, 'sub', 'mismatch');\n    }\n    if (protectedHeader.aud !== undefined &&\n        JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', payload, 'aud', 'mismatch');\n    }\n    const result = { payload, protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: decrypted.key };\n    }\n    return result;\n}\n","import { FlattenedEncrypt } from '../flattened/encrypt.js';\nexport class CompactEncrypt {\n    _flattened;\n    constructor(plaintext) {\n        this._flattened = new FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join('.');\n    }\n}\n","import { encode as base64url } from '../../runtime/base64url.js';\nimport sign from '../../runtime/sign.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\nimport { checkKeyTypeWithJwk } from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nexport class FlattenedSign {\n    _payload;\n    _protectedHeader;\n    _unprotectedHeader;\n    constructor(payload) {\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError('payload must be an instance of Uint8Array');\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\n        }\n        if (!isDisjoint(this._protectedHeader, this._unprotectedHeader)) {\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n        };\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has('b64')) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== 'boolean') {\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== 'string' || !alg) {\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        checkKeyTypeWithJwk(alg, key, 'sign');\n        let payload = this._payload;\n        if (b64) {\n            payload = encoder.encode(base64url(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = encoder.encode(base64url(JSON.stringify(this._protectedHeader)));\n        }\n        else {\n            protectedHeader = encoder.encode('');\n        }\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\n        const signature = await sign(alg, key, data);\n        const jws = {\n            signature: base64url(signature),\n            payload: '',\n        };\n        if (b64) {\n            jws.payload = decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nexport class CompactSign {\n    _flattened;\n    constructor(payload) {\n        this._flattened = new FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n","import { FlattenedSign } from '../flattened/sign.js';\nimport { JWSInvalid } from '../../util/errors.js';\nclass IndividualSignature {\n    parent;\n    protectedHeader;\n    unprotectedHeader;\n    options;\n    key;\n    constructor(sig, key, options) {\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError('setUnprotectedHeader can only be called once');\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nexport class GeneralSign {\n    _payload;\n    _signatures = [];\n    constructor(payload) {\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new JWSInvalid('at least one signature must be added');\n        }\n        const jws = {\n            signatures: [],\n            payload: '',\n        };\n        for (let i = 0; i < this._signatures.length; i++) {\n            const signature = this._signatures[i];\n            const flattened = new FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            }\n            else if (jws.payload !== payload) {\n                throw new JWSInvalid('inconsistent use of JWS Unencoded Payload (RFC7797)');\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n","import epoch from '../lib/epoch.js';\nimport isObject from '../lib/is_object.js';\nimport secs from '../lib/secs.js';\nfunction validateInput(label, input) {\n    if (!Number.isFinite(input)) {\n        throw new TypeError(`Invalid ${label} input`);\n    }\n    return input;\n}\nexport class ProduceJWT {\n    _payload;\n    constructor(payload = {}) {\n        if (!isObject(payload)) {\n            throw new TypeError('JWT Claims Set MUST be an object');\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = { ...this._payload, iss: issuer };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = { ...this._payload, sub: subject };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = { ...this._payload, aud: audience };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = { ...this._payload, jti: jwtId };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, nbf: validateInput('setNotBefore', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, nbf: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === 'number') {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', input) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, exp: validateInput('setExpirationTime', epoch(input)) };\n        }\n        else {\n            this._payload = { ...this._payload, exp: epoch(new Date()) + secs(input) };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === 'undefined') {\n            this._payload = { ...this._payload, iat: epoch(new Date()) };\n        }\n        else if (input instanceof Date) {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', epoch(input)) };\n        }\n        else if (typeof input === 'string') {\n            this._payload = {\n                ...this._payload,\n                iat: validateInput('setIssuedAt', epoch(new Date()) + secs(input)),\n            };\n        }\n        else {\n            this._payload = { ...this._payload, iat: validateInput('setIssuedAt', input) };\n        }\n        return this;\n    }\n}\n","import { CompactSign } from '../jws/compact/sign.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class SignJWT extends ProduceJWT {\n    _protectedHeader;\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray(this._protectedHeader?.crit) &&\n            this._protectedHeader.crit.includes('b64') &&\n            this._protectedHeader.b64 === false) {\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n        }\n        return sig.sign(key, options);\n    }\n}\n","import { CompactEncrypt } from '../jwe/compact/encrypt.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport { ProduceJWT } from './produce.js';\nexport class EncryptJWT extends ProduceJWT {\n    _cek;\n    _iv;\n    _keyManagementParameters;\n    _protectedHeader;\n    _replicateIssuerAsHeader;\n    _replicateSubjectAsHeader;\n    _replicateAudienceAsHeader;\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError('setProtectedHeader can only be called once');\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError('setKeyManagementParameters can only be called once');\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError('setContentEncryptionKey can only be called once');\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError('setInitializationVector can only be called once');\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new CompactEncrypt(encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n","import digest from '../runtime/digest.js';\nimport { encode as base64url } from '../runtime/base64url.js';\nimport { JOSENotSupported, JWKInvalid } from '../util/errors.js';\nimport { encoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nconst check = (value, description) => {\n    if (typeof value !== 'string' || !value) {\n        throw new JWKInvalid(`${description} missing or invalid`);\n    }\n};\nexport async function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    digestAlgorithm ??= 'sha256';\n    if (digestAlgorithm !== 'sha256' &&\n        digestAlgorithm !== 'sha384' &&\n        digestAlgorithm !== 'sha512') {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch (jwk.kty) {\n        case 'EC':\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x, y: jwk.y };\n            break;\n        case 'OKP':\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = { crv: jwk.crv, kty: jwk.kty, x: jwk.x };\n            break;\n        case 'RSA':\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = { e: jwk.e, kty: jwk.kty, n: jwk.n };\n            break;\n        case 'oct':\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = { k: jwk.k, kty: jwk.kty };\n            break;\n        default:\n            throw new JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = encoder.encode(JSON.stringify(components));\n    return base64url(await digest(digestAlgorithm, data));\n}\nexport async function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm ??= 'sha256';\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n","import { importJWK } from '../key/import.js';\nimport isObject from '../lib/is_object.js';\nimport { JWSInvalid } from '../util/errors.js';\nexport async function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token?.header,\n    };\n    if (!isObject(joseHeader.jwk)) {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await importJWK({ ...joseHeader.jwk, ext: true }, joseHeader.alg);\n    if (key instanceof Uint8Array || key.type !== 'public') {\n        throw new JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n","import { importJWK } from '../key/import.js';\nimport { JWKSInvalid, JOSENotSupported, JWKSNoMatchingKey, JWKSMultipleMatchingKeys, } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nfunction getKtyFromAlg(alg) {\n    switch (typeof alg === 'string' && alg.slice(0, 2)) {\n        case 'RS':\n        case 'PS':\n            return 'RSA';\n        case 'ES':\n            return 'EC';\n        case 'Ed':\n            return 'OKP';\n        default:\n            throw new JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return (jwks &&\n        typeof jwks === 'object' &&\n        Array.isArray(jwks.keys) &&\n        jwks.keys.every(isJWKLike));\n}\nfunction isJWKLike(key) {\n    return isObject(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === 'function') {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    _jwks;\n    _cached = new WeakMap();\n    constructor(jwks) {\n        if (!isJWKSLike(jwks)) {\n            throw new JWKSInvalid('JSON Web Key Set malformed');\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = { ...protectedHeader, ...token?.header };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk) => {\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === 'string') {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === 'string') {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === 'string') {\n                candidate = jwk.use === 'sig';\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes('verify');\n            }\n            if (candidate) {\n                switch (alg) {\n                    case 'ES256':\n                        candidate = jwk.crv === 'P-256';\n                        break;\n                    case 'ES256K':\n                        candidate = jwk.crv === 'secp256k1';\n                        break;\n                    case 'ES384':\n                        candidate = jwk.crv === 'P-384';\n                        break;\n                    case 'ES512':\n                        candidate = jwk.crv === 'P-521';\n                        break;\n                    case 'Ed25519':\n                        candidate = jwk.crv === 'Ed25519';\n                        break;\n                    case 'EdDSA':\n                        candidate = jwk.crv === 'Ed25519' || jwk.crv === 'Ed448';\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new JWKSNoMatchingKey();\n        }\n        if (length !== 1) {\n            const error = new JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function* () {\n                for (const jwk of candidates) {\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    }\n                    catch { }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await importJWK({ ...jwk, ext: true }, alg);\n        if (key instanceof Uint8Array || key.type !== 'public') {\n            throw new JWKSInvalid('JSON Web Key Set members must be public keys');\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nexport function createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    const localJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(localJWKSet, {\n        jwks: {\n            value: () => clone(set._jwks),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return localJWKSet;\n}\n","import * as http from 'node:http';\nimport * as https from 'node:https';\nimport { once } from 'node:events';\nimport { JOSEError, JWKSTimeout } from '../util/errors.js';\nimport { concat, decoder } from '../lib/buffer_utils.js';\nconst fetchJwks = async (url, timeout, options) => {\n    let get;\n    switch (url.protocol) {\n        case 'https:':\n            get = https.get;\n            break;\n        case 'http:':\n            get = http.get;\n            break;\n        default:\n            throw new TypeError('Unsupported URL protocol.');\n    }\n    const { agent, headers } = options;\n    const req = get(url.href, {\n        agent,\n        timeout,\n        headers,\n    });\n    const [response] = (await Promise.race([once(req, 'response'), once(req, 'timeout')]));\n    if (!response) {\n        req.destroy();\n        throw new JWKSTimeout();\n    }\n    if (response.statusCode !== 200) {\n        throw new JOSEError('Expected 200 OK from the JSON Web Key Set HTTP response');\n    }\n    const parts = [];\n    for await (const part of response) {\n        parts.push(part);\n    }\n    try {\n        return JSON.parse(decoder.decode(concat(...parts)));\n    }\n    catch {\n        throw new JOSEError('Failed to parse the JSON Web Key Set HTTP response as JSON');\n    }\n};\nexport default fetchJwks;\n","import fetchJwks from '../runtime/fetch_jwks.js';\nimport { JWKSNoMatchingKey } from '../util/errors.js';\nimport { createLocalJWKSet } from './local.js';\nimport isObject from '../lib/is_object.js';\nfunction isCloudflareWorkers() {\n    return (typeof WebSocketPair !== 'undefined' ||\n        (typeof navigator !== 'undefined' && navigator.userAgent === 'Cloudflare-Workers') ||\n        (typeof EdgeRuntime !== 'undefined' && EdgeRuntime === 'vercel'));\n}\nlet USER_AGENT;\nif (typeof navigator === 'undefined' || !navigator.userAgent?.startsWith?.('Mozilla/5.0 ')) {\n    const NAME = 'jose';\n    const VERSION = 'v5.10.0';\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nexport const jwksCache = Symbol();\nfunction isFreshJwksCache(input, cacheMaxAge) {\n    if (typeof input !== 'object' || input === null) {\n        return false;\n    }\n    if (!('uat' in input) || typeof input.uat !== 'number' || Date.now() - input.uat >= cacheMaxAge) {\n        return false;\n    }\n    if (!('jwks' in input) ||\n        !isObject(input.jwks) ||\n        !Array.isArray(input.jwks.keys) ||\n        !Array.prototype.every.call(input.jwks.keys, isObject)) {\n        return false;\n    }\n    return true;\n}\nclass RemoteJWKSet {\n    _url;\n    _timeoutDuration;\n    _cooldownDuration;\n    _cacheMaxAge;\n    _jwksTimestamp;\n    _pendingFetch;\n    _options;\n    _local;\n    _cache;\n    constructor(url, options) {\n        if (!(url instanceof URL)) {\n            throw new TypeError('url must be an instance of URL');\n        }\n        this._url = new URL(url.href);\n        this._options = { agent: options?.agent, headers: options?.headers };\n        this._timeoutDuration =\n            typeof options?.timeoutDuration === 'number' ? options?.timeoutDuration : 5000;\n        this._cooldownDuration =\n            typeof options?.cooldownDuration === 'number' ? options?.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof options?.cacheMaxAge === 'number' ? options?.cacheMaxAge : 600000;\n        if (options?.[jwksCache] !== undefined) {\n            this._cache = options?.[jwksCache];\n            if (isFreshJwksCache(options?.[jwksCache], this._cacheMaxAge)) {\n                this._jwksTimestamp = this._cache.uat;\n                this._local = createLocalJWKSet(this._cache.jwks);\n            }\n        }\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cooldownDuration\n            : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === 'number'\n            ? Date.now() < this._jwksTimestamp + this._cacheMaxAge\n            : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._local || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await this._local(protectedHeader, token);\n        }\n        catch (err) {\n            if (err instanceof JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return this._local(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        const headers = new Headers(this._options.headers);\n        if (USER_AGENT && !headers.has('User-Agent')) {\n            headers.set('User-Agent', USER_AGENT);\n            this._options.headers = Object.fromEntries(headers.entries());\n        }\n        this._pendingFetch ||= fetchJwks(this._url, this._timeoutDuration, this._options)\n            .then((json) => {\n            this._local = createLocalJWKSet(json);\n            if (this._cache) {\n                this._cache.uat = Date.now();\n                this._cache.jwks = json;\n            }\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        })\n            .catch((err) => {\n            this._pendingFetch = undefined;\n            throw err;\n        });\n        await this._pendingFetch;\n    }\n}\nexport function createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    const remoteJWKSet = async (protectedHeader, token) => set.getKey(protectedHeader, token);\n    Object.defineProperties(remoteJWKSet, {\n        coolingDown: {\n            get: () => set.coolingDown(),\n            enumerable: true,\n            configurable: false,\n        },\n        fresh: {\n            get: () => set.fresh(),\n            enumerable: true,\n            configurable: false,\n        },\n        reload: {\n            value: () => set.reload(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n        reloading: {\n            get: () => !!set._pendingFetch,\n            enumerable: true,\n            configurable: false,\n        },\n        jwks: {\n            value: () => set._local?.jwks(),\n            enumerable: true,\n            configurable: false,\n            writable: false,\n        },\n    });\n    return remoteJWKSet;\n}\nexport const experimental_jwksCache = jwksCache;\n","import * as base64url from '../runtime/base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport { JWTInvalid } from '../util/errors.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { ProduceJWT } from './produce.js';\nexport class UnsecuredJWT extends ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({ alg: 'none' }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== 'string') {\n            throw new JWTInvalid('Unsecured JWT must be a string');\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split('.');\n        if (length !== 3 || signature !== '') {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        let header;\n        try {\n            header = JSON.parse(decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== 'none')\n                throw new Error();\n        }\n        catch {\n            throw new JWTInvalid('Invalid Unsecured JWT');\n        }\n        const payload = jwtPayload(header, base64url.decode(encodedPayload), options);\n        return { payload, header };\n    }\n}\n","import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nexport function decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === 'string') {\n        const parts = token.split('.');\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    }\n    else if (typeof token === 'object' && token) {\n        if ('protected' in token) {\n            protectedB64u = token.protected;\n        }\n        else {\n            throw new TypeError('Token does not contain a Protected Header');\n        }\n    }\n    try {\n        if (typeof protectedB64u !== 'string' || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(decoder.decode(base64url(protectedB64u)));\n        if (!isObject(result)) {\n            throw new Error();\n        }\n        return result;\n    }\n    catch {\n        throw new TypeError('Invalid Token or Protected Header formatting');\n    }\n}\n","import { decode as base64url } from './base64url.js';\nimport { decoder } from '../lib/buffer_utils.js';\nimport isObject from '../lib/is_object.js';\nimport { JWTInvalid } from './errors.js';\nexport function decodeJwt(jwt) {\n    if (typeof jwt !== 'string')\n        throw new JWTInvalid('JWTs must use Compact JWS serialization, JWT must be a string');\n    const { 1: payload, length } = jwt.split('.');\n    if (length === 5)\n        throw new JWTInvalid('Only JWTs using Compact JWS serialization can be decoded');\n    if (length !== 3)\n        throw new JWTInvalid('Invalid JWT');\n    if (!payload)\n        throw new JWTInvalid('JWTs must contain a payload');\n    let decoded;\n    try {\n        decoded = base64url(payload);\n    }\n    catch {\n        throw new JWTInvalid('Failed to base64url decode the payload');\n    }\n    let result;\n    try {\n        result = JSON.parse(decoder.decode(decoded));\n    }\n    catch {\n        throw new JWTInvalid('Failed to parse the decoded payload as JSON');\n    }\n    if (!isObject(result))\n        throw new JWTInvalid('Invalid JWT Claims Set');\n    return result;\n}\n","import { createSecretKey, generateKeyPair as generateKeyPairCb } from 'node:crypto';\nimport { promisify } from 'node:util';\nimport random from './random.js';\nimport { JOSENotSupported } from '../util/errors.js';\nconst generate = promisify(generateKeyPairCb);\nexport async function generateSecret(alg, options) {\n    let length;\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512':\n        case 'A128CBC-HS256':\n        case 'A192CBC-HS384':\n        case 'A256CBC-HS512':\n            length = parseInt(alg.slice(-3), 10);\n            break;\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW':\n        case 'A128GCMKW':\n        case 'A192GCMKW':\n        case 'A256GCMKW':\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM':\n            length = parseInt(alg.slice(1, 4), 10);\n            break;\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return createSecretKey(random(new Uint8Array(length >> 3)));\n}\nexport async function generateKeyPair(alg, options) {\n    switch (alg) {\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512':\n        case 'RSA1_5': {\n            const modulusLength = options?.modulusLength ?? 2048;\n            if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n                throw new JOSENotSupported('Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used');\n            }\n            const keypair = await generate('rsa', {\n                modulusLength,\n                publicExponent: 0x10001,\n            });\n            return keypair;\n        }\n        case 'ES256':\n            return generate('ec', { namedCurve: 'P-256' });\n        case 'ES256K':\n            return generate('ec', { namedCurve: 'secp256k1' });\n        case 'ES384':\n            return generate('ec', { namedCurve: 'P-384' });\n        case 'ES512':\n            return generate('ec', { namedCurve: 'P-521' });\n        case 'Ed25519':\n            return generate('ed25519');\n        case 'EdDSA': {\n            switch (options?.crv) {\n                case undefined:\n                case 'Ed25519':\n                    return generate('ed25519');\n                case 'Ed448':\n                    return generate('ed448');\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448');\n            }\n        }\n        case 'ECDH-ES':\n        case 'ECDH-ES+A128KW':\n        case 'ECDH-ES+A192KW':\n        case 'ECDH-ES+A256KW': {\n            const crv = options?.crv ?? 'P-256';\n            switch (crv) {\n                case undefined:\n                case 'P-256':\n                case 'P-384':\n                case 'P-521':\n                    return generate('ec', { namedCurve: crv });\n                case 'X25519':\n                    return generate('x25519');\n                case 'X448':\n                    return generate('x448');\n                default:\n                    throw new JOSENotSupported('Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448');\n            }\n        }\n        default:\n            throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n}\n","import { generateKeyPair as generate } from '../runtime/generate.js';\nexport async function generateKeyPair(alg, options) {\n    return generate(alg, options);\n}\n","import { generateSecret as generate } from '../runtime/generate.js';\nexport async function generateSecret(alg, options) {\n    return generate(alg, options);\n}\n","export default 'node:crypto';\n","import value from '../runtime/runtime.js';\nexport default value;\n"],"names":[],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80]}