{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-server-dom-turbopack-server.ts","turbopack:///[project]/node_modules/next/src/build/webpack/loaders/next-flight-loader/server-reference.ts","turbopack:///[project]/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-validate.ts","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/formatDistance.js","turbopack:///[project]/app/api/reports/[type]/route.ts","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/formatRelative.js","turbopack:///[project]/node_modules/next/dist/esm/build/templates/app-route.js","turbopack:///[project]/node_modules/date-fns/_lib/defaultOptions.js","turbopack:///[project]/node_modules/date-fns/_lib/format/longFormatters.js","turbopack:///[project]/node_modules/date-fns/_lib/protectedTokens.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildFormatLongFn.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildMatchFn.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","turbopack:///[project]/node_modules/date-fns/_lib/addLeadingZeros.js","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/localize.js","turbopack:///[project]/lib/analytics/data.ts","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/formatLong.js","turbopack:///[project]/node_modules/date-fns/_lib/normalizeInterval.js","turbopack:///[project]/node_modules/date-fns/_lib/normalizeDates.js","turbopack:///[project]/node_modules/date-fns/locale/en-US/_lib/match.js","turbopack:///[project]/node_modules/date-fns/_lib/format/formatters.js","turbopack:///[project]/node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","turbopack:///[project]/node_modules/date-fns/locale/en-US.js","turbopack:///[project]/node_modules/date-fns/_lib/format/lightFormatters.js","turbopack:///[project]/node_modules/date-fns/format.js","turbopack:///[project]/lib/analytics/calculations.ts","turbopack:///[project]/node_modules/date-fns/constants.js","turbopack:///[project]/node_modules/date-fns/getDayOfYear.js","turbopack:///[project]/node_modules/date-fns/startOfDay.js","turbopack:///[project]/node_modules/date-fns/getISOWeekYear.js","turbopack:///[project]/node_modules/date-fns/startOfYear.js","turbopack:///[project]/node_modules/date-fns/getISOWeek.js","turbopack:///[project]/node_modules/date-fns/startOfISOWeek.js","turbopack:///[project]/node_modules/date-fns/isDate.js","turbopack:///[project]/node_modules/date-fns/startOfISOWeekYear.js","turbopack:///[project]/node_modules/date-fns/startOfWeek.js","turbopack:///[project]/node_modules/date-fns/isValid.js","turbopack:///[project]/node_modules/date-fns/constructFrom.js","turbopack:///[project]/node_modules/date-fns/locale/_lib/buildLocalizeFn.js","turbopack:///[project]/node_modules/date-fns/toDate.js","turbopack:///[project]/node_modules/date-fns/differenceInCalendarDays.js","turbopack:///[project]/node_modules/date-fns/getWeekYear.js","turbopack:///[project]/node_modules/date-fns/getWeek.js","turbopack:///[project]/node_modules/date-fns/eachDayOfInterval.js","turbopack:///[project]/node_modules/date-fns/startOfWeekYear.js"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactServerDOMTurbopackServer\n","/* eslint-disable import/no-extraneous-dependencies */\nexport { registerServerReference } from 'react-server-dom-webpack/server'\n","// This function ensures that all the exported values are valid server actions,\n// during the runtime. By definition all actions are required to be async\n// functions, but here we can only check that they are functions.\nexport function ensureServerEntryExports(actions: any[]) {\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i]\n    if (typeof action !== 'function') {\n      throw new Error(\n        `A \"use server\" file can only export async functions, found ${typeof action}.\\nRead more: https://nextjs.org/docs/messages/invalid-use-server-value`\n      )\n    }\n  }\n}\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { \n  generateSalesReport,\n  generateMenuEngineeringReport,\n  generateLaborReport,\n  generateInventoryReport,\n  generateCustomerReport\n} from '@/lib/analytics/data';\nimport { exportReport } from '@/lib/analytics/export';\nimport { \n  ReportType,\n  ReportConfig,\n  ExportOptions\n} from '@/lib/analytics/types';\nimport { AnalyticsCache, CacheMetrics } from '@/lib/analytics/cache';\n\n// Request validation schemas\nconst DateRangeSchema = z.object({\n  from: z.string().transform(str => new Date(str)),\n  to: z.string().transform(str => new Date(str))\n});\n\nconst ReportConfigSchema = z.object({\n  dateRange: DateRangeSchema,\n  comparisonPeriod: DateRangeSchema.optional(),\n  timezone: z.string().optional().default('UTC'),\n  includeProjections: z.boolean().optional().default(false)\n});\n\nconst ExportOptionsSchema = z.object({\n  format: z.enum(['csv', 'pdf', 'excel']),\n  includeCharts: z.boolean().optional().default(false),\n  includeRawData: z.boolean().optional().default(false),\n  customFields: z.array(z.string()).optional()\n});\n\nconst QueryParamsSchema = z.object({\n  dateFrom: z.string(),\n  dateTo: z.string(),\n  compareFrom: z.string().optional(),\n  compareTo: z.string().optional(),\n  timezone: z.string().optional(),\n  includeProjections: z.string().optional().transform(val => val === 'true'),\n  export: z.enum(['csv', 'pdf', 'excel']).optional(),\n  includeCharts: z.string().optional().transform(val => val === 'true'),\n  includeRawData: z.string().optional().transform(val => val === 'true')\n});\n\n// Valid report types\nconst VALID_REPORT_TYPES: ReportType[] = [\n  'sales-summary',\n  'menu-engineering', \n  'labor-analysis',\n  'inventory-control',\n  'customer-analytics'\n];\n\n// Report generators mapping\nconst REPORT_GENERATORS = {\n  'sales-summary': generateSalesReport,\n  'menu-engineering': generateMenuEngineeringReport,\n  'labor-analysis': generateLaborReport,\n  'inventory-control': generateInventoryReport,\n  'customer-analytics': generateCustomerReport\n} as const;\n\nexport async function GET(\n  request: NextRequest,\n  { params }: { params: { type: string } }\n) {\n  const startTime = Date.now();\n\n  try {\n    // Validate report type\n    const reportType = params.type as ReportType;\n    if (!VALID_REPORT_TYPES.includes(reportType)) {\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Invalid report type',\n          validTypes: VALID_REPORT_TYPES\n        },\n        { status: 400 }\n      );\n    }\n\n    // Parse and validate query parameters\n    const searchParams = request.nextUrl.searchParams;\n    const queryParams = {\n      dateFrom: searchParams.get('dateFrom'),\n      dateTo: searchParams.get('dateTo'),\n      compareFrom: searchParams.get('compareFrom'),\n      compareTo: searchParams.get('compareTo'),\n      timezone: searchParams.get('timezone'),\n      includeProjections: searchParams.get('includeProjections'),\n      export: searchParams.get('export'),\n      includeCharts: searchParams.get('includeCharts'),\n      includeRawData: searchParams.get('includeRawData')\n    };\n\n    const validatedParams = QueryParamsSchema.parse(queryParams);\n\n    // Build report configuration\n    const config: ReportConfig = {\n      dateRange: {\n        from: new Date(validatedParams.dateFrom),\n        to: new Date(validatedParams.dateTo)\n      },\n      timezone: validatedParams.timezone || 'UTC',\n      includeProjections: validatedParams.includeProjections || false\n    };\n\n    // Add comparison period if provided\n    if (validatedParams.compareFrom && validatedParams.compareTo) {\n      config.comparisonPeriod = {\n        from: new Date(validatedParams.compareFrom),\n        to: new Date(validatedParams.compareTo)\n      };\n    }\n\n    // Validate date range\n    if (config.dateRange.from >= config.dateRange.to) {\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Invalid date range: from date must be before to date' \n        },\n        { status: 400 }\n      );\n    }\n\n    // Generate the report\n    const generator = REPORT_GENERATORS[reportType];\n    const report = await generator(config);\n\n    // Record generation time\n    const generationTime = Date.now() - startTime;\n    await CacheMetrics.recordGenerationTime(reportType, generationTime);\n\n    // Handle export request\n    if (validatedParams.export) {\n      const exportOptions: ExportOptions = {\n        format: validatedParams.export,\n        includeCharts: validatedParams.includeCharts || false,\n        includeRawData: validatedParams.includeRawData || false\n      };\n\n      try {\n        const exportResult = await exportReport(report, exportOptions);\n        \n        if (!exportResult.success) {\n          return NextResponse.json(\n            { \n              success: false, \n              error: `Export failed: ${exportResult.error}` \n            },\n            { status: 500 }\n          );\n        }\n\n        return NextResponse.json({\n          success: true,\n          data: report,\n          export: exportResult,\n          generationTime,\n          timestamp: new Date().toISOString()\n        });\n\n      } catch (exportError) {\n        console.error('Export error:', exportError);\n        \n        // Return the report even if export fails\n        return NextResponse.json({\n          success: true,\n          data: report,\n          export: {\n            success: false,\n            error: 'Export failed but report generated successfully'\n          },\n          generationTime,\n          timestamp: new Date().toISOString()\n        });\n      }\n    }\n\n    // Return the report data\n    return NextResponse.json({\n      success: true,\n      data: report,\n      generationTime,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error(`Report generation error for ${params.type}:`, error);\n    \n    const generationTime = Date.now() - startTime;\n    \n    // Return detailed error for development, generic for production\n    const errorMessage = process.env.NODE_ENV === 'development' \n      ? error instanceof Error ? error.message : 'Unknown error'\n      : 'Report generation failed';\n\n    return NextResponse.json(\n      { \n        success: false, \n        error: errorMessage,\n        generationTime,\n        timestamp: new Date().toISOString()\n      },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(\n  request: NextRequest,\n  { params }: { params: { type: string } }\n) {\n  const startTime = Date.now();\n\n  try {\n    // Validate report type\n    const reportType = params.type as ReportType;\n    if (!VALID_REPORT_TYPES.includes(reportType)) {\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Invalid report type',\n          validTypes: VALID_REPORT_TYPES\n        },\n        { status: 400 }\n      );\n    }\n\n    // Parse request body\n    const body = await request.json();\n    \n    // Validate request body\n    const config = ReportConfigSchema.parse(body.config || {});\n    const exportOptions = body.export ? ExportOptionsSchema.parse(body.export) : undefined;\n\n    // Validate date range\n    if (config.dateRange.from >= config.dateRange.to) {\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Invalid date range: from date must be before to date' \n        },\n        { status: 400 }\n      );\n    }\n\n    // Generate the report\n    const generator = REPORT_GENERATORS[reportType];\n    const report = await generator(config);\n\n    // Record generation time\n    const generationTime = Date.now() - startTime;\n    await CacheMetrics.recordGenerationTime(reportType, generationTime);\n\n    // Handle export if requested\n    if (exportOptions) {\n      try {\n        const exportResult = await exportReport(report, exportOptions);\n        \n        return NextResponse.json({\n          success: true,\n          data: report,\n          export: exportResult,\n          generationTime,\n          timestamp: new Date().toISOString()\n        });\n\n      } catch (exportError) {\n        console.error('Export error:', exportError);\n        \n        return NextResponse.json({\n          success: true,\n          data: report,\n          export: {\n            success: false,\n            error: 'Export failed but report generated successfully'\n          },\n          generationTime,\n          timestamp: new Date().toISOString()\n        });\n      }\n    }\n\n    // Return the report data\n    return NextResponse.json({\n      success: true,\n      data: report,\n      generationTime,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error(`Report generation error for ${params.type}:`, error);\n    \n    const generationTime = Date.now() - startTime;\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          success: false, \n          error: 'Invalid request parameters',\n          details: error.errors,\n          generationTime,\n          timestamp: new Date().toISOString()\n        },\n        { status: 400 }\n      );\n    }\n\n    const errorMessage = process.env.NODE_ENV === 'development' \n      ? error instanceof Error ? error.message : 'Unknown error'\n      : 'Report generation failed';\n\n    return NextResponse.json(\n      { \n        success: false, \n        error: errorMessage,\n        generationTime,\n        timestamp: new Date().toISOString()\n      },\n      { status: 500 }\n    );\n  }\n}\n\n// OPTIONS method for CORS\nexport async function OPTIONS(request: NextRequest) {\n  return NextResponse.json(\n    {},\n    {\n      status: 200,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n        'Access-Control-Max-Age': '86400'\n      }\n    }\n  );\n}","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { AppRouteRouteModule } from \"next/dist/esm/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/esm/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/esm/server/lib/patch-fetch\";\nimport { getRequestMeta } from \"next/dist/esm/server/request-meta\";\nimport { getTracer, SpanKind } from \"next/dist/esm/server/lib/trace/tracer\";\nimport { normalizeAppPath } from \"next/dist/esm/shared/lib/router/utils/app-paths\";\nimport { NodeNextRequest, NodeNextResponse } from \"next/dist/esm/server/base-http/node\";\nimport { NextRequestAdapter, signalFromNodeResponse } from \"next/dist/esm/server/web/spec-extension/adapters/next-request\";\nimport { BaseServerSpan } from \"next/dist/esm/server/lib/trace/constants\";\nimport { getRevalidateReason } from \"next/dist/esm/server/instrumentation/utils\";\nimport { sendResponse } from \"next/dist/esm/server/send-response\";\nimport { fromNodeOutgoingHttpHeaders, toNodeOutgoingHttpHeaders } from \"next/dist/esm/server/web/utils\";\nimport { getCacheControlHeader } from \"next/dist/esm/server/lib/cache-control\";\nimport { INFINITE_CACHE, NEXT_CACHE_TAGS_HEADER } from \"next/dist/esm/lib/constants\";\nimport { NoFallbackError } from \"next/dist/esm/shared/lib/no-fallback-error.external\";\nimport { CachedRouteKind } from \"next/dist/esm/server/response-cache\";\nimport * as userland from \"INNER_APP_ROUTE\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/reports/[type]/route\",\n        pathname: \"/api/reports/[type]\",\n        filename: \"route\",\n        bundlePath: \"\"\n    },\n    distDir: process.env.__NEXT_RELATIVE_DIST_DIR || '',\n    relativeProjectDir: process.env.__NEXT_RELATIVE_PROJECT_DIR || '',\n    resolvedPagePath: \"[project]/app/api/reports/[type]/route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\nexport async function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/reports/[type]/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (process.env.TURBOPACK) {\n        srcPage = srcPage.replace(/\\/index$/, '') || '/';\n    } else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = process.env.__NEXT_MULTI_ZONE_DRAFT_MODE;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = normalizeAppPath(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = getTracer();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: getRequestMeta(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new NodeNextRequest(req);\n    const nodeNextRes = new NodeNextResponse(res);\n    const nextReq = NextRequestAdapter.fromNodeNextRequest(nodeNextReq, signalFromNodeResponse(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!getRequestMeta(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = toNodeOutgoingHttpHeaders(response.headers);\n                        if (cacheTags) {\n                            headers[NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await sendResponse(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: getRevalidateReason({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!getRequestMeta(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = fromNodeOutgoingHttpHeaders(cacheEntry.value.headers);\n            if (!(getRequestMeta(req, 'minimalMode') && isIsr)) {\n                headers.delete(NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', getCacheControlHeader(cacheEntry.cacheControl));\n            }\n            await sendResponse(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: getRevalidateReason({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await sendResponse(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","'use server';\n\nimport { unstable_cache } from 'next/cache';\nimport { \n  format, \n  startOfDay, \n  endOfDay, \n  subDays, \n  eachDayOfInterval,\n  parseISO,\n  startOfWeek,\n  endOfWeek,\n  startOfMonth,\n  endOfMonth\n} from 'date-fns';\n\nimport {\n  DateRange,\n  ReportConfig,\n  SalesSummary,\n  MenuEngineeringReport,\n  LaborReport,\n  InventoryReport,\n  CustomerReport,\n  SalesTrendPoint,\n  ChannelBreakdown,\n  HourlyBreakdown,\n  DayOfWeekBreakdown,\n  PaymentMethodBreakdown,\n  MenuItemAnalysis,\n  EmployeePerformance,\n  InventoryItemAnalysis\n} from './types';\n\nimport {\n  calculateMenuItemClassification,\n  calculateMenuPopularity,\n  calculateMenuContribution,\n  generateMenuRecommendations,\n  calculateCategoryAnalysis,\n  calculateEmployeeEfficiency,\n  categorizeEmployeePerformance,\n  calculateLaborCostPercentage,\n  calculateProductivityIndex,\n  calculateFoodCostVariance,\n  calculateInventoryTurnover,\n  calculateDaysOnHand,\n  calculateWastePercentage,\n  calculateCustomerLifetimeValue,\n  calculateRetentionRate,\n  calculateChurnRate,\n  segmentCustomersByValue,\n  calculateMetricValue,\n  calculateTrend\n} from './calculations';\n\n// Cache configuration\nconst CACHE_TAGS = {\n  SALES_REPORT: 'sales-report',\n  MENU_REPORT: 'menu-report',\n  LABOR_REPORT: 'labor-report',\n  INVENTORY_REPORT: 'inventory-report',\n  CUSTOMER_REPORT: 'customer-report'\n} as const;\n\n// Mock data generators for development\nfunction generateMockOrderData(dateRange: DateRange) {\n  const orders = [];\n  const days = eachDayOfInterval(dateRange);\n  \n  days.forEach((day, dayIndex) => {\n    // Generate 20-80 orders per day\n    const ordersPerDay = Math.floor(Math.random() * 60) + 20;\n    \n    for (let i = 0; i < ordersPerDay; i++) {\n      const hour = Math.floor(Math.random() * 14) + 8; // 8 AM - 10 PM\n      const minute = Math.floor(Math.random() * 60);\n      const orderTime = new Date(day);\n      orderTime.setHours(hour, minute, 0, 0);\n      \n      // Menu items with varying popularity and profitability\n      const menuItems = [\n        { id: 'pizza-marg', name: 'Margherita Pizza', price: 18, cost: 6, category: 'Pizza' },\n        { id: 'pizza-pepp', name: 'Pepperoni Pizza', price: 20, cost: 7, category: 'Pizza' },\n        { id: 'salad-caesar', name: 'Caesar Salad', price: 14, cost: 4, category: 'Salad' },\n        { id: 'salmon-grilled', name: 'Grilled Salmon', price: 28, cost: 12, category: 'Seafood' },\n        { id: 'pasta-carb', name: 'Pasta Carbonara', price: 22, cost: 8, category: 'Pasta' },\n        { id: 'burger-beef', name: 'Beef Burger', price: 16, cost: 6, category: 'Burger' },\n        { id: 'wings-chicken', name: 'Chicken Wings', price: 12, cost: 4, category: 'Appetizer' },\n        { id: 'fish-chips', name: 'Fish & Chips', price: 19, cost: 7, category: 'Seafood' },\n        { id: 'stir-fry', name: 'Vegetable Stir Fry', price: 17, cost: 5, category: 'Vegetarian' },\n        { id: 'tiramisu', name: 'Tiramisu', price: 9, cost: 3, category: 'Dessert' }\n      ];\n      \n      // Select 1-4 items per order\n      const itemCount = Math.floor(Math.random() * 4) + 1;\n      const orderItems = [];\n      let orderTotal = 0;\n      let orderCost = 0;\n      \n      for (let j = 0; j < itemCount; j++) {\n        const item = menuItems[Math.floor(Math.random() * menuItems.length)];\n        const quantity = Math.floor(Math.random() * 2) + 1;\n        \n        orderItems.push({\n          ...item,\n          quantity\n        });\n        \n        orderTotal += item.price * quantity;\n        orderCost += item.cost * quantity;\n      }\n      \n      orders.push({\n        id: `order-${dayIndex}-${i}`,\n        timestamp: orderTime,\n        items: orderItems,\n        total: orderTotal,\n        cost: orderCost,\n        channel: Math.random() > 0.7 ? 'delivery' : Math.random() > 0.5 ? 'takeout' : 'dine-in',\n        paymentMethod: Math.random() > 0.6 ? 'card' : Math.random() > 0.3 ? 'cash' : 'mobile',\n        customerId: Math.floor(Math.random() * 1000) + 1,\n        employeeId: Math.floor(Math.random() * 20) + 1\n      });\n    }\n  });\n  \n  return orders;\n}\n\nfunction generateMockEmployeeData() {\n  const employees = [\n    { id: 1, name: 'Alice Johnson', role: 'Server', department: 'Front of House', hourlyWage: 15 },\n    { id: 2, name: 'Bob Smith', role: 'Server', department: 'Front of House', hourlyWage: 15 },\n    { id: 3, name: 'Carol Davis', role: 'Bartender', department: 'Bar', hourlyWage: 18 },\n    { id: 4, name: 'David Wilson', role: 'Cook', department: 'Kitchen', hourlyWage: 16 },\n    { id: 5, name: 'Emma Brown', role: 'Host', department: 'Front of House', hourlyWage: 14 },\n    { id: 6, name: 'Frank Miller', role: 'Chef', department: 'Kitchen', hourlyWage: 25 },\n    { id: 7, name: 'Grace Lee', role: 'Server', department: 'Front of House', hourlyWage: 15 },\n    { id: 8, name: 'Henry Garcia', role: 'Dishwasher', department: 'Kitchen', hourlyWage: 12 },\n    { id: 9, name: 'Iris Rodriguez', role: 'Manager', department: 'Management', hourlyWage: 28 },\n    { id: 10, name: 'Jack Thompson', role: 'Cook', department: 'Kitchen', hourlyWage: 16 }\n  ];\n  \n  return employees.map(emp => ({\n    ...emp,\n    hoursWorked: Math.floor(Math.random() * 30) + 25, // 25-55 hours\n    overtimeHours: Math.floor(Math.random() * 10), // 0-10 overtime hours\n  }));\n}\n\nfunction generateMockInventoryData() {\n  return [\n    { id: 'tomato-sauce', name: 'Tomato Sauce', category: 'Sauce', unitCost: 2.50, currentStock: 24, reorderPoint: 10, maxStock: 50 },\n    { id: 'mozzarella', name: 'Mozzarella Cheese', category: 'Dairy', unitCost: 4.20, currentStock: 8, reorderPoint: 12, maxStock: 30 },\n    { id: 'salmon-fillet', name: 'Salmon Fillet', category: 'Seafood', unitCost: 8.90, currentStock: 15, reorderPoint: 8, maxStock: 25 },\n    { id: 'ground-beef', name: 'Ground Beef', category: 'Meat', unitCost: 5.60, currentStock: 32, reorderPoint: 15, maxStock: 40 },\n    { id: 'lettuce', name: 'Lettuce', category: 'Produce', unitCost: 1.80, currentStock: 18, reorderPoint: 10, maxStock: 35 },\n    { id: 'olive-oil', name: 'Olive Oil', category: 'Oil', unitCost: 12.50, currentStock: 6, reorderPoint: 5, maxStock: 15 },\n    { id: 'flour', name: 'All-Purpose Flour', category: 'Baking', unitCost: 3.20, currentStock: 45, reorderPoint: 20, maxStock: 60 }\n  ];\n}\n\n// Sales Report Generation\nexport const generateSalesReport = unstable_cache(\n  async (config: ReportConfig): Promise<SalesSummary> => {\n    await new Promise(resolve => setTimeout(resolve, 200)); // Simulate processing time\n    \n    const orders = generateMockOrderData(config.dateRange);\n    const previousPeriod = config.comparisonPeriod;\n    let previousOrders = [];\n    \n    if (previousPeriod) {\n      previousOrders = generateMockOrderData(previousPeriod);\n    }\n    \n    // Calculate metrics\n    const totalRevenue = orders.reduce((sum, order) => sum + order.total, 0);\n    const totalOrders = orders.length;\n    const guestCount = totalOrders * 1.3; // Assume 1.3 guests per order on average\n    const averageOrderValue = totalRevenue / totalOrders;\n    \n    const previousRevenue = previousOrders.reduce((sum, order) => sum + order.total, 0);\n    const previousOrderCount = previousOrders.length;\n    const previousGuestCount = previousOrderCount * 1.3;\n    const previousAOV = previousRevenue / (previousOrderCount || 1);\n    \n    // Revenue by channel\n    const channelRevenue = orders.reduce((acc, order) => {\n      acc[order.channel] = (acc[order.channel] || 0) + order.total;\n      return acc;\n    }, {} as Record<string, number>);\n    \n    const revenueByChannel: ChannelBreakdown[] = Object.entries(channelRevenue).map(([channel, revenue]) => ({\n      channel,\n      revenue,\n      orders: orders.filter(o => o.channel === channel).length,\n      percentage: (revenue / totalRevenue) * 100\n    }));\n    \n    // Revenue by hour\n    const hourlyData = orders.reduce((acc, order) => {\n      const hour = order.timestamp.getHours();\n      if (!acc[hour]) acc[hour] = { revenue: 0, orders: 0 };\n      acc[hour].revenue += order.total;\n      acc[hour].orders += 1;\n      return acc;\n    }, {} as Record<number, { revenue: number; orders: number }>);\n    \n    const revenueByHour: HourlyBreakdown[] = Array.from({ length: 24 }, (_, hour) => ({\n      hour,\n      revenue: hourlyData[hour]?.revenue || 0,\n      orders: hourlyData[hour]?.orders || 0,\n      averageOrderValue: hourlyData[hour] ? hourlyData[hour].revenue / hourlyData[hour].orders : 0\n    }));\n    \n    // Revenue by day of week\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const dailyData = orders.reduce((acc, order) => {\n      const day = dayNames[order.timestamp.getDay()];\n      if (!acc[day]) acc[day] = { revenue: 0, orders: 0 };\n      acc[day].revenue += order.total;\n      acc[day].orders += 1;\n      return acc;\n    }, {} as Record<string, { revenue: number; orders: number }>);\n    \n    const revenueByDayOfWeek: DayOfWeekBreakdown[] = dayNames.map(day => ({\n      day,\n      revenue: dailyData[day]?.revenue || 0,\n      orders: dailyData[day]?.orders || 0,\n      averageOrderValue: dailyData[day] ? dailyData[day].revenue / dailyData[day].orders : 0\n    }));\n    \n    // Payment methods\n    const paymentData = orders.reduce((acc, order) => {\n      acc[order.paymentMethod] = (acc[order.paymentMethod] || 0) + order.total;\n      return acc;\n    }, {} as Record<string, number>);\n    \n    const topPaymentMethods: PaymentMethodBreakdown[] = Object.entries(paymentData).map(([method, revenue]) => ({\n      method,\n      revenue,\n      transactions: orders.filter(o => o.paymentMethod === method).length,\n      percentage: (revenue / totalRevenue) * 100\n    }));\n    \n    // Sales trend\n    const salesTrend: SalesTrendPoint[] = eachDayOfInterval(config.dateRange).map(day => {\n      const dayOrders = orders.filter(order => \n        format(order.timestamp, 'yyyy-MM-dd') === format(day, 'yyyy-MM-dd')\n      );\n      \n      const dayRevenue = dayOrders.reduce((sum, order) => sum + order.total, 0);\n      const dayGuests = dayOrders.length * 1.3;\n      \n      return {\n        date: format(day, 'yyyy-MM-dd'),\n        revenue: dayRevenue,\n        orders: dayOrders.length,\n        guests: Math.floor(dayGuests),\n        averageOrderValue: dayOrders.length > 0 ? dayRevenue / dayOrders.length : 0\n      };\n    });\n    \n    return {\n      id: `sales-${Date.now()}`,\n      name: 'Sales Summary Report',\n      description: 'Comprehensive sales performance analysis',\n      generatedAt: new Date(),\n      dateRange: config.dateRange,\n      comparisonPeriod: config.comparisonPeriod,\n      type: 'sales-summary',\n      data: {\n        totalRevenue: calculateMetricValue(totalRevenue, previousRevenue, undefined, '$'),\n        totalOrders: calculateMetricValue(totalOrders, previousOrderCount),\n        averageOrderValue: calculateMetricValue(averageOrderValue, previousAOV, undefined, '$'),\n        guestCount: calculateMetricValue(guestCount, previousGuestCount),\n        revenueByChannel,\n        revenueByHour,\n        revenueByDayOfWeek,\n        topPaymentMethods,\n        salesTrend\n      }\n    };\n  },\n  [CACHE_TAGS.SALES_REPORT],\n  {\n    revalidate: 1800, // 30 minutes\n    tags: [CACHE_TAGS.SALES_REPORT]\n  }\n);\n\n// Menu Engineering Report Generation\nexport const generateMenuEngineeringReport = unstable_cache(\n  async (config: ReportConfig): Promise<MenuEngineeringReport> => {\n    await new Promise(resolve => setTimeout(resolve, 250));\n    \n    const orders = generateMockOrderData(config.dateRange);\n    \n    // Aggregate item data\n    const itemData = new Map();\n    let totalRevenue = 0;\n    \n    orders.forEach(order => {\n      order.items.forEach(item => {\n        if (!itemData.has(item.id)) {\n          itemData.set(item.id, {\n            id: item.id,\n            name: item.name,\n            category: item.category,\n            price: item.price,\n            cost: item.cost,\n            quantitySold: 0,\n            revenue: 0\n          });\n        }\n        \n        const data = itemData.get(item.id);\n        data.quantitySold += item.quantity;\n        data.revenue += item.price * item.quantity;\n        totalRevenue += item.price * item.quantity;\n      });\n    });\n    \n    const allItems = Array.from(itemData.values());\n    const allQuantities = allItems.map(item => item.quantitySold);\n    \n    // Calculate menu item analysis\n    const items: MenuItemAnalysis[] = allItems.map(item => {\n      const popularity = calculateMenuPopularity(item.quantitySold, allQuantities);\n      const profitMargin = ((item.price - item.cost) / item.price) * 100;\n      const contribution = calculateMenuContribution(item.revenue, totalRevenue);\n      const classification = calculateMenuItemClassification(popularity, profitMargin);\n      \n      return {\n        id: item.id,\n        name: item.name,\n        category: item.category,\n        classification,\n        metrics: {\n          quantitySold: item.quantitySold,\n          revenue: item.revenue,\n          popularity,\n          profitability: profitMargin,\n          contribution,\n          costPercent: (item.cost / item.price) * 100,\n          pricePoint: item.price\n        },\n        trends: {\n          popularityTrend: Math.random() > 0.5 ? 'stable' : Math.random() > 0.5 ? 'increasing' : 'decreasing',\n          profitabilityTrend: Math.random() > 0.5 ? 'stable' : Math.random() > 0.5 ? 'increasing' : 'decreasing'\n        }\n      };\n    });\n    \n    const categories = calculateCategoryAnalysis(items);\n    const recommendations = generateMenuRecommendations(items);\n    \n    const overview = {\n      totalItems: items.length,\n      activeItems: items.length,\n      averagePrice: allItems.reduce((sum, item) => sum + item.price, 0) / allItems.length,\n      overallMargin: ((totalRevenue - allItems.reduce((sum, item) => sum + item.cost * item.quantitySold, 0)) / totalRevenue) * 100,\n      classifications: {\n        stars: items.filter(item => item.classification === 'star').length,\n        plowHorses: items.filter(item => item.classification === 'plow-horse').length,\n        puzzles: items.filter(item => item.classification === 'puzzle').length,\n        dogs: items.filter(item => item.classification === 'dog').length\n      }\n    };\n    \n    return {\n      id: `menu-${Date.now()}`,\n      name: 'Menu Engineering Report',\n      description: 'Menu item performance and profitability analysis',\n      generatedAt: new Date(),\n      dateRange: config.dateRange,\n      comparisonPeriod: config.comparisonPeriod,\n      type: 'menu-engineering',\n      data: {\n        overview,\n        categories,\n        items,\n        recommendations\n      }\n    };\n  },\n  [CACHE_TAGS.MENU_REPORT],\n  {\n    revalidate: 3600, // 1 hour\n    tags: [CACHE_TAGS.MENU_REPORT]\n  }\n);\n\n// Labor Report Generation\nexport const generateLaborReport = unstable_cache(\n  async (config: ReportConfig): Promise<LaborReport> => {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    const orders = generateMockOrderData(config.dateRange);\n    const employees = generateMockEmployeeData();\n    \n    const totalRevenue = orders.reduce((sum, order) => sum + order.total, 0);\n    \n    // Calculate employee performance\n    const employeePerformance: EmployeePerformance[] = employees.map(emp => {\n      const empOrders = orders.filter(order => order.employeeId === emp.id);\n      const salesGenerated = empOrders.reduce((sum, order) => sum + order.total, 0);\n      const ordersProcessed = empOrders.length;\n      const avgOrderValue = ordersProcessed > 0 ? salesGenerated / ordersProcessed : 0;\n      \n      const regularPay = Math.min(emp.hoursWorked, 40) * emp.hourlyWage;\n      const overtimePay = Math.max(0, emp.hoursWorked - 40) * emp.hourlyWage * 1.5;\n      const totalCost = regularPay + overtimePay;\n      \n      const efficiency = calculateEmployeeEfficiency(ordersProcessed, emp.hoursWorked, salesGenerated);\n      \n      return {\n        id: emp.id.toString(),\n        name: emp.name,\n        role: emp.role,\n        department: emp.department,\n        metrics: {\n          hoursWorked: emp.hoursWorked,\n          overtimeHours: emp.overtimeHours,\n          salesGenerated,\n          ordersProcessed,\n          avgOrderValue,\n          efficiency,\n          customerRating: Math.random() * 2 + 3 // 3-5 rating\n        },\n        costs: {\n          regularPay,\n          overtimePay,\n          totalCost,\n          costPerHour: totalCost / emp.hoursWorked\n        },\n        performance: {\n          salesPerHour: salesGenerated / emp.hoursWorked,\n          ordersPerHour: ordersProcessed / emp.hoursWorked,\n          efficiency: categorizeEmployeePerformance(efficiency)\n        }\n      };\n    });\n    \n    const totalHours = employees.reduce((sum, emp) => sum + emp.hoursWorked, 0);\n    const totalLaborCost = employeePerformance.reduce((sum, emp) => sum + emp.costs.totalCost, 0);\n    const averageWage = totalLaborCost / totalHours;\n    const overtimeHours = employees.reduce((sum, emp) => sum + emp.overtimeHours, 0);\n    \n    const overview = {\n      totalEmployees: employees.length,\n      totalHours,\n      totalLaborCost,\n      laborCostPercentage: calculateLaborCostPercentage(totalLaborCost, totalRevenue),\n      averageHourlyWage: averageWage,\n      overtimePercentage: (overtimeHours / totalHours) * 100,\n      productivityIndex: calculateProductivityIndex(totalRevenue, totalHours)\n    };\n    \n    // Department analysis\n    const departmentMap = new Map();\n    employeePerformance.forEach(emp => {\n      if (!departmentMap.has(emp.department)) {\n        departmentMap.set(emp.department, {\n          employees: [],\n          totalHours: 0,\n          totalCost: 0,\n          totalSales: 0\n        });\n      }\n      const dept = departmentMap.get(emp.department);\n      dept.employees.push(emp);\n      dept.totalHours += emp.metrics.hoursWorked;\n      dept.totalCost += emp.costs.totalCost;\n      dept.totalSales += emp.metrics.salesGenerated;\n    });\n    \n    const departmentAnalysis = Array.from(departmentMap.entries()).map(([department, data]) => ({\n      department,\n      employeeCount: data.employees.length,\n      totalHours: data.totalHours,\n      totalCost: data.totalCost,\n      averageWage: data.totalCost / data.totalHours,\n      productivity: data.totalSales / data.totalHours,\n      costAsPercentOfSales: (data.totalCost / totalRevenue) * 100\n    }));\n    \n    const costAnalysis = {\n      actual: totalLaborCost,\n      budgeted: totalRevenue * 0.28, // Target 28%\n      variance: totalLaborCost - (totalRevenue * 0.28),\n      variancePercent: ((totalLaborCost - (totalRevenue * 0.28)) / (totalRevenue * 0.28)) * 100,\n      breakdown: {\n        regularWages: employeePerformance.reduce((sum, emp) => sum + emp.costs.regularPay, 0),\n        overtime: employeePerformance.reduce((sum, emp) => sum + emp.costs.overtimePay, 0),\n        benefits: totalLaborCost * 0.15, // Estimate 15% for benefits\n        payrollTaxes: totalLaborCost * 0.08 // Estimate 8% for taxes\n      }\n    };\n    \n    const scheduleOptimization = [\n      {\n        department: 'Front of House',\n        shift: 'Lunch',\n        currentStaffing: 3,\n        recommendedStaffing: 2,\n        reason: 'Lower customer volume during lunch hours',\n        potentialSavings: 150\n      }\n    ];\n    \n    return {\n      id: `labor-${Date.now()}`,\n      name: 'Labor Analysis Report',\n      description: 'Employee performance and labor cost analysis',\n      generatedAt: new Date(),\n      dateRange: config.dateRange,\n      comparisonPeriod: config.comparisonPeriod,\n      type: 'labor-analysis',\n      data: {\n        overview,\n        employeePerformance,\n        departmentAnalysis,\n        costAnalysis,\n        scheduleOptimization\n      }\n    };\n  },\n  [CACHE_TAGS.LABOR_REPORT],\n  {\n    revalidate: 1800, // 30 minutes\n    tags: [CACHE_TAGS.LABOR_REPORT]\n  }\n);\n\n// Additional report generation functions would continue here...\n// For brevity, I'll include the structure for the remaining reports\n\nexport const generateInventoryReport = unstable_cache(\n  async (config: ReportConfig): Promise<InventoryReport> => {\n    await new Promise(resolve => setTimeout(resolve, 200));\n    \n    const inventory = generateMockInventoryData();\n    const orders = generateMockOrderData(config.dateRange);\n    \n    // Implementation would include inventory calculations\n    // This is a simplified version for the structure\n    \n    return {\n      id: `inventory-${Date.now()}`,\n      name: 'Inventory & Cost Control Report',\n      description: 'Inventory management and cost analysis',\n      generatedAt: new Date(),\n      dateRange: config.dateRange,\n      type: 'inventory-control',\n      data: {\n        overview: {\n          totalValue: 15000,\n          turnoverRate: 12,\n          daysOnHand: 30,\n          stockoutEvents: 2,\n          overStockItems: 3\n        },\n        costAnalysis: {\n          actualFoodCost: 8500,\n          theoreticalFoodCost: 8000,\n          variance: 500,\n          variancePercent: 6.25,\n          costPercentOfSales: 34,\n          costTrend: 'increasing'\n        },\n        wasteAnalysis: {\n          totalWasteValue: 320,\n          wastePercentOfPurchases: 3.8,\n          topWasteItems: [],\n          wasteByCategory: [],\n          wasteReductions: []\n        },\n        items: [],\n        alerts: []\n      }\n    };\n  },\n  [CACHE_TAGS.INVENTORY_REPORT],\n  {\n    revalidate: 3600,\n    tags: [CACHE_TAGS.INVENTORY_REPORT]\n  }\n);\n\nexport const generateCustomerReport = unstable_cache(\n  async (config: ReportConfig): Promise<CustomerReport> => {\n    await new Promise(resolve => setTimeout(resolve, 250));\n    \n    // Implementation would include customer behavior analysis\n    \n    return {\n      id: `customer-${Date.now()}`,\n      name: 'Customer Behavior Analytics',\n      description: 'Customer behavior and retention analysis',\n      generatedAt: new Date(),\n      dateRange: config.dateRange,\n      type: 'customer-analytics',\n      data: {\n        overview: {\n          totalCustomers: 850,\n          newCustomers: 120,\n          returningCustomers: 730,\n          averageOrderValue: 42,\n          averageVisitFrequency: 2.3,\n          customerLifetimeValue: 340\n        },\n        segments: [],\n        behavior: {\n          peakHours: [],\n          peakDays: [],\n          orderPatterns: [],\n          paymentPreferences: [],\n          channelPreferences: []\n        },\n        retention: {\n          retentionRate: 68,\n          churnRate: 32,\n          averageCustomerLifespan: 18,\n          retentionBySegment: [],\n          cohortAnalysis: []\n        },\n        loyalty: {\n          loyaltyTiers: [],\n          rewardRedemption: 15,\n          loyaltyImpact: {\n            loyalCustomerPercent: 25,\n            loyalCustomerAOV: 58,\n            loyalCustomerRevenue: 12500,\n            programROI: 180\n          }\n        }\n      }\n    };\n  },\n  [CACHE_TAGS.CUSTOMER_REPORT],\n  {\n    revalidate: 3600,\n    tags: [CACHE_TAGS.CUSTOMER_REPORT]\n  }\n);\n\n// Cache management\nexport async function revalidateAnalyticsCache(reportType?: string) {\n  const { revalidateTag } = await import('next/cache');\n  \n  if (reportType) {\n    const tagMap = {\n      'sales-summary': CACHE_TAGS.SALES_REPORT,\n      'menu-engineering': CACHE_TAGS.MENU_REPORT,\n      'labor-analysis': CACHE_TAGS.LABOR_REPORT,\n      'inventory-control': CACHE_TAGS.INVENTORY_REPORT,\n      'customer-analytics': CACHE_TAGS.CUSTOMER_REPORT\n    };\n    \n    const tag = tagMap[reportType as keyof typeof tagMap];\n    if (tag) {\n      revalidateTag(tag);\n    }\n  } else {\n    // Revalidate all analytics caches\n    Object.values(CACHE_TAGS).forEach(tag => {\n      revalidateTag(tag);\n    });\n  }\n}","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","import { normalizeDates } from \"./normalizeDates.js\";\n\nexport function normalizeInterval(context, interval) {\n  const [start, end] = normalizeDates(context, interval.start, interval.end);\n  return { start, end };\n}\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","'use server';\n\nimport { \n  MenuItemAnalysis, \n  CategoryAnalysis, \n  MenuOverview,\n  MenuRecommendation,\n  EmployeePerformance,\n  LaborOverview,\n  CostAnalysis,\n  WasteAnalysis,\n  CustomerSegment,\n  CustomerBehavior,\n  MetricValue\n} from './types';\n\n// Menu Engineering Calculations\nexport function calculateMenuItemClassification(\n  popularity: number, // percentile (0-100)\n  profitability: number // profit margin percentage\n): 'star' | 'plow-horse' | 'puzzle' | 'dog' {\n  const highPopularity = popularity >= 50;\n  const highProfitability = profitability >= 70;\n\n  if (highPopularity && highProfitability) return 'star';\n  if (highPopularity && !highProfitability) return 'plow-horse';\n  if (!highPopularity && highProfitability) return 'puzzle';\n  return 'dog';\n}\n\nexport function calculateMenuPopularity(\n  itemQuantitySold: number,\n  allItemsQuantitySold: number[]\n): number {\n  const sorted = [...allItemsQuantitySold].sort((a, b) => b - a);\n  const rank = sorted.findIndex(q => q <= itemQuantitySold);\n  return ((allItemsQuantitySold.length - rank) / allItemsQuantitySold.length) * 100;\n}\n\nexport function calculateMenuContribution(\n  itemRevenue: number,\n  totalRevenue: number\n): number {\n  return (itemRevenue / totalRevenue) * 100;\n}\n\nexport function generateMenuRecommendations(\n  items: MenuItemAnalysis[]\n): MenuRecommendation[] {\n  const recommendations: MenuRecommendation[] = [];\n\n  items.forEach(item => {\n    switch (item.classification) {\n      case 'star':\n        if (item.trends.popularityTrend === 'decreasing') {\n          recommendations.push({\n            type: 'promote',\n            itemId: item.id,\n            itemName: item.name,\n            reason: 'High-performing item showing declining popularity',\n            expectedImpact: 'Maintain star status and revenue contribution',\n            priority: 'high'\n          });\n        }\n        break;\n\n      case 'plow-horse':\n        recommendations.push({\n          type: 'engineer',\n          itemId: item.id,\n          itemName: item.name,\n          reason: 'Popular but low-margin item needs cost optimization',\n          expectedImpact: 'Improve profitability while maintaining popularity',\n          priority: 'medium'\n        });\n        break;\n\n      case 'puzzle':\n        if (item.metrics.profitability > 80) {\n          recommendations.push({\n            type: 'promote',\n            itemId: item.id,\n            itemName: item.name,\n            reason: 'High-margin item with low visibility',\n            expectedImpact: 'Increase popularity and overall profitability',\n            priority: 'high'\n          });\n        } else {\n          recommendations.push({\n            type: 'reposition',\n            itemId: item.id,\n            itemName: item.name,\n            reason: 'Moderate-margin item needs better positioning',\n            expectedImpact: 'Improve customer awareness and sales',\n            priority: 'medium'\n          });\n        }\n        break;\n\n      case 'dog':\n        if (item.metrics.profitability < 50 && item.metrics.popularity < 25) {\n          recommendations.push({\n            type: 'remove',\n            itemId: item.id,\n            itemName: item.name,\n            reason: 'Poor performance on both popularity and profitability',\n            expectedImpact: 'Reduce complexity and focus on better items',\n            priority: 'high'\n          });\n        } else {\n          recommendations.push({\n            type: 'engineer',\n            itemId: item.id,\n            itemName: item.name,\n            reason: 'Underperforming item may benefit from repositioning',\n            expectedImpact: 'Potential improvement in either popularity or margin',\n            priority: 'low'\n          });\n        }\n        break;\n    }\n  });\n\n  return recommendations.sort((a, b) => {\n    const priorityOrder = { high: 3, medium: 2, low: 1 };\n    return priorityOrder[b.priority] - priorityOrder[a.priority];\n  });\n}\n\nexport function calculateCategoryAnalysis(\n  items: MenuItemAnalysis[]\n): CategoryAnalysis[] {\n  const categoryMap = new Map<string, MenuItemAnalysis[]>();\n\n  // Group items by category\n  items.forEach(item => {\n    if (!categoryMap.has(item.category)) {\n      categoryMap.set(item.category, []);\n    }\n    categoryMap.get(item.category)!.push(item);\n  });\n\n  return Array.from(categoryMap.entries()).map(([category, categoryItems]) => {\n    const totalRevenue = categoryItems.reduce((sum, item) => sum + item.metrics.revenue, 0);\n    const avgPopularity = categoryItems.reduce((sum, item) => sum + item.metrics.popularity, 0) / categoryItems.length;\n    const avgProfitability = categoryItems.reduce((sum, item) => sum + item.metrics.profitability, 0) / categoryItems.length;\n\n    const classifications = categoryItems.reduce(\n      (acc, item) => {\n        acc[item.classification]++;\n        return acc;\n      },\n      { star: 0, 'plow-horse': 0, puzzle: 0, dog: 0 }\n    );\n\n    return {\n      category,\n      itemCount: categoryItems.length,\n      totalRevenue,\n      averagePopularity: Math.round(avgPopularity * 100) / 100,\n      averageProfitability: Math.round(avgProfitability * 100) / 100,\n      stars: classifications.star,\n      plowHorses: classifications['plow-horse'],\n      puzzles: classifications.puzzle,\n      dogs: classifications.dog\n    };\n  });\n}\n\n// Labor Analysis Calculations\nexport function calculateEmployeeEfficiency(\n  ordersProcessed: number,\n  hoursWorked: number,\n  salesGenerated: number\n): number {\n  const ordersPerHour = ordersProcessed / hoursWorked;\n  const salesPerHour = salesGenerated / hoursWorked;\n  \n  // Normalize to 0-100 scale (this would be calibrated based on restaurant benchmarks)\n  const normalizedOrders = Math.min(ordersPerHour / 5, 1) * 50; // Max 5 orders/hour = 50 points\n  const normalizedSales = Math.min(salesPerHour / 200, 1) * 50; // Max $200/hour = 50 points\n  \n  return Math.round(normalizedOrders + normalizedSales);\n}\n\nexport function categorizeEmployeePerformance(efficiency: number): 'excellent' | 'good' | 'average' | 'needs-improvement' {\n  if (efficiency >= 90) return 'excellent';\n  if (efficiency >= 75) return 'good';\n  if (efficiency >= 60) return 'average';\n  return 'needs-improvement';\n}\n\nexport function calculateLaborCostPercentage(\n  totalLaborCost: number,\n  totalRevenue: number\n): number {\n  return (totalLaborCost / totalRevenue) * 100;\n}\n\nexport function calculateProductivityIndex(\n  totalSales: number,\n  totalLaborHours: number,\n  benchmarkSalesPerHour: number = 150\n): number {\n  const actualSalesPerHour = totalSales / totalLaborHours;\n  return (actualSalesPerHour / benchmarkSalesPerHour) * 100;\n}\n\n// Cost Analysis Calculations\nexport function calculateFoodCostVariance(\n  actualCost: number,\n  theoreticalCost: number\n): { variance: number; variancePercent: number } {\n  const variance = actualCost - theoreticalCost;\n  const variancePercent = (variance / theoreticalCost) * 100;\n  \n  return {\n    variance: Math.round(variance * 100) / 100,\n    variancePercent: Math.round(variancePercent * 100) / 100\n  };\n}\n\nexport function calculateInventoryTurnover(\n  costOfGoodsSold: number,\n  averageInventoryValue: number\n): number {\n  return costOfGoodsSold / averageInventoryValue;\n}\n\nexport function calculateDaysOnHand(\n  currentInventoryValue: number,\n  dailyCostOfGoods: number\n): number {\n  return currentInventoryValue / dailyCostOfGoods;\n}\n\nexport function calculateWastePercentage(\n  wasteValue: number,\n  totalPurchases: number\n): number {\n  return (wasteValue / totalPurchases) * 100;\n}\n\n// Customer Analytics Calculations\nexport function calculateCustomerLifetimeValue(\n  averageOrderValue: number,\n  averageVisitFrequency: number, // visits per year\n  averageCustomerLifespan: number // years\n): number {\n  return averageOrderValue * averageVisitFrequency * averageCustomerLifespan;\n}\n\nexport function calculateRetentionRate(\n  returningCustomers: number,\n  totalCustomersAtStart: number\n): number {\n  return (returningCustomers / totalCustomersAtStart) * 100;\n}\n\nexport function calculateChurnRate(retentionRate: number): number {\n  return 100 - retentionRate;\n}\n\nexport function segmentCustomersByValue(\n  customers: Array<{ id: string; totalSpend: number; visitCount: number }>\n): CustomerSegment[] {\n  // Sort customers by total spend\n  const sortedCustomers = [...customers].sort((a, b) => b.totalSpend - a.totalSpend);\n  \n  const total = customers.length;\n  const segments: CustomerSegment[] = [];\n\n  // High-value customers (top 10%)\n  const highValueCount = Math.floor(total * 0.1);\n  const highValueCustomers = sortedCustomers.slice(0, highValueCount);\n  \n  // Medium-value customers (next 30%)\n  const mediumValueCount = Math.floor(total * 0.3);\n  const mediumValueCustomers = sortedCustomers.slice(highValueCount, highValueCount + mediumValueCount);\n  \n  // Low-value customers (remaining 60%)\n  const lowValueCustomers = sortedCustomers.slice(highValueCount + mediumValueCount);\n\n  if (highValueCustomers.length > 0) {\n    segments.push({\n      segment: 'High-Value',\n      customerCount: highValueCustomers.length,\n      percentOfBase: (highValueCustomers.length / total) * 100,\n      averageOrderValue: highValueCustomers.reduce((sum, c) => sum + (c.totalSpend / c.visitCount), 0) / highValueCustomers.length,\n      visitFrequency: highValueCustomers.reduce((sum, c) => sum + c.visitCount, 0) / highValueCustomers.length,\n      totalRevenue: highValueCustomers.reduce((sum, c) => sum + c.totalSpend, 0),\n      characteristics: ['High spend per visit', 'Frequent visitors', 'Loyal customers']\n    });\n  }\n\n  if (mediumValueCustomers.length > 0) {\n    segments.push({\n      segment: 'Medium-Value',\n      customerCount: mediumValueCustomers.length,\n      percentOfBase: (mediumValueCustomers.length / total) * 100,\n      averageOrderValue: mediumValueCustomers.reduce((sum, c) => sum + (c.totalSpend / c.visitCount), 0) / mediumValueCustomers.length,\n      visitFrequency: mediumValueCustomers.reduce((sum, c) => sum + c.visitCount, 0) / mediumValueCustomers.length,\n      totalRevenue: mediumValueCustomers.reduce((sum, c) => sum + c.totalSpend, 0),\n      characteristics: ['Moderate spend', 'Regular visitors', 'Growth potential']\n    });\n  }\n\n  if (lowValueCustomers.length > 0) {\n    segments.push({\n      segment: 'Low-Value',\n      customerCount: lowValueCustomers.length,\n      percentOfBase: (lowValueCustomers.length / total) * 100,\n      averageOrderValue: lowValueCustomers.reduce((sum, c) => sum + (c.totalSpend / c.visitCount), 0) / lowValueCustomers.length,\n      visitFrequency: lowValueCustomers.reduce((sum, c) => sum + c.visitCount, 0) / lowValueCustomers.length,\n      totalRevenue: lowValueCustomers.reduce((sum, c) => sum + c.totalSpend, 0),\n      characteristics: ['Lower spend', 'Infrequent visits', 'Price-sensitive']\n    });\n  }\n\n  return segments;\n}\n\n// Utility functions for metric calculations\nexport function calculateMetricValue(\n  current: number,\n  previous?: number,\n  target?: number,\n  unit?: string\n): MetricValue {\n  const result: MetricValue = {\n    current,\n    unit\n  };\n\n  if (previous !== undefined) {\n    result.previous = previous;\n    result.change = current - previous;\n    result.changePercent = previous !== 0 ? ((current - previous) / previous) * 100 : 0;\n    \n    if (Math.abs(result.changePercent) < 2) {\n      result.changeType = 'neutral';\n    } else {\n      result.changeType = result.change > 0 ? 'increase' : 'decrease';\n    }\n  }\n\n  if (target !== undefined) {\n    result.target = target;\n  }\n\n  return result;\n}\n\nexport function calculatePercentileRank(value: number, dataset: number[]): number {\n  const sorted = [...dataset].sort((a, b) => a - b);\n  const rank = sorted.filter(v => v <= value).length;\n  return (rank / dataset.length) * 100;\n}\n\nexport function calculateMovingAverage(data: number[], window: number): number[] {\n  if (window > data.length) return data;\n  \n  const result: number[] = [];\n  \n  for (let i = 0; i <= data.length - window; i++) {\n    const sum = data.slice(i, i + window).reduce((acc, val) => acc + val, 0);\n    result.push(sum / window);\n  }\n  \n  return result;\n}\n\nexport function calculateTrend(values: number[]): 'increasing' | 'decreasing' | 'stable' {\n  if (values.length < 2) return 'stable';\n  \n  let increases = 0;\n  let decreases = 0;\n  \n  for (let i = 1; i < values.length; i++) {\n    const change = values[i] - values[i - 1];\n    const changePercent = Math.abs(change / values[i - 1]) * 100;\n    \n    if (changePercent > 5) { // Only consider significant changes\n      if (change > 0) increases++;\n      else decreases++;\n    }\n  }\n  \n  if (increases > decreases) return 'increasing';\n  if (decreases > increases) return 'decreasing';\n  return 'stable';\n}\n\n// ABC Analysis for inventory\nexport function performABCAnalysis<T extends { value: number }>(\n  items: T[],\n  aThreshold: number = 80,\n  bThreshold: number = 95\n): Array<T & { category: 'A' | 'B' | 'C' }> {\n  // Sort by value descending\n  const sorted = [...items].sort((a, b) => b.value - a.value);\n  \n  // Calculate cumulative percentages\n  const totalValue = sorted.reduce((sum, item) => sum + item.value, 0);\n  let cumulativeValue = 0;\n  \n  return sorted.map(item => {\n    cumulativeValue += item.value;\n    const cumulativePercent = (cumulativeValue / totalValue) * 100;\n    \n    let category: 'A' | 'B' | 'C';\n    if (cumulativePercent <= aThreshold) {\n      category = 'A';\n    } else if (cumulativePercent <= bThreshold) {\n      category = 'B';\n    } else {\n      category = 'C';\n    }\n    \n    return { ...item, category };\n  });\n}\n\n// Statistical functions\nexport function calculateStandardDeviation(values: number[]): number {\n  const mean = values.reduce((sum, value) => sum + value, 0) / values.length;\n  const squaredDiffs = values.map(value => Math.pow(value - mean, 2));\n  const avgSquaredDiff = squaredDiffs.reduce((sum, value) => sum + value, 0) / values.length;\n  return Math.sqrt(avgSquaredDiff);\n}\n\nexport function calculateCorrelation(x: number[], y: number[]): number {\n  if (x.length !== y.length) throw new Error('Arrays must have the same length');\n  \n  const n = x.length;\n  const sumX = x.reduce((sum, val) => sum + val, 0);\n  const sumY = y.reduce((sum, val) => sum + val, 0);\n  const sumXY = x.reduce((sum, val, i) => sum + val * y[i], 0);\n  const sumXX = x.reduce((sum, val) => sum + val * val, 0);\n  const sumYY = y.reduce((sum, val) => sum + val * val, 0);\n  \n  const numerator = n * sumXY - sumX * sumY;\n  const denominator = Math.sqrt((n * sumXX - sumX * sumX) * (n * sumYY - sumY * sumY));\n  \n  return denominator === 0 ? 0 : numerator / denominator;\n}","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { normalizeInterval } from \"./_lib/normalizeInterval.js\";\nimport { constructFrom } from \"./constructFrom.js\";\n\n/**\n * The {@link eachDayOfInterval} function options.\n */\n\n/**\n * The {@link eachDayOfInterval} function result type. It resolves the proper data type.\n * It uses the first argument date object type, starting from the date argument,\n * then the start interval date, and finally the end interval date. If\n * a context function is passed, it uses the context function return type.\n */\n\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * @typeParam IntervalType - Interval type.\n * @typeParam Options - Options type.\n *\n * @param interval - The interval.\n * @param options - An object with options.\n *\n * @returns The array with starts of days from the day of the interval start to the day of the interval end\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * const result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\nexport function eachDayOfInterval(interval, options) {\n  const { start, end } = normalizeInterval(options?.in, interval);\n\n  let reversed = +start > +end;\n  const endTime = reversed ? +start : +end;\n  const date = reversed ? end : start;\n  date.setHours(0, 0, 0, 0);\n\n  let step = options?.step ?? 1;\n  if (!step) return [];\n  if (step < 0) {\n    step = -step;\n    reversed = !reversed;\n  }\n\n  const dates = [];\n\n  while (+date <= endTime) {\n    dates.push(constructFrom(start, date));\n    date.setDate(date.getDate() + step);\n    date.setHours(0, 0, 0, 0);\n  }\n\n  return reversed ? dates.reverse() : dates;\n}\n\n// Fallback for modularized imports:\nexport default eachDayOfInterval;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n"],"names":["module","exports","require","vendored","ReactServerDOMTurbopackServer","registerServerReference","ensureServerEntryExports","actions","i","length","action","Error"],"mappings":"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","ignoreList":[0,1,2,3,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]}