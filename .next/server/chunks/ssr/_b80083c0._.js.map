{"version":3,"sources":["turbopack:///[project]/components/ui/skeleton.tsx","turbopack:///[project]/app/settings/loading.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface SkeletonProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'circular' | 'text' | 'card';\n  width?: string | number;\n  height?: string | number;\n  lines?: number; // For text variant\n  animate?: boolean;\n}\n\nfunction Skeleton({\n  className,\n  variant = 'default',\n  width,\n  height,\n  lines = 1,\n  animate = true,\n  style,\n  ...props\n}: SkeletonProps) {\n  const baseClasses = cn(\n    'bg-muted',\n    animate && 'animate-pulse',\n    {\n      'rounded-md': variant === 'default' || variant === 'card',\n      'rounded-full': variant === 'circular',\n      'rounded': variant === 'text',\n    },\n    className\n  );\n\n  const inlineStyles = {\n    width: width,\n    height: height,\n    ...style,\n  };\n\n  // For text variant with multiple lines\n  if (variant === 'text' && lines > 1) {\n    return (\n      <div className=\"space-y-2\" {...props}>\n        {Array.from({ length: lines }, (_, i) => (\n          <div\n            key={i}\n            className={cn(\n              baseClasses,\n              i === lines - 1 ? 'w-3/4' : 'w-full' // Last line is shorter\n            )}\n            style={{\n              height: height || '1rem',\n              width: i === lines - 1 ? '75%' : width || '100%',\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Default height based on variant\n  const getDefaultHeight = () => {\n    if (height) return height;\n    switch (variant) {\n      case 'text':\n        return '1rem';\n      case 'circular':\n        return '2.5rem';\n      case 'card':\n        return '8rem';\n      default:\n        return '1.25rem';\n    }\n  };\n\n  // Default width based on variant\n  const getDefaultWidth = () => {\n    if (width) return width;\n    switch (variant) {\n      case 'circular':\n        return '2.5rem';\n      default:\n        return '100%';\n    }\n  };\n\n  const defaultHeight = getDefaultHeight();\n  const defaultWidth = getDefaultWidth();\n\n  return (\n    <div\n      className={baseClasses}\n      style={{\n        ...inlineStyles,\n        height: inlineStyles.height || defaultHeight,\n        width: inlineStyles.width || defaultWidth,\n      }}\n      {...props}\n    />\n  );\n}\n\n// Predefined skeleton patterns for common use cases\nexport function SkeletonCard({ className, ...props }: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      <Skeleton variant=\"card\" height=\"12rem\" />\n      <div className=\"space-y-2\">\n        <Skeleton height=\"1.25rem\" />\n        <Skeleton height=\"1rem\" width=\"80%\" />\n      </div>\n    </div>\n  );\n}\n\nexport function SkeletonAvatar({ \n  className, \n  size = 'md',\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { size?: 'sm' | 'md' | 'lg' }) {\n  const sizeMap = {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem',\n  };\n  \n  return (\n    <Skeleton\n      variant=\"circular\"\n      width={sizeMap[size]}\n      height={sizeMap[size]}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonText({ \n  lines = 3,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <Skeleton\n      variant=\"text\"\n      lines={lines}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { rows?: number; columns?: number }) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex space-x-4\">\n        {Array.from({ length: columns }, (_, i) => (\n          <Skeleton key={`header-${i}`} height=\"1.5rem\" className=\"flex-1\" />\n        ))}\n      </div>\n      {/* Rows */}\n      {Array.from({ length: rows }, (_, rowIndex) => (\n        <div key={`row-${rowIndex}`} className=\"flex space-x-4\">\n          {Array.from({ length: columns }, (_, colIndex) => (\n            <Skeleton key={`cell-${rowIndex}-${colIndex}`} height=\"1.25rem\" className=\"flex-1\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport { Skeleton };","import { Skeleton } from '../../components/ui/skeleton';\n\nexport default function SettingsLoading() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header Skeleton */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"mx-auto max-w-screen-2xl px-4 py-6 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-2\">\n              <Skeleton className=\"h-8 w-32\" />\n              <Skeleton className=\"h-4 w-96\" />\n            </div>\n            <div className=\"flex gap-2\">\n              <Skeleton className=\"h-9 w-24\" />\n              <Skeleton className=\"h-9 w-20\" />\n              <Skeleton className=\"h-9 w-16\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Settings Header Skeleton */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"mx-auto max-w-screen-2xl px-4 py-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <Skeleton className=\"h-6 w-6 rounded-full\" />\n              <Skeleton className=\"h-5 w-40\" />\n            </div>\n            <div className=\"flex gap-2\">\n              <Skeleton className=\"h-8 w-20\" />\n              <Skeleton className=\"h-8 w-24\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mx-auto max-w-screen-2xl px-4 pb-6 sm:px-6 lg:px-8 mt-6\">\n        <div className=\"flex gap-8\">\n          {/* Navigation Skeleton */}\n          <aside className=\"w-64 flex-shrink-0\">\n            <div className=\"sticky top-6\">\n              <nav className=\"space-y-1\">\n                {Array.from({ length: 8 }).map((_, i) => (\n                  <div key={i} className=\"flex items-center gap-3 px-3 py-2\">\n                    <Skeleton className=\"h-5 w-5\" />\n                    <Skeleton className=\"h-4 flex-1\" />\n                  </div>\n                ))}\n              </nav>\n            </div>\n          </aside>\n\n          {/* Main Content Skeleton */}\n          <main className=\"flex-1 min-w-0\">\n            <div className=\"bg-white shadow-sm ring-1 ring-gray-900/5 rounded-lg\">\n              <div className=\"p-6\">\n                {/* Tab Headers */}\n                <div className=\"flex space-x-8 border-b border-gray-200 mb-6\">\n                  {Array.from({ length: 4 }).map((_, i) => (\n                    <Skeleton key={i} className=\"h-6 w-20 mb-4\" />\n                  ))}\n                </div>\n\n                {/* Content Area */}\n                <div className=\"space-y-6\">\n                  {/* Form Section */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    {Array.from({ length: 6 }).map((_, i) => (\n                      <div key={i} className=\"space-y-2\">\n                        <Skeleton className=\"h-4 w-24\" />\n                        <Skeleton className=\"h-10 w-full\" />\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Card Sections */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-8\">\n                    {Array.from({ length: 3 }).map((_, i) => (\n                      <div key={i} className=\"border border-gray-200 rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <Skeleton className=\"h-5 w-20\" />\n                            <Skeleton className=\"h-4 w-4 rounded-full\" />\n                          </div>\n                          <Skeleton className=\"h-4 w-full\" />\n                          <Skeleton className=\"h-4 w-3/4\" />\n                          <div className=\"flex justify-between items-center pt-2\">\n                            <Skeleton className=\"h-3 w-12\" />\n                            <Skeleton className=\"h-6 w-16\" />\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Table Section */}\n                  <div className=\"mt-8\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <Skeleton className=\"h-6 w-32\" />\n                      <Skeleton className=\"h-9 w-24\" />\n                    </div>\n                    \n                    <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\n                      {/* Table Header */}\n                      <div className=\"bg-gray-50 border-b border-gray-200\">\n                        <div className=\"grid grid-cols-5 gap-4 p-4\">\n                          {Array.from({ length: 5 }).map((_, i) => (\n                            <Skeleton key={i} className=\"h-4 w-full\" />\n                          ))}\n                        </div>\n                      </div>\n                      \n                      {/* Table Rows */}\n                      {Array.from({ length: 5 }).map((_, i) => (\n                        <div key={i} className=\"border-b border-gray-200 last:border-b-0\">\n                          <div className=\"grid grid-cols-5 gap-4 p-4\">\n                            {Array.from({ length: 5 }).map((_, j) => (\n                              <div key={j} className=\"flex items-center\">\n                                {j === 0 ? (\n                                  <div className=\"flex items-center gap-3\">\n                                    <Skeleton className=\"h-8 w-8 rounded-full\" />\n                                    <Skeleton className=\"h-4 w-24\" />\n                                  </div>\n                                ) : (\n                                  <Skeleton className=\"h-4 w-full\" />\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                    <Skeleton className=\"h-10 w-20\" />\n                    <Skeleton className=\"h-10 w-24\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}