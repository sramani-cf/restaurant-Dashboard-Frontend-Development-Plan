{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface SkeletonProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'circular' | 'text' | 'card';\n  width?: string | number;\n  height?: string | number;\n  lines?: number; // For text variant\n  animate?: boolean;\n}\n\nfunction Skeleton({\n  className,\n  variant = 'default',\n  width,\n  height,\n  lines = 1,\n  animate = true,\n  style,\n  ...props\n}: SkeletonProps) {\n  const baseClasses = cn(\n    'bg-muted',\n    animate && 'animate-pulse',\n    {\n      'rounded-md': variant === 'default' || variant === 'card',\n      'rounded-full': variant === 'circular',\n      'rounded': variant === 'text',\n    },\n    className\n  );\n\n  const inlineStyles = {\n    width: width,\n    height: height,\n    ...style,\n  };\n\n  // For text variant with multiple lines\n  if (variant === 'text' && lines > 1) {\n    return (\n      <div className=\"space-y-2\" {...props}>\n        {Array.from({ length: lines }, (_, i) => (\n          <div\n            key={i}\n            className={cn(\n              baseClasses,\n              i === lines - 1 ? 'w-3/4' : 'w-full' // Last line is shorter\n            )}\n            style={{\n              height: height || '1rem',\n              width: i === lines - 1 ? '75%' : width || '100%',\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Default height based on variant\n  const getDefaultHeight = () => {\n    if (height) return height;\n    switch (variant) {\n      case 'text':\n        return '1rem';\n      case 'circular':\n        return '2.5rem';\n      case 'card':\n        return '8rem';\n      default:\n        return '1.25rem';\n    }\n  };\n\n  // Default width based on variant\n  const getDefaultWidth = () => {\n    if (width) return width;\n    switch (variant) {\n      case 'circular':\n        return '2.5rem';\n      default:\n        return '100%';\n    }\n  };\n\n  const defaultHeight = getDefaultHeight();\n  const defaultWidth = getDefaultWidth();\n\n  return (\n    <div\n      className={baseClasses}\n      style={{\n        ...inlineStyles,\n        height: inlineStyles.height || defaultHeight,\n        width: inlineStyles.width || defaultWidth,\n      }}\n      {...props}\n    />\n  );\n}\n\n// Predefined skeleton patterns for common use cases\nexport function SkeletonCard({ className, ...props }: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      <Skeleton variant=\"card\" height=\"12rem\" />\n      <div className=\"space-y-2\">\n        <Skeleton height=\"1.25rem\" />\n        <Skeleton height=\"1rem\" width=\"80%\" />\n      </div>\n    </div>\n  );\n}\n\nexport function SkeletonAvatar({ \n  className, \n  size = 'md',\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { size?: 'sm' | 'md' | 'lg' }) {\n  const sizeMap = {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem',\n  };\n  \n  return (\n    <Skeleton\n      variant=\"circular\"\n      width={sizeMap[size]}\n      height={sizeMap[size]}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonText({ \n  lines = 3,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <Skeleton\n      variant=\"text\"\n      lines={lines}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { rows?: number; columns?: number }) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex space-x-4\">\n        {Array.from({ length: columns }, (_, i) => (\n          <Skeleton key={`header-${i}`} height=\"1.5rem\" className=\"flex-1\" />\n        ))}\n      </div>\n      {/* Rows */}\n      {Array.from({ length: rows }, (_, rowIndex) => (\n        <div key={`row-${rowIndex}`} className=\"flex space-x-4\">\n          {Array.from({ length: columns }, (_, colIndex) => (\n            <Skeleton key={`cell-${rowIndex}-${colIndex}`} height=\"1.25rem\" className=\"flex-1\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport { Skeleton };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/settings/loading.tsx"],"sourcesContent":["import { Skeleton } from '../../components/ui/skeleton';\n\nexport default function SettingsLoading() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header Skeleton */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"mx-auto max-w-screen-2xl px-4 py-6 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"space-y-2\">\n              <Skeleton className=\"h-8 w-32\" />\n              <Skeleton className=\"h-4 w-96\" />\n            </div>\n            <div className=\"flex gap-2\">\n              <Skeleton className=\"h-9 w-24\" />\n              <Skeleton className=\"h-9 w-20\" />\n              <Skeleton className=\"h-9 w-16\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Settings Header Skeleton */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"mx-auto max-w-screen-2xl px-4 py-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <Skeleton className=\"h-6 w-6 rounded-full\" />\n              <Skeleton className=\"h-5 w-40\" />\n            </div>\n            <div className=\"flex gap-2\">\n              <Skeleton className=\"h-8 w-20\" />\n              <Skeleton className=\"h-8 w-24\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"mx-auto max-w-screen-2xl px-4 pb-6 sm:px-6 lg:px-8 mt-6\">\n        <div className=\"flex gap-8\">\n          {/* Navigation Skeleton */}\n          <aside className=\"w-64 flex-shrink-0\">\n            <div className=\"sticky top-6\">\n              <nav className=\"space-y-1\">\n                {Array.from({ length: 8 }).map((_, i) => (\n                  <div key={i} className=\"flex items-center gap-3 px-3 py-2\">\n                    <Skeleton className=\"h-5 w-5\" />\n                    <Skeleton className=\"h-4 flex-1\" />\n                  </div>\n                ))}\n              </nav>\n            </div>\n          </aside>\n\n          {/* Main Content Skeleton */}\n          <main className=\"flex-1 min-w-0\">\n            <div className=\"bg-white shadow-sm ring-1 ring-gray-900/5 rounded-lg\">\n              <div className=\"p-6\">\n                {/* Tab Headers */}\n                <div className=\"flex space-x-8 border-b border-gray-200 mb-6\">\n                  {Array.from({ length: 4 }).map((_, i) => (\n                    <Skeleton key={i} className=\"h-6 w-20 mb-4\" />\n                  ))}\n                </div>\n\n                {/* Content Area */}\n                <div className=\"space-y-6\">\n                  {/* Form Section */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                    {Array.from({ length: 6 }).map((_, i) => (\n                      <div key={i} className=\"space-y-2\">\n                        <Skeleton className=\"h-4 w-24\" />\n                        <Skeleton className=\"h-10 w-full\" />\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Card Sections */}\n                  <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 mt-8\">\n                    {Array.from({ length: 3 }).map((_, i) => (\n                      <div key={i} className=\"border border-gray-200 rounded-lg p-4\">\n                        <div className=\"space-y-3\">\n                          <div className=\"flex items-center justify-between\">\n                            <Skeleton className=\"h-5 w-20\" />\n                            <Skeleton className=\"h-4 w-4 rounded-full\" />\n                          </div>\n                          <Skeleton className=\"h-4 w-full\" />\n                          <Skeleton className=\"h-4 w-3/4\" />\n                          <div className=\"flex justify-between items-center pt-2\">\n                            <Skeleton className=\"h-3 w-12\" />\n                            <Skeleton className=\"h-6 w-16\" />\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Table Section */}\n                  <div className=\"mt-8\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <Skeleton className=\"h-6 w-32\" />\n                      <Skeleton className=\"h-9 w-24\" />\n                    </div>\n                    \n                    <div className=\"border border-gray-200 rounded-lg overflow-hidden\">\n                      {/* Table Header */}\n                      <div className=\"bg-gray-50 border-b border-gray-200\">\n                        <div className=\"grid grid-cols-5 gap-4 p-4\">\n                          {Array.from({ length: 5 }).map((_, i) => (\n                            <Skeleton key={i} className=\"h-4 w-full\" />\n                          ))}\n                        </div>\n                      </div>\n                      \n                      {/* Table Rows */}\n                      {Array.from({ length: 5 }).map((_, i) => (\n                        <div key={i} className=\"border-b border-gray-200 last:border-b-0\">\n                          <div className=\"grid grid-cols-5 gap-4 p-4\">\n                            {Array.from({ length: 5 }).map((_, j) => (\n                              <div key={j} className=\"flex items-center\">\n                                {j === 0 ? (\n                                  <div className=\"flex items-center gap-3\">\n                                    <Skeleton className=\"h-8 w-8 rounded-full\" />\n                                    <Skeleton className=\"h-4 w-24\" />\n                                  </div>\n                                ) : (\n                                  <Skeleton className=\"h-4 w-full\" />\n                                )}\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n                    <Skeleton className=\"h-10 w-20\" />\n                    <Skeleton className=\"h-10 w-24\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;kDACpB,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;;;;;;;0CAEtB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;kDACpB,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;kDACpB,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO5B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;kDACpB,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;;;;;;;0CAEtB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;kDACpB,8OAAC,yIAAQ;wCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAM5B,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAM,WAAU;sCACf,cAAA,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;8CACZ,MAAM,IAAI,CAAC;wCAAE,QAAQ;oCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;4CAAY,WAAU;;8DACrB,8OAAC,yIAAQ;oDAAC,WAAU;;;;;;8DACpB,8OAAC,yIAAQ;oDAAC,WAAU;;;;;;;2CAFZ;;;;;;;;;;;;;;;;;;;;sCAUlB,8OAAC;4BAAK,WAAU;sCACd,cAAA,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;oCAAI,WAAU;;sDAEb,8OAAC;4CAAI,WAAU;sDACZ,MAAM,IAAI,CAAC;gDAAE,QAAQ;4CAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC,yIAAQ;oDAAS,WAAU;mDAAb;;;;;;;;;;sDAKnB,8OAAC;4CAAI,WAAU;;8DAEb,8OAAC;oDAAI,WAAU;8DACZ,MAAM,IAAI,CAAC;wDAAE,QAAQ;oDAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;4DAAY,WAAU;;8EACrB,8OAAC,yIAAQ;oEAAC,WAAU;;;;;;8EACpB,8OAAC,yIAAQ;oEAAC,WAAU;;;;;;;2DAFZ;;;;;;;;;;8DAQd,8OAAC;oDAAI,WAAU;8DACZ,MAAM,IAAI,CAAC;wDAAE,QAAQ;oDAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;4DAAY,WAAU;sEACrB,cAAA,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAI,WAAU;;0FACb,8OAAC,yIAAQ;gFAAC,WAAU;;;;;;0FACpB,8OAAC,yIAAQ;gFAAC,WAAU;;;;;;;;;;;;kFAEtB,8OAAC,yIAAQ;wEAAC,WAAU;;;;;;kFACpB,8OAAC,yIAAQ;wEAAC,WAAU;;;;;;kFACpB,8OAAC;wEAAI,WAAU;;0FACb,8OAAC,yIAAQ;gFAAC,WAAU;;;;;;0FACpB,8OAAC,yIAAQ;gFAAC,WAAU;;;;;;;;;;;;;;;;;;2DAVhB;;;;;;;;;;8DAkBd,8OAAC;oDAAI,WAAU;;sEACb,8OAAC;4DAAI,WAAU;;8EACb,8OAAC,yIAAQ;oEAAC,WAAU;;;;;;8EACpB,8OAAC,yIAAQ;oEAAC,WAAU;;;;;;;;;;;;sEAGtB,8OAAC;4DAAI,WAAU;;8EAEb,8OAAC;oEAAI,WAAU;8EACb,cAAA,8OAAC;wEAAI,WAAU;kFACZ,MAAM,IAAI,CAAC;4EAAE,QAAQ;wEAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC,yIAAQ;gFAAS,WAAU;+EAAb;;;;;;;;;;;;;;;gEAMpB,MAAM,IAAI,CAAC;oEAAE,QAAQ;gEAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;wEAAY,WAAU;kFACrB,cAAA,8OAAC;4EAAI,WAAU;sFACZ,MAAM,IAAI,CAAC;gFAAE,QAAQ;4EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;oFAAY,WAAU;8FACpB,MAAM,kBACL,8OAAC;wFAAI,WAAU;;0GACb,8OAAC,yIAAQ;gGAAC,WAAU;;;;;;0GACpB,8OAAC,yIAAQ;gGAAC,WAAU;;;;;;;;;;;6GAGtB,8OAAC,yIAAQ;wFAAC,WAAU;;;;;;mFAPd;;;;;;;;;;uEAHN;;;;;;;;;;;;;;;;;8DAqBhB,8OAAC;oDAAI,WAAU;;sEACb,8OAAC,yIAAQ;4DAAC,WAAU;;;;;;sEACpB,8OAAC,yIAAQ;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUxC","debugId":null}}]
}