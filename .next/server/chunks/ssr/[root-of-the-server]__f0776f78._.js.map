{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-dashboard.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryDashboard = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryDashboard() from the server but InventoryDashboard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-dashboard.tsx <module evaluation>\",\n    \"InventoryDashboard\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,8EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-dashboard.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryDashboard = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryDashboard() from the server but InventoryDashboard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-dashboard.tsx\",\n    \"InventoryDashboard\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,0DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-metrics-cards.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryMetricsCards = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryMetricsCards() from the server but InventoryMetricsCards is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-metrics-cards.tsx <module evaluation>\",\n    \"InventoryMetricsCards\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,kFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-metrics-cards.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryMetricsCards = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryMetricsCards() from the server but InventoryMetricsCards is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-metrics-cards.tsx\",\n    \"InventoryMetricsCards\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,wBAAwB,IAAA,wQAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,8DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-filters.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryFilters = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryFilters() from the server but InventoryFilters is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-filters.tsx <module evaluation>\",\n    \"InventoryFilters\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,4EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-filters.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryFilters = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryFilters() from the server but InventoryFilters is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-filters.tsx\",\n    \"InventoryFilters\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,wDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryTable() from the server but InventoryTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-table.tsx <module evaluation>\",\n    \"InventoryTable\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-table.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const InventoryTable = registerClientReference(\n    function() { throw new Error(\"Attempted to call InventoryTable() from the server but InventoryTable is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/inventory-table.tsx\",\n    \"InventoryTable\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/quick-actions.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QuickActions = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuickActions() from the server but QuickActions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/quick-actions.tsx <module evaluation>\",\n    \"QuickActions\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/quick-actions.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QuickActions = registerClientReference(\n    function() { throw new Error(\"Attempted to call QuickActions() from the server but QuickActions is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/quick-actions.tsx\",\n    \"QuickActions\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/mobile-barcode-fab.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const MobileBarcodeFAB = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileBarcodeFAB() from the server but MobileBarcodeFAB is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/mobile-barcode-fab.tsx <module evaluation>\",\n    \"MobileBarcodeFAB\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/mobile-barcode-fab.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const MobileBarcodeFAB = registerClientReference(\n    function() { throw new Error(\"Attempted to call MobileBarcodeFAB() from the server but MobileBarcodeFAB is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/inventory/mobile-barcode-fab.tsx\",\n    \"MobileBarcodeFAB\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,yDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/inventory/data.ts"],"sourcesContent":["import type {\n  InventoryItem,\n  Supplier,\n  PurchaseOrder,\n  WasteLog,\n  StockCount,\n  StockMovement,\n  InventoryAlert,\n  ProductCategory,\n  Location,\n  UnitOfMeasurement,\n  WasteReason,\n  Recipe,\n  InventoryMetrics,\n  InventoryFilters,\n  PurchaseOrderFilters,\n  WasteLogFilters,\n  InventoryResponse,\n  SupplierResponse,\n  PurchaseOrderResponse,\n  BarcodeLog,\n  ScanSession,\n} from './types';\n\n// Mock data for development - replace with actual API calls\nexport const mockLocations: Location[] = [\n  {\n    id: '1',\n    name: 'Main Kitchen',\n    address: '123 Main St, City, State 12345',\n    type: 'main',\n    isActive: true,\n  },\n  {\n    id: '2',\n    name: 'Prep Kitchen',\n    address: '456 Prep Ave, City, State 12345',\n    type: 'prep_kitchen',\n    isActive: true,\n  },\n  {\n    id: '3',\n    name: 'Dry Storage',\n    address: '789 Storage Rd, City, State 12345',\n    type: 'warehouse',\n    isActive: true,\n  },\n];\n\nexport const mockUnitsOfMeasurement: UnitOfMeasurement[] = [\n  { id: '1', name: 'Kilogram', abbreviation: 'kg', type: 'weight', conversionFactor: 1 },\n  { id: '2', name: 'Gram', abbreviation: 'g', type: 'weight', baseUnit: '1', conversionFactor: 0.001 },\n  { id: '3', name: 'Pound', abbreviation: 'lb', type: 'weight', baseUnit: '1', conversionFactor: 0.453592 },\n  { id: '4', name: 'Liter', abbreviation: 'L', type: 'volume', conversionFactor: 1 },\n  { id: '5', name: 'Milliliter', abbreviation: 'ml', type: 'volume', baseUnit: '4', conversionFactor: 0.001 },\n  { id: '6', name: 'Piece', abbreviation: 'pcs', type: 'count', conversionFactor: 1 },\n];\n\nexport const mockCategories: ProductCategory[] = [\n  {\n    id: '1',\n    name: 'Proteins',\n    description: 'Meat, poultry, fish, and seafood',\n    color: '#ef4444',\n    icon: '🥩',\n    sortOrder: 1,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '2',\n    name: 'Vegetables',\n    description: 'Fresh vegetables and herbs',\n    color: '#22c55e',\n    icon: '🥬',\n    sortOrder: 2,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '3',\n    name: 'Dairy',\n    description: 'Milk, cheese, butter, and dairy products',\n    color: '#3b82f6',\n    icon: '🧀',\n    sortOrder: 3,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '4',\n    name: 'Dry Goods',\n    description: 'Flour, rice, pasta, and pantry staples',\n    color: '#f59e0b',\n    icon: '🌾',\n    sortOrder: 4,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '5',\n    name: 'Beverages',\n    description: 'Drinks and beverage ingredients',\n    color: '#8b5cf6',\n    icon: '🥤',\n    sortOrder: 5,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n];\n\nexport const mockSuppliers: Supplier[] = [\n  {\n    id: '1',\n    name: 'Fresh Foods Distributors',\n    code: 'FFD001',\n    email: 'orders@freshfoods.com',\n    phone: '+1-555-0123',\n    website: 'https://freshfoods.com',\n    address: {\n      street: '123 Distribution Way',\n      city: 'Foodtown',\n      state: 'CA',\n      zipCode: '90210',\n      country: 'USA',\n    },\n    contacts: [\n      {\n        name: 'John Smith',\n        email: 'john.smith@freshfoods.com',\n        phone: '+1-555-0124',\n        role: 'Sales Representative',\n      },\n    ],\n    paymentTerms: 'Net 30',\n    deliveryTerms: 'FOB Destination',\n    minimumOrderValue: 500,\n    leadTimeDays: 2,\n    rating: 4,\n    notes: 'Reliable supplier for fresh produce',\n    taxId: '12-3456789',\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '2',\n    name: 'Premium Meats Co.',\n    code: 'PMC001',\n    email: 'sales@premiummeats.com',\n    phone: '+1-555-0456',\n    paymentTerms: 'Net 15',\n    leadTimeDays: 1,\n    rating: 5,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n    contacts: [],\n  },\n  {\n    id: '3',\n    name: 'Dairy Delights Inc.',\n    code: 'DDI001',\n    email: 'orders@dairydelights.com',\n    phone: '+1-555-0789',\n    paymentTerms: 'Net 30',\n    leadTimeDays: 3,\n    rating: 4,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n    contacts: [],\n  },\n];\n\nexport const mockWasteReasons: WasteReason[] = [\n  {\n    id: '1',\n    name: 'Expired',\n    description: 'Product reached expiration date',\n    category: 'expired',\n    color: '#ef4444',\n  },\n  {\n    id: '2',\n    name: 'Spoiled',\n    description: 'Product spoiled before expiration',\n    category: 'spoiled',\n    color: '#f97316',\n  },\n  {\n    id: '3',\n    name: 'Damaged in Transit',\n    description: 'Product damaged during delivery',\n    category: 'damaged',\n    color: '#eab308',\n  },\n  {\n    id: '4',\n    name: 'Overproduction',\n    description: 'Prepared too much food',\n    category: 'overproduction',\n    color: '#06b6d4',\n  },\n  {\n    id: '5',\n    name: 'Preparation Error',\n    description: 'Mistake during food preparation',\n    category: 'preparation',\n    color: '#8b5cf6',\n  },\n];\n\n// Mock inventory items\nexport const mockInventoryItems: InventoryItem[] = [\n  {\n    id: '1',\n    name: 'Chicken Breast',\n    description: 'Fresh boneless chicken breast',\n    sku: 'CHKBRST001',\n    barcode: '1234567890123',\n    categoryId: '1',\n    primaryUnit: '1', // kg\n    costPrice: 8.50,\n    averageCost: 8.75,\n    sellPrice: 15.00,\n    currentStock: 25.5,\n    minimumStock: 10.0,\n    reorderPoint: 15.0,\n    reorderQuantity: 50.0,\n    storageLocation: 'Walk-in Cooler A',\n    storageTemperature: 'refrigerated',\n    shelfLife: 5,\n    expirationTracking: true,\n    supplierId: '2',\n    supplierName: 'Premium Meats Co.',\n    supplierSku: 'PM-CHKB-001',\n    trackExpiration: true,\n    trackBatches: true,\n    allergens: [],\n    menuItemIds: ['burger-1', 'salad-1'],\n    isPerishable: true,\n    locationStock: [\n      {\n        locationId: '1',\n        quantity: 25.5,\n        reservedQuantity: 5.0,\n        lastUpdated: new Date(),\n      },\n    ],\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '2',\n    name: 'Tomatoes',\n    description: 'Fresh Roma tomatoes',\n    sku: 'TOM001',\n    categoryId: '2',\n    primaryUnit: '1', // kg\n    costPrice: 3.25,\n    currentStock: 15.8,\n    minimumStock: 5.0,\n    reorderPoint: 8.0,\n    supplierId: '1',\n    supplierName: 'Fresh Foods Distributors',\n    isPerishable: true,\n    trackExpiration: true,\n    shelfLife: 7,\n    storageTemperature: 'room_temp',\n    menuItemIds: ['burger-1', 'salad-1', 'pizza-1'],\n    locationStock: [\n      {\n        locationId: '1',\n        quantity: 15.8,\n        reservedQuantity: 2.0,\n        lastUpdated: new Date(),\n      },\n    ],\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n    allergens: [],\n  },\n  {\n    id: '3',\n    name: 'Mozzarella Cheese',\n    description: 'Whole milk mozzarella cheese',\n    sku: 'MOZZ001',\n    categoryId: '3',\n    primaryUnit: '1', // kg\n    costPrice: 12.00,\n    currentStock: 8.2,\n    minimumStock: 3.0,\n    reorderPoint: 5.0,\n    supplierId: '3',\n    supplierName: 'Dairy Delights Inc.',\n    isPerishable: true,\n    trackExpiration: true,\n    shelfLife: 14,\n    storageTemperature: 'refrigerated',\n    allergens: ['dairy'],\n    menuItemIds: ['pizza-1', 'lasagna-1'],\n    locationStock: [\n      {\n        locationId: '1',\n        quantity: 8.2,\n        reservedQuantity: 1.5,\n        lastUpdated: new Date(),\n      },\n    ],\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '4',\n    name: 'All-Purpose Flour',\n    description: '50lb bag of all-purpose flour',\n    sku: 'FLOUR001',\n    categoryId: '4',\n    primaryUnit: '1', // kg\n    costPrice: 18.50,\n    currentStock: 125.0,\n    minimumStock: 50.0,\n    reorderPoint: 75.0,\n    supplierId: '1',\n    supplierName: 'Fresh Foods Distributors',\n    isPerishable: false,\n    trackExpiration: false,\n    storageTemperature: 'room_temp',\n    allergens: ['gluten'],\n    menuItemIds: ['pizza-1', 'bread-1'],\n    locationStock: [\n      {\n        locationId: '3',\n        quantity: 125.0,\n        reservedQuantity: 10.0,\n        lastUpdated: new Date(),\n      },\n    ],\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n  {\n    id: '5',\n    name: 'Ground Beef 80/20',\n    description: 'Fresh ground beef 80% lean',\n    sku: 'BEEF001',\n    categoryId: '1',\n    primaryUnit: '1', // kg\n    costPrice: 7.50,\n    currentStock: 2.5, // Low stock alert\n    minimumStock: 10.0,\n    reorderPoint: 15.0,\n    supplierId: '2',\n    supplierName: 'Premium Meats Co.',\n    isPerishable: true,\n    trackExpiration: true,\n    shelfLife: 3,\n    storageTemperature: 'refrigerated',\n    allergens: [],\n    menuItemIds: ['burger-1', 'tacos-1'],\n    locationStock: [\n      {\n        locationId: '1',\n        quantity: 2.5,\n        reservedQuantity: 1.0,\n        lastUpdated: new Date(),\n      },\n    ],\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isActive: true,\n  },\n];\n\n// Data access functions\nexport async function getInventoryItems(filters?: InventoryFilters): Promise<InventoryResponse> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  let filteredItems = [...mockInventoryItems];\n  \n  if (filters) {\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      filteredItems = filteredItems.filter(item =>\n        item.name.toLowerCase().includes(searchTerm) ||\n        item.sku?.toLowerCase().includes(searchTerm) ||\n        item.description?.toLowerCase().includes(searchTerm)\n      );\n    }\n    \n    if (filters.categoryId) {\n      filteredItems = filteredItems.filter(item => item.categoryId === filters.categoryId);\n    }\n    \n    if (filters.supplierId) {\n      filteredItems = filteredItems.filter(item => item.supplierId === filters.supplierId);\n    }\n    \n    if (filters.lowStock) {\n      filteredItems = filteredItems.filter(item => item.currentStock <= item.minimumStock);\n    }\n    \n    if (filters.outOfStock) {\n      filteredItems = filteredItems.filter(item => item.currentStock <= 0);\n    }\n    \n    if (filters.status) {\n      if (filters.status === 'active') {\n        filteredItems = filteredItems.filter(item => item.isActive);\n      } else if (filters.status === 'inactive') {\n        filteredItems = filteredItems.filter(item => !item.isActive);\n      } else if (filters.status === 'discontinued') {\n        filteredItems = filteredItems.filter(item => item.isDiscontinued);\n      }\n    }\n  }\n  \n  return {\n    data: filteredItems,\n    total: filteredItems.length,\n    page: 1,\n    limit: 50,\n  };\n}\n\nexport async function getInventoryItem(id: string): Promise<InventoryItem | null> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  return mockInventoryItems.find(item => item.id === id) || null;\n}\n\nexport async function getSuppliers(): Promise<SupplierResponse> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  return {\n    data: mockSuppliers,\n    total: mockSuppliers.length,\n    page: 1,\n    limit: 50,\n  };\n}\n\nexport async function getSupplier(id: string): Promise<Supplier | null> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  return mockSuppliers.find(supplier => supplier.id === id) || null;\n}\n\nexport async function getProductCategories(): Promise<ProductCategory[]> {\n  await new Promise(resolve => setTimeout(resolve, 100));\n  return mockCategories;\n}\n\nexport async function getLocations(): Promise<Location[]> {\n  await new Promise(resolve => setTimeout(resolve, 100));\n  return mockLocations;\n}\n\nexport async function getUnitsOfMeasurement(): Promise<UnitOfMeasurement[]> {\n  await new Promise(resolve => setTimeout(resolve, 100));\n  return mockUnitsOfMeasurement;\n}\n\nexport async function getWasteReasons(): Promise<WasteReason[]> {\n  await new Promise(resolve => setTimeout(resolve, 100));\n  return mockWasteReasons;\n}\n\n// Purchase Orders\nexport async function getPurchaseOrders(filters?: PurchaseOrderFilters): Promise<PurchaseOrderResponse> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  const mockPOs: PurchaseOrder[] = [\n    {\n      id: '1',\n      orderNumber: 'PO-2024-001',\n      supplierId: '1',\n      supplierName: 'Fresh Foods Distributors',\n      locationId: '1',\n      status: 'confirmed',\n      orderDate: new Date('2024-01-15'),\n      expectedDeliveryDate: new Date('2024-01-17'),\n      subtotal: 450.00,\n      taxAmount: 36.00,\n      totalAmount: 486.00,\n      items: [\n        {\n          id: '1',\n          itemId: '2',\n          itemName: 'Tomatoes',\n          quantity: 20,\n          unitCost: 3.25,\n          totalCost: 65.00,\n          receivedQuantity: 20,\n        },\n        {\n          id: '2',\n          itemId: '4',\n          itemName: 'All-Purpose Flour',\n          quantity: 5,\n          unitCost: 18.50,\n          totalCost: 92.50,\n          receivedQuantity: 5,\n        },\n      ],\n      requestedBy: 'user-1',\n      approvedBy: 'manager-1',\n      approvalDate: new Date('2024-01-15'),\n      createdAt: new Date('2024-01-15'),\n      updatedAt: new Date('2024-01-17'),\n      isActive: true,\n    },\n    {\n      id: '2',\n      orderNumber: 'PO-2024-002',\n      supplierId: '2',\n      supplierName: 'Premium Meats Co.',\n      locationId: '1',\n      status: 'draft',\n      orderDate: new Date(),\n      expectedDeliveryDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),\n      subtotal: 425.00,\n      taxAmount: 34.00,\n      totalAmount: 459.00,\n      items: [\n        {\n          id: '3',\n          itemId: '1',\n          itemName: 'Chicken Breast',\n          quantity: 50,\n          unitCost: 8.50,\n          totalCost: 425.00,\n          receivedQuantity: 0,\n        },\n      ],\n      requestedBy: 'user-1',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n    },\n  ];\n  \n  return {\n    data: mockPOs,\n    total: mockPOs.length,\n    page: 1,\n    limit: 50,\n  };\n}\n\n// Waste Logs\nexport async function getWasteLogs(filters?: WasteLogFilters): Promise<WasteLog[]> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  const mockWasteLogs: WasteLog[] = [\n    {\n      id: '1',\n      itemId: '2',\n      itemName: 'Tomatoes',\n      locationId: '1',\n      quantity: 2.5,\n      unitCost: 3.25,\n      totalCost: 8.13,\n      reasonId: '2',\n      reasonName: 'Spoiled',\n      description: 'Tomatoes showed signs of overripening',\n      wasteDate: new Date(),\n      reportedBy: 'user-1',\n      isApproved: true,\n      approvedBy: 'manager-1',\n      preventable: true,\n      actionTaken: 'Adjusted storage temperature',\n      photos: [],\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n    },\n  ];\n  \n  return mockWasteLogs;\n}\n\n// Stock Movements\nexport async function getStockMovements(itemId?: string): Promise<StockMovement[]> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  \n  const mockMovements: StockMovement[] = [\n    {\n      id: '1',\n      itemId: '1',\n      locationId: '1',\n      type: 'purchase',\n      quantity: 50,\n      unitCost: 8.50,\n      totalCost: 425.00,\n      referenceId: 'PO-2024-002',\n      referenceType: 'purchase_order',\n      reason: 'Purchase order receipt',\n      userId: 'user-1',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n    },\n    {\n      id: '2',\n      itemId: '1',\n      locationId: '1',\n      type: 'consumption',\n      quantity: -5,\n      referenceId: 'order-123',\n      referenceType: 'sales_order',\n      reason: 'Menu item preparation',\n      userId: 'kitchen-1',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n    },\n  ];\n  \n  return itemId \n    ? mockMovements.filter(movement => movement.itemId === itemId)\n    : mockMovements;\n}\n\n// Inventory Alerts\nexport async function getInventoryAlerts(): Promise<InventoryAlert[]> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  \n  const mockAlerts: InventoryAlert[] = [\n    {\n      id: '1',\n      type: 'low_stock',\n      itemId: '5',\n      itemName: 'Ground Beef 80/20',\n      locationId: '1',\n      severity: 'high',\n      message: 'Ground Beef 80/20 is below minimum stock level (2.5 kg remaining)',\n      currentValue: 2.5,\n      thresholdValue: 10.0,\n      isAcknowledged: false,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n    },\n    {\n      id: '2',\n      type: 'expiring',\n      itemId: '1',\n      itemName: 'Chicken Breast',\n      locationId: '1',\n      severity: 'medium',\n      message: 'Chicken Breast batch expires in 2 days',\n      expirationDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),\n      isAcknowledged: false,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n    },\n  ];\n  \n  return mockAlerts;\n}\n\n// Inventory Metrics\nexport async function getInventoryMetrics(): Promise<InventoryMetrics> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  \n  const items = mockInventoryItems;\n  const totalValue = items.reduce((sum, item) => sum + (item.currentStock * item.costPrice), 0);\n  const lowStockItems = items.filter(item => item.currentStock <= item.minimumStock).length;\n  const outOfStockItems = items.filter(item => item.currentStock <= 0).length;\n  \n  return {\n    totalValue,\n    totalItems: items.length,\n    lowStockItems,\n    outOfStockItems,\n    expiringItems: 5, // Mock value\n    wasteValue: 847.23, // Mock value for this week\n    turnoverRate: 12.5, // Mock annual turnover\n    averageDaysToTurnover: 29, // Mock average\n  };\n}\n\n// Barcode functions\nexport async function lookupItemByBarcode(barcode: string): Promise<InventoryItem | null> {\n  await new Promise(resolve => setTimeout(resolve, 500)); // Simulate barcode scanning delay\n  return mockInventoryItems.find(item => item.barcode === barcode) || null;\n}\n\nexport async function logBarcodeScans(logs: Omit<BarcodeLog, 'id' | 'createdAt' | 'updatedAt' | 'isActive'>[]): Promise<void> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  // In real implementation, this would save to database\n  console.log('Barcode scans logged:', logs);\n}\n\n// Stock Count functions\nexport async function getStockCounts(): Promise<StockCount[]> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  \n  const mockStockCounts: StockCount[] = [\n    {\n      id: '1',\n      name: 'Weekly Inventory Count - Week 3',\n      type: 'full',\n      locationId: '1',\n      status: 'completed',\n      scheduledDate: new Date('2024-01-21'),\n      startDate: new Date('2024-01-21T08:00:00'),\n      completedDate: new Date('2024-01-21T12:30:00'),\n      items: [\n        {\n          id: '1',\n          itemId: '1',\n          itemName: 'Chicken Breast',\n          expectedQuantity: 25.5,\n          countedQuantity: 24.8,\n          variance: -0.7,\n          varianceValue: -5.95,\n          countedBy: 'user-1',\n        },\n        {\n          id: '2',\n          itemId: '2',\n          itemName: 'Tomatoes',\n          expectedQuantity: 15.8,\n          countedQuantity: 16.2,\n          variance: 0.4,\n          varianceValue: 1.30,\n          countedBy: 'user-1',\n        },\n      ],\n      totalVariance: -0.3,\n      totalVarianceValue: -4.65,\n      assignedTo: ['user-1'],\n      supervisedBy: 'manager-1',\n      requiresApproval: true,\n      approvedBy: 'manager-1',\n      approvalDate: new Date('2024-01-21T13:00:00'),\n      createdAt: new Date('2024-01-21'),\n      updatedAt: new Date('2024-01-21T13:00:00'),\n      isActive: true,\n    },\n  ];\n  \n  return mockStockCounts;\n}\n\n// Recipe costing\nexport async function getRecipes(): Promise<Recipe[]> {\n  await new Promise(resolve => setTimeout(resolve, 200));\n  \n  const mockRecipes: Recipe[] = [\n    {\n      id: '1',\n      name: 'Classic Burger',\n      menuItemId: 'burger-1',\n      servingSize: 1,\n      servings: 1,\n      ingredients: [\n        {\n          itemId: '5',\n          itemName: 'Ground Beef 80/20',\n          quantity: 0.15, // 150g\n          unit: 'kg',\n          cost: 1.13,\n        },\n        {\n          itemId: '2',\n          itemName: 'Tomatoes',\n          quantity: 0.05, // 50g\n          unit: 'kg',\n          cost: 0.16,\n        },\n      ],\n      totalCost: 1.29,\n      costPerServing: 1.29,\n      targetCostPercent: 25,\n      instructions: '1. Form burger patty\\n2. Grill to medium\\n3. Add toppings',\n      prepTime: 5,\n      cookTime: 8,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isActive: true,\n    },\n  ];\n  \n  return mockRecipes;\n}\n\n// CRUD Operations for various entities\nexport async function createInventoryItem(item: Omit<InventoryItem, 'id' | 'createdAt' | 'updatedAt'>): Promise<InventoryItem> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const newItem: InventoryItem = {\n    ...item,\n    id: Math.random().toString(36).substr(2, 9),\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n  \n  // In real implementation, save to database\n  return newItem;\n}\n\nexport async function updateInventoryItem(id: string, updates: Partial<InventoryItem>): Promise<InventoryItem> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const item = mockInventoryItems.find(i => i.id === id);\n  if (!item) {\n    throw new Error('Item not found');\n  }\n  \n  const updatedItem: InventoryItem = {\n    ...item,\n    ...updates,\n    updatedAt: new Date(),\n  };\n  \n  return updatedItem;\n}\n\nexport async function deleteInventoryItem(id: string): Promise<void> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  // In real implementation, soft delete in database\n}\n\n// Similar CRUD operations would be implemented for suppliers, purchase orders, etc.\nexport async function createSupplier(supplier: Omit<Supplier, 'id' | 'createdAt' | 'updatedAt'>): Promise<Supplier> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const newSupplier: Supplier = {\n    ...supplier,\n    id: Math.random().toString(36).substr(2, 9),\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n  \n  return newSupplier;\n}\n\nexport async function createPurchaseOrder(po: Omit<PurchaseOrder, 'id' | 'createdAt' | 'updatedAt'>): Promise<PurchaseOrder> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const newPO: PurchaseOrder = {\n    ...po,\n    id: Math.random().toString(36).substr(2, 9),\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n  \n  return newPO;\n}\n\nexport async function createWasteLog(waste: Omit<WasteLog, 'id' | 'createdAt' | 'updatedAt' | 'totalCost'>): Promise<WasteLog> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const newWaste: WasteLog = {\n    ...waste,\n    id: Math.random().toString(36).substr(2, 9),\n    totalCost: waste.quantity * waste.unitCost,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n  \n  return newWaste;\n}\n\n// Export all mock data for use in components\nexport {\n  mockInventoryItems,\n  mockSuppliers,\n  mockCategories,\n  mockLocations,\n  mockUnitsOfMeasurement,\n  mockWasteReasons,\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/inventory/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { Metadata } from 'next';\n\nimport { InventoryDashboard } from '@/components/inventory/inventory-dashboard';\nimport { InventoryMetricsCards } from '@/components/inventory/inventory-metrics-cards';\nimport { InventoryFilters } from '@/components/inventory/inventory-filters';\nimport { InventoryTable } from '@/components/inventory/inventory-table';\nimport { QuickActions } from '@/components/inventory/quick-actions';\nimport { MobileBarcodeFAB } from '@/components/inventory/mobile-barcode-fab';\n\nimport { getInventoryItems, getInventoryMetrics } from '@/lib/inventory/data';\nimport type { InventoryFilters as InventoryFiltersType } from '@/lib/inventory/types';\n\nexport const metadata: Metadata = {\n  title: 'Inventory Overview | Restaurant Dashboard',\n  description: 'Real-time inventory tracking, stock levels, and warehouse management',\n  viewport: 'width=device-width, initial-scale=1, maximum-scale=1',\n  themeColor: '#ffffff',\n  appleWebApp: {\n    capable: true,\n    statusBarStyle: 'default',\n    title: 'Inventory',\n  },\n  manifest: '/manifest.json',\n};\n\ninterface InventoryPageProps {\n  searchParams: {\n    search?: string;\n    category?: string;\n    supplier?: string;\n    location?: string;\n    status?: 'active' | 'inactive' | 'discontinued';\n    lowStock?: string;\n    outOfStock?: string;\n    expiring?: string;\n    page?: string;\n    limit?: string;\n    sort?: string;\n    view?: 'grid' | 'table' | 'cards';\n  };\n}\n\nexport default async function InventoryPage({ searchParams }: InventoryPageProps) {\n  // Parse search parameters into filters\n  const filters: InventoryFiltersType = {\n    search: searchParams.search,\n    categoryId: searchParams.category,\n    supplierId: searchParams.supplier,\n    locationId: searchParams.location,\n    status: searchParams.status,\n    lowStock: searchParams.lowStock === 'true',\n    outOfStock: searchParams.outOfStock === 'true',\n    expiring: searchParams.expiring === 'true',\n  };\n\n  // Get initial data - this will be used for SSR, then updated client-side\n  const [inventoryResponse, metrics] = await Promise.all([\n    getInventoryItems(filters),\n    getInventoryMetrics(),\n  ]);\n\n  const currentView = (searchParams.view || 'table') as 'grid' | 'table' | 'cards';\n\n  return (\n    <div className=\"space-y-6 pb-20 lg:pb-6\">\n      {/* Page Header */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Inventory Overview</h1>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Track stock levels, manage items, and monitor warehouse operations\n          </p>\n        </div>\n        \n        {/* Quick Actions - Desktop */}\n        <div className=\"mt-4 sm:mt-0 hidden sm:block\">\n          <Suspense fallback={<div className=\"h-10 w-32 bg-gray-200 rounded animate-pulse\" />}>\n            <QuickActions />\n          </Suspense>\n        </div>\n      </div>\n\n      {/* Metrics Cards */}\n      <Suspense fallback={\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {[1, 2, 3, 4].map((i) => (\n            <div key={i} className=\"bg-white p-6 rounded-lg border border-gray-200 animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\n              <div className=\"h-8 bg-gray-200 rounded w-1/2 mb-4\"></div>\n              <div className=\"h-3 bg-gray-200 rounded w-full\"></div>\n            </div>\n          ))}\n        </div>\n      }>\n        <InventoryMetricsCards initialMetrics={metrics} />\n      </Suspense>\n\n      {/* Filters */}\n      <Suspense fallback={\n        <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"h-10 bg-gray-200 rounded animate-pulse flex-1\"></div>\n            ))}\n          </div>\n        </div>\n      }>\n        <InventoryFilters initialFilters={filters} />\n      </Suspense>\n\n      {/* Main Content Area */}\n      <div className=\"bg-white rounded-lg border border-gray-200 min-h-96\">\n        <Suspense fallback={\n          <div className=\"p-6\">\n            <div className=\"animate-pulse\">\n              <div className=\"h-4 bg-gray-200 rounded w-1/4 mb-4\"></div>\n              <div className=\"space-y-3\">\n                {[1, 2, 3, 4, 5].map((i) => (\n                  <div key={i} className=\"h-16 bg-gray-200 rounded\"></div>\n                ))}\n              </div>\n            </div>\n          </div>\n        }>\n          {currentView === 'table' ? (\n            <InventoryTable \n              initialData={inventoryResponse} \n              initialFilters={filters}\n            />\n          ) : currentView === 'grid' ? (\n            <InventoryDashboard \n              initialData={inventoryResponse} \n              initialFilters={filters}\n              view=\"grid\"\n            />\n          ) : (\n            <InventoryDashboard \n              initialData={inventoryResponse} \n              initialFilters={filters}\n              view=\"cards\"\n            />\n          )}\n        </Suspense>\n      </div>\n\n      {/* Recent Activity */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        <div className=\"p-6\">\n          <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Recent Activity</h3>\n          <Suspense fallback={\n            <div className=\"space-y-3\">\n              {[1, 2, 3].map((i) => (\n                <div key={i} className=\"flex items-center space-x-3 animate-pulse\">\n                  <div className=\"h-8 w-8 bg-gray-200 rounded-full\"></div>\n                  <div className=\"flex-1 space-y-1\">\n                    <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          }>\n            <div className=\"space-y-3\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"h-8 w-8 bg-green-100 rounded-full flex items-center justify-center\">\n                  <span className=\"text-xs font-medium text-green-600\">+</span>\n                </div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">Stock received: Chicken Breast</p>\n                  <p className=\"text-xs text-gray-500\">50 kg from Premium Meats Co. • 2 hours ago</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-3\">\n                <div className=\"h-8 w-8 bg-red-100 rounded-full flex items-center justify-center\">\n                  <span className=\"text-xs font-medium text-red-600\">!</span>\n                </div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">Low stock alert: Ground Beef 80/20</p>\n                  <p className=\"text-xs text-gray-500\">Only 2.5 kg remaining • 4 hours ago</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-3\">\n                <div className=\"h-8 w-8 bg-orange-100 rounded-full flex items-center justify-center\">\n                  <span className=\"text-xs font-medium text-orange-600\">W</span>\n                </div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">Waste logged: Tomatoes</p>\n                  <p className=\"text-xs text-gray-500\">2.5 kg spoiled • 6 hours ago</p>\n                </div>\n              </div>\n            </div>\n          </Suspense>\n        </div>\n      </div>\n\n      {/* Mobile Floating Action Button */}\n      <div className=\"sm:hidden\">\n        <Suspense fallback={null}>\n          <MobileBarcodeFAB />\n        </Suspense>\n      </div>\n\n      {/* PWA Features */}\n      <script\n        dangerouslySetInnerHTML={{\n          __html: `\n            // Service Worker Registration\n            if ('serviceWorker' in navigator) {\n              window.addEventListener('load', () => {\n                navigator.serviceWorker.register('/sw.js')\n                  .then((registration) => {\n                    console.log('SW registered: ', registration);\n                  })\n                  .catch((registrationError) => {\n                    console.log('SW registration failed: ', registrationError);\n                  });\n              });\n            }\n\n            // Install prompt\n            let deferredPrompt;\n            window.addEventListener('beforeinstallprompt', (e) => {\n              e.preventDefault();\n              deferredPrompt = e;\n              const installPrompt = document.getElementById('pwa-install-prompt');\n              if (installPrompt) {\n                installPrompt.classList.remove('hidden');\n              }\n            });\n\n            // Install button click\n            const installButton = document.getElementById('pwa-install-button');\n            if (installButton) {\n              installButton.addEventListener('click', async () => {\n                if (deferredPrompt) {\n                  deferredPrompt.prompt();\n                  const { outcome } = await deferredPrompt.userChoice;\n                  console.log('User response to install prompt:', outcome);\n                  deferredPrompt = null;\n                  const installPrompt = document.getElementById('pwa-install-prompt');\n                  if (installPrompt) {\n                    installPrompt.classList.add('hidden');\n                  }\n                }\n              });\n            }\n\n            // Dismiss button\n            const dismissButton = document.getElementById('pwa-dismiss-button');\n            if (dismissButton) {\n              dismissButton.addEventListener('click', () => {\n                const installPrompt = document.getElementById('pwa-install-prompt');\n                if (installPrompt) {\n                  installPrompt.classList.add('hidden');\n                }\n              });\n            }\n\n            // Offline/Online detection\n            function updateOnlineStatus() {\n              const offlineIndicator = document.getElementById('offline-indicator');\n              if (offlineIndicator) {\n                if (navigator.onLine) {\n                  offlineIndicator.classList.add('hidden');\n                } else {\n                  offlineIndicator.classList.remove('hidden');\n                }\n              }\n            }\n\n            window.addEventListener('online', updateOnlineStatus);\n            window.addEventListener('offline', updateOnlineStatus);\n            updateOnlineStatus();\n          `,\n        }}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}