{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/orders/types.ts"],"sourcesContent":["// Order Management Types\n\nexport enum OrderStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  PREPARING = 'preparing',\n  READY = 'ready',\n  COMPLETED = 'completed',\n  DELIVERED = 'delivered',\n  CANCELLED = 'cancelled',\n  REFUNDED = 'refunded'\n}\n\nexport enum OrderType {\n  DINE_IN = 'dine_in',\n  TAKEOUT = 'takeout',\n  DELIVERY = 'delivery',\n  PICKUP = 'pickup',\n  CATERING = 'catering'\n}\n\nexport enum PaymentStatus {\n  PENDING = 'pending',\n  PROCESSING = 'processing',\n  COMPLETED = 'completed',\n  FAILED = 'failed',\n  REFUNDED = 'refunded',\n  PARTIALLY_REFUNDED = 'partially_refunded'\n}\n\nexport enum PaymentMethod {\n  CASH = 'cash',\n  CREDIT_CARD = 'credit_card',\n  DEBIT_CARD = 'debit_card',\n  DIGITAL_WALLET = 'digital_wallet',\n  GIFT_CARD = 'gift_card',\n  LOYALTY_POINTS = 'loyalty_points',\n  CHECK = 'check',\n  OTHER = 'other'\n}\n\nexport interface OrderItem {\n  id: string;\n  menuItemId: string;\n  menuItemName: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n  modifiers: OrderModifier[];\n  specialInstructions?: string;\n  status: 'pending' | 'preparing' | 'ready' | 'served';\n  prepTime?: number;\n  station?: string;\n}\n\nexport interface OrderModifier {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n}\n\nexport interface Order {\n  id: string;\n  orderNumber: string;\n  status: OrderStatus;\n  type: OrderType;\n  customerId?: string;\n  customerName?: string;\n  customerPhone?: string;\n  customerEmail?: string;\n  tableNumber?: string;\n  items: OrderItem[];\n  subtotal: number;\n  tax: number;\n  tip: number;\n  discount: number;\n  total: number;\n  paymentStatus: PaymentStatus;\n  paymentMethod?: PaymentMethod;\n  paymentDetails?: PaymentDetails;\n  notes?: string;\n  createdAt: string;\n  updatedAt: string;\n  confirmedAt?: string;\n  prepStartedAt?: string;\n  readyAt?: string;\n  completedAt?: string;\n  deliveredAt?: string;\n  cancelledAt?: string;\n  refundedAt?: string;\n  estimatedReadyTime?: string;\n  assignedStaff?: StaffMember[];\n  deliveryInfo?: DeliveryInfo;\n  timeline: OrderTimelineEvent[];\n  posOrderId?: string;\n  posPaymentId?: string;\n  source: 'pos' | 'online' | 'phone' | 'kiosk' | 'third_party';\n  thirdPartyProvider?: string;\n}\n\nexport interface PaymentDetails {\n  transactionId: string;\n  lastFourDigits?: string;\n  cardBrand?: string;\n  authorizationCode?: string;\n  processorResponse?: string;\n  amount: number;\n  tip?: number;\n  fee?: number;\n  refundAmount?: number;\n  refundReason?: string;\n}\n\nexport interface DeliveryInfo {\n  address: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  instructions?: string;\n  driverId?: string;\n  driverName?: string;\n  estimatedDeliveryTime?: string;\n  actualDeliveryTime?: string;\n  deliveryFee: number;\n  distance?: number;\n}\n\nexport interface StaffMember {\n  id: string;\n  name: string;\n  role: 'server' | 'chef' | 'bartender' | 'host' | 'manager' | 'driver';\n  assignedAt: string;\n}\n\nexport interface OrderTimelineEvent {\n  id: string;\n  timestamp: string;\n  event: string;\n  description: string;\n  user?: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface OrderFilters {\n  status?: OrderStatus[];\n  type?: OrderType[];\n  paymentStatus?: PaymentStatus[];\n  dateRange?: {\n    start: string;\n    end: string;\n  };\n  customerId?: string;\n  tableNumber?: string;\n  searchTerm?: string;\n  minAmount?: number;\n  maxAmount?: number;\n  source?: string[];\n  assignedStaff?: string[];\n}\n\nexport interface OrderStats {\n  totalOrders: number;\n  totalRevenue: number;\n  averageOrderValue: number;\n  ordersByStatus: Record<OrderStatus, number>;\n  ordersByType: Record<OrderType, number>;\n  todayOrders: number;\n  todayRevenue: number;\n  pendingOrders: number;\n  preparingOrders: number;\n  readyOrders: number;\n  completedOrders: number;\n  cancelledOrders: number;\n  refundedAmount: number;\n  averagePrepTime: number;\n  peakHours: {\n    hour: number;\n    orders: number;\n  }[];\n}\n\nexport interface RefundRequest {\n  orderId: string;\n  amount: number;\n  reason: string;\n  items?: string[]; // Item IDs to refund\n  refundMethod: 'original' | 'cash' | 'store_credit';\n  notes?: string;\n}\n\nexport interface OrderUpdate {\n  status?: OrderStatus;\n  paymentStatus?: PaymentStatus;\n  items?: Partial<OrderItem>[];\n  notes?: string;\n  estimatedReadyTime?: string;\n  assignedStaff?: StaffMember[];\n  deliveryInfo?: Partial<DeliveryInfo>;\n}\n\nexport interface CreateOrder {\n  type: OrderType;\n  customerId?: string;\n  customerName?: string;\n  customerPhone?: string;\n  customerEmail?: string;\n  tableNumber?: string;\n  items: {\n    menuItemId: string;\n    quantity: number;\n    modifiers?: {\n      id: string;\n      quantity: number;\n    }[];\n    specialInstructions?: string;\n  }[];\n  paymentMethod?: PaymentMethod;\n  notes?: string;\n  scheduledFor?: string;\n  deliveryInfo?: Omit<DeliveryInfo, 'driverId' | 'driverName' | 'actualDeliveryTime'>;\n}\n\nexport interface OrderListItem {\n  id: string;\n  orderNumber: string;\n  status: OrderStatus;\n  type: OrderType;\n  customerName?: string;\n  tableNumber?: string;\n  total: number;\n  itemCount: number;\n  createdAt: string;\n  estimatedReadyTime?: string;\n  paymentStatus: PaymentStatus;\n  source: string;\n}\n\nexport interface OrderSummary {\n  date: string;\n  orderCount: number;\n  revenue: number;\n  averageOrderValue: number;\n  topItems: {\n    itemId: string;\n    itemName: string;\n    quantity: number;\n    revenue: number;\n  }[];\n  hourlyDistribution: {\n    hour: number;\n    orders: number;\n    revenue: number;\n  }[];\n}\n\n// Action types for order management\nexport type OrderAction = \n  | { type: 'UPDATE_STATUS'; orderId: string; status: OrderStatus }\n  | { type: 'UPDATE_PAYMENT'; orderId: string; paymentStatus: PaymentStatus; paymentDetails?: PaymentDetails }\n  | { type: 'ADD_ITEM'; orderId: string; item: Omit<OrderItem, 'id'> }\n  | { type: 'REMOVE_ITEM'; orderId: string; itemId: string }\n  | { type: 'UPDATE_ITEM'; orderId: string; itemId: string; updates: Partial<OrderItem> }\n  | { type: 'ASSIGN_STAFF'; orderId: string; staff: StaffMember }\n  | { type: 'REMOVE_STAFF'; orderId: string; staffId: string }\n  | { type: 'UPDATE_DELIVERY'; orderId: string; deliveryInfo: Partial<DeliveryInfo> }\n  | { type: 'ADD_TIMELINE_EVENT'; orderId: string; event: Omit<OrderTimelineEvent, 'id' | 'timestamp'> }\n  | { type: 'PROCESS_REFUND'; orderId: string; refundRequest: RefundRequest }\n  | { type: 'CANCEL_ORDER'; orderId: string; reason: string };"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;;;AAElB,IAAA,AAAK,qCAAA;;;;;;;;;WAAA;;AAWL,IAAA,AAAK,mCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,uCAAA;;;;;;;WAAA;;AASL,IAAA,AAAK,uCAAA;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/orders/data.ts"],"sourcesContent":["// Order data layer with mock data\nimport {\n  Order,\n  OrderStatus,\n  OrderType,\n  PaymentStatus,\n  PaymentMethod,\n  OrderFilters,\n  OrderStats,\n  OrderListItem,\n  CreateOrder,\n  OrderUpdate,\n  RefundRequest,\n  OrderSummary,\n  OrderTimelineEvent\n} from './types';\n\n// Mock data generation\nconst generateMockOrders = (count: number = 100): Order[] => {\n  const orders: Order[] = [];\n  const now = new Date();\n  \n  const customerNames = [\n    'John Smith', 'Emma Johnson', 'Michael Brown', 'Sarah Davis',\n    'Robert Wilson', 'Lisa Anderson', 'David Martinez', 'Jennifer Taylor',\n    'Chris Lee', 'Amanda White', 'James Harris', 'Maria Garcia'\n  ];\n  \n  const menuItems = [\n    { id: 'item-1', name: 'Classic Burger', price: 12.99, station: 'grill' },\n    { id: 'item-2', name: 'Caesar Salad', price: 9.99, station: 'cold' },\n    { id: 'item-3', name: 'Margherita Pizza', price: 14.99, station: 'oven' },\n    { id: 'item-4', name: 'Grilled Salmon', price: 22.99, station: 'grill' },\n    { id: 'item-5', name: 'Chicken Alfredo', price: 16.99, station: 'saute' },\n    { id: 'item-6', name: 'Ribeye Steak', price: 32.99, station: 'grill' },\n    { id: 'item-7', name: 'Fish Tacos', price: 13.99, station: 'fryer' },\n    { id: 'item-8', name: 'Veggie Wrap', price: 10.99, station: 'cold' }\n  ];\n\n  const statuses = Object.values(OrderStatus);\n  const types = Object.values(OrderType);\n  const paymentMethods = Object.values(PaymentMethod);\n  \n  for (let i = 0; i < count; i++) {\n    const createdAt = new Date(now.getTime() - Math.random() * 7 * 24 * 60 * 60 * 1000);\n    const status = statuses[Math.floor(Math.random() * statuses.length)];\n    const type = types[Math.floor(Math.random() * types.length)];\n    const customerName = customerNames[Math.floor(Math.random() * customerNames.length)];\n    \n    // Generate items\n    const itemCount = Math.floor(Math.random() * 4) + 1;\n    const items = [];\n    let subtotal = 0;\n    \n    for (let j = 0; j < itemCount; j++) {\n      const menuItem = menuItems[Math.floor(Math.random() * menuItems.length)];\n      const quantity = Math.floor(Math.random() * 3) + 1;\n      const totalPrice = menuItem.price * quantity;\n      subtotal += totalPrice;\n      \n      items.push({\n        id: `order-item-${i}-${j}`,\n        menuItemId: menuItem.id,\n        menuItemName: menuItem.name,\n        quantity,\n        unitPrice: menuItem.price,\n        totalPrice,\n        modifiers: [],\n        status: status === OrderStatus.COMPLETED ? 'served' as const : \n                status === OrderStatus.READY ? 'ready' as const :\n                status === OrderStatus.PREPARING ? 'preparing' as const : \n                'pending' as const,\n        prepTime: Math.floor(Math.random() * 20) + 10,\n        station: menuItem.station\n      });\n    }\n    \n    const tax = subtotal * 0.08;\n    const tip = type === OrderType.DINE_IN ? subtotal * (Math.random() * 0.1 + 0.15) : 0;\n    const discount = Math.random() > 0.8 ? subtotal * 0.1 : 0;\n    const total = subtotal + tax + tip - discount;\n    \n    // Generate timeline\n    const timeline: OrderTimelineEvent[] = [\n      {\n        id: `timeline-${i}-1`,\n        timestamp: createdAt.toISOString(),\n        event: 'Order Created',\n        description: `Order #${1000 + i} created`,\n        user: 'System'\n      }\n    ];\n    \n    if (status !== OrderStatus.PENDING) {\n      timeline.push({\n        id: `timeline-${i}-2`,\n        timestamp: new Date(createdAt.getTime() + 60000).toISOString(),\n        event: 'Order Confirmed',\n        description: 'Order confirmed by kitchen',\n        user: 'Kitchen Staff'\n      });\n    }\n    \n    if ([OrderStatus.PREPARING, OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status)) {\n      timeline.push({\n        id: `timeline-${i}-3`,\n        timestamp: new Date(createdAt.getTime() + 120000).toISOString(),\n        event: 'Preparation Started',\n        description: 'Kitchen started preparing order',\n        user: 'Chef Mike'\n      });\n    }\n    \n    if ([OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status)) {\n      timeline.push({\n        id: `timeline-${i}-4`,\n        timestamp: new Date(createdAt.getTime() + 900000).toISOString(),\n        event: 'Order Ready',\n        description: 'Order ready for pickup/delivery',\n        user: 'Chef Mike'\n      });\n    }\n    \n    orders.push({\n      id: `order-${i}`,\n      orderNumber: `#${1000 + i}`,\n      status,\n      type,\n      customerId: `customer-${Math.floor(Math.random() * 50)}`,\n      customerName,\n      customerPhone: `555-${String(Math.floor(Math.random() * 10000)).padStart(4, '0')}`,\n      customerEmail: `${customerName.toLowerCase().replace(' ', '.')}@email.com`,\n      tableNumber: type === OrderType.DINE_IN ? `T${Math.floor(Math.random() * 20) + 1}` : undefined,\n      items,\n      subtotal,\n      tax,\n      tip,\n      discount,\n      total,\n      paymentStatus: status === OrderStatus.COMPLETED || status === OrderStatus.DELIVERED ? \n        PaymentStatus.COMPLETED : \n        status === OrderStatus.CANCELLED ? PaymentStatus.FAILED :\n        status === OrderStatus.REFUNDED ? PaymentStatus.REFUNDED :\n        PaymentStatus.PENDING,\n      paymentMethod: paymentMethods[Math.floor(Math.random() * paymentMethods.length)],\n      paymentDetails: status === OrderStatus.COMPLETED || status === OrderStatus.DELIVERED ? {\n        transactionId: `txn-${Date.now()}-${i}`,\n        lastFourDigits: String(Math.floor(Math.random() * 10000)).padStart(4, '0'),\n        cardBrand: 'Visa',\n        authorizationCode: `AUTH${Math.floor(Math.random() * 1000000)}`,\n        amount: total,\n        tip: tip\n      } : undefined,\n      notes: Math.random() > 0.7 ? 'No onions please' : undefined,\n      createdAt: createdAt.toISOString(),\n      updatedAt: new Date(createdAt.getTime() + Math.random() * 3600000).toISOString(),\n      confirmedAt: status !== OrderStatus.PENDING ? \n        new Date(createdAt.getTime() + 60000).toISOString() : undefined,\n      prepStartedAt: [OrderStatus.PREPARING, OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 120000).toISOString() : undefined,\n      readyAt: [OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 900000).toISOString() : undefined,\n      completedAt: [OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 1200000).toISOString() : undefined,\n      deliveredAt: status === OrderStatus.DELIVERED ?\n        new Date(createdAt.getTime() + 2400000).toISOString() : undefined,\n      cancelledAt: status === OrderStatus.CANCELLED ?\n        new Date(createdAt.getTime() + 300000).toISOString() : undefined,\n      refundedAt: status === OrderStatus.REFUNDED ?\n        new Date(createdAt.getTime() + 86400000).toISOString() : undefined,\n      estimatedReadyTime: status === OrderStatus.PREPARING ?\n        new Date(Date.now() + 900000).toISOString() : undefined,\n      assignedStaff: type === OrderType.DINE_IN ? [{\n        id: `staff-${Math.floor(Math.random() * 10)}`,\n        name: ['Alice', 'Bob', 'Carol', 'Dave'][Math.floor(Math.random() * 4)],\n        role: 'server' as const,\n        assignedAt: createdAt.toISOString()\n      }] : undefined,\n      deliveryInfo: type === OrderType.DELIVERY ? {\n        address: `${Math.floor(Math.random() * 9999) + 1} Main St`,\n        city: 'San Francisco',\n        state: 'CA',\n        zipCode: '94101',\n        instructions: 'Leave at door',\n        driverId: `driver-${Math.floor(Math.random() * 5)}`,\n        driverName: ['Tom', 'Jerry', 'Mike'][Math.floor(Math.random() * 3)],\n        estimatedDeliveryTime: new Date(createdAt.getTime() + 2400000).toISOString(),\n        actualDeliveryTime: status === OrderStatus.DELIVERED ?\n          new Date(createdAt.getTime() + 2400000).toISOString() : undefined,\n        deliveryFee: 4.99,\n        distance: Math.random() * 5 + 1\n      } : undefined,\n      timeline,\n      posOrderId: `pos-${Date.now()}-${i}`,\n      source: ['pos', 'online', 'phone', 'kiosk'][Math.floor(Math.random() * 4)] as any,\n      thirdPartyProvider: Math.random() > 0.7 ? 'DoorDash' : undefined\n    });\n  }\n  \n  return orders;\n};\n\n// Cache for mock data\nlet cachedOrders: Order[] | null = null;\n\n// API Functions\nexport async function getOrders(filters?: OrderFilters): Promise<Order[]> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  let filtered = [...cachedOrders];\n  \n  if (filters) {\n    if (filters.status?.length) {\n      filtered = filtered.filter(o => filters.status!.includes(o.status));\n    }\n    if (filters.type?.length) {\n      filtered = filtered.filter(o => filters.type!.includes(o.type));\n    }\n    if (filters.paymentStatus?.length) {\n      filtered = filtered.filter(o => filters.paymentStatus!.includes(o.paymentStatus));\n    }\n    if (filters.dateRange) {\n      const start = new Date(filters.dateRange.start);\n      const end = new Date(filters.dateRange.end);\n      filtered = filtered.filter(o => {\n        const orderDate = new Date(o.createdAt);\n        return orderDate >= start && orderDate <= end;\n      });\n    }\n    if (filters.customerId) {\n      filtered = filtered.filter(o => o.customerId === filters.customerId);\n    }\n    if (filters.tableNumber) {\n      filtered = filtered.filter(o => o.tableNumber === filters.tableNumber);\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(o => \n        o.orderNumber.toLowerCase().includes(term) ||\n        o.customerName?.toLowerCase().includes(term) ||\n        o.customerEmail?.toLowerCase().includes(term) ||\n        o.customerPhone?.includes(term)\n      );\n    }\n    if (filters.minAmount !== undefined) {\n      filtered = filtered.filter(o => o.total >= filters.minAmount!);\n    }\n    if (filters.maxAmount !== undefined) {\n      filtered = filtered.filter(o => o.total <= filters.maxAmount!);\n    }\n  }\n  \n  // Sort by creation date, newest first\n  filtered.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  \n  return filtered;\n}\n\nexport async function getOrder(id: string): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  return cachedOrders.find(o => o.id === id) || null;\n}\n\nexport async function getOrderListItems(filters?: OrderFilters): Promise<OrderListItem[]> {\n  const orders = await getOrders(filters);\n  \n  return orders.map(order => ({\n    id: order.id,\n    orderNumber: order.orderNumber,\n    status: order.status,\n    type: order.type,\n    customerName: order.customerName,\n    tableNumber: order.tableNumber,\n    total: order.total,\n    itemCount: order.items.reduce((sum, item) => sum + item.quantity, 0),\n    createdAt: order.createdAt,\n    estimatedReadyTime: order.estimatedReadyTime,\n    paymentStatus: order.paymentStatus,\n    source: order.source\n  }));\n}\n\nexport async function getOrderStats(dateRange?: { start: string; end: string }): Promise<OrderStats> {\n  const orders = await getOrders(dateRange ? { dateRange } : undefined);\n  \n  const now = new Date();\n  const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  const todayOrders = orders.filter(o => new Date(o.createdAt) >= todayStart);\n  \n  // Calculate peak hours\n  const hourCounts: Record<number, number> = {};\n  orders.forEach(order => {\n    const hour = new Date(order.createdAt).getHours();\n    hourCounts[hour] = (hourCounts[hour] || 0) + 1;\n  });\n  \n  const peakHours = Object.entries(hourCounts)\n    .map(([hour, count]) => ({ hour: parseInt(hour), orders: count }))\n    .sort((a, b) => b.orders - a.orders)\n    .slice(0, 5);\n  \n  // Calculate stats by status\n  const ordersByStatus = {} as Record<OrderStatus, number>;\n  Object.values(OrderStatus).forEach(status => {\n    ordersByStatus[status] = orders.filter(o => o.status === status).length;\n  });\n  \n  // Calculate stats by type\n  const ordersByType = {} as Record<OrderType, number>;\n  Object.values(OrderType).forEach(type => {\n    ordersByType[type] = orders.filter(o => o.type === type).length;\n  });\n  \n  const totalRevenue = orders.reduce((sum, o) => sum + o.total, 0);\n  const todayRevenue = todayOrders.reduce((sum, o) => sum + o.total, 0);\n  const refundedAmount = orders\n    .filter(o => o.status === OrderStatus.REFUNDED)\n    .reduce((sum, o) => sum + o.total, 0);\n  \n  const completedOrders = orders.filter(o => \n    [OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(o.status)\n  );\n  \n  const averagePrepTime = completedOrders.length > 0 ?\n    completedOrders.reduce((sum, o) => {\n      if (o.prepStartedAt && o.readyAt) {\n        return sum + (new Date(o.readyAt).getTime() - new Date(o.prepStartedAt).getTime());\n      }\n      return sum;\n    }, 0) / completedOrders.length / 60000 : 0; // Convert to minutes\n  \n  return {\n    totalOrders: orders.length,\n    totalRevenue,\n    averageOrderValue: orders.length > 0 ? totalRevenue / orders.length : 0,\n    ordersByStatus,\n    ordersByType,\n    todayOrders: todayOrders.length,\n    todayRevenue,\n    pendingOrders: ordersByStatus[OrderStatus.PENDING] || 0,\n    preparingOrders: ordersByStatus[OrderStatus.PREPARING] || 0,\n    readyOrders: ordersByStatus[OrderStatus.READY] || 0,\n    completedOrders: ordersByStatus[OrderStatus.COMPLETED] || 0,\n    cancelledOrders: ordersByStatus[OrderStatus.CANCELLED] || 0,\n    refundedAmount,\n    averagePrepTime,\n    peakHours\n  };\n}\n\nexport async function createOrder(data: CreateOrder): Promise<Order> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  const newOrder: Order = {\n    id: `order-${Date.now()}`,\n    orderNumber: `#${1000 + cachedOrders.length}`,\n    status: OrderStatus.PENDING,\n    type: data.type,\n    customerId: data.customerId,\n    customerName: data.customerName,\n    customerPhone: data.customerPhone,\n    customerEmail: data.customerEmail,\n    tableNumber: data.tableNumber,\n    items: data.items.map((item, index) => ({\n      id: `item-${Date.now()}-${index}`,\n      menuItemId: item.menuItemId,\n      menuItemName: `Item ${item.menuItemId}`, // Would be looked up from menu\n      quantity: item.quantity,\n      unitPrice: 15.99, // Would be looked up from menu\n      totalPrice: 15.99 * item.quantity,\n      modifiers: [],\n      specialInstructions: item.specialInstructions,\n      status: 'pending' as const,\n      prepTime: 15,\n      station: 'grill'\n    })),\n    subtotal: 0, // Calculate from items\n    tax: 0,\n    tip: 0,\n    discount: 0,\n    total: 0,\n    paymentStatus: PaymentStatus.PENDING,\n    paymentMethod: data.paymentMethod,\n    notes: data.notes,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    timeline: [{\n      id: `timeline-${Date.now()}`,\n      timestamp: new Date().toISOString(),\n      event: 'Order Created',\n      description: 'New order created',\n      user: 'System'\n    }],\n    source: 'pos',\n    deliveryInfo: data.deliveryInfo as any\n  };\n  \n  // Calculate totals\n  newOrder.subtotal = newOrder.items.reduce((sum, item) => sum + item.totalPrice, 0);\n  newOrder.tax = newOrder.subtotal * 0.08;\n  newOrder.total = newOrder.subtotal + newOrder.tax;\n  \n  cachedOrders.unshift(newOrder);\n  return newOrder;\n}\n\nexport async function updateOrder(id: string, updates: OrderUpdate): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  const orderIndex = cachedOrders.findIndex(o => o.id === id);\n  if (orderIndex === -1) return null;\n  \n  const order = { ...cachedOrders[orderIndex] };\n  \n  if (updates.status) {\n    order.status = updates.status;\n    order.timeline.push({\n      id: `timeline-${Date.now()}`,\n      timestamp: new Date().toISOString(),\n      event: 'Status Updated',\n      description: `Order status changed to ${updates.status}`,\n      user: 'Staff'\n    });\n  }\n  \n  if (updates.paymentStatus) {\n    order.paymentStatus = updates.paymentStatus;\n  }\n  \n  if (updates.notes !== undefined) {\n    order.notes = updates.notes;\n  }\n  \n  if (updates.estimatedReadyTime) {\n    order.estimatedReadyTime = updates.estimatedReadyTime;\n  }\n  \n  order.updatedAt = new Date().toISOString();\n  cachedOrders[orderIndex] = order;\n  \n  return order;\n}\n\nexport async function cancelOrder(id: string, reason: string): Promise<Order | null> {\n  return updateOrder(id, {\n    status: OrderStatus.CANCELLED,\n    notes: reason\n  });\n}\n\nexport async function processRefund(orderId: string, request: RefundRequest): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const order = await getOrder(orderId);\n  if (!order) return null;\n  \n  return updateOrder(orderId, {\n    status: OrderStatus.REFUNDED,\n    paymentStatus: PaymentStatus.REFUNDED,\n    notes: `Refund processed: ${request.reason}`\n  });\n}\n\nexport async function getOrderSummary(date: string): Promise<OrderSummary> {\n  const startDate = new Date(date);\n  startDate.setHours(0, 0, 0, 0);\n  const endDate = new Date(date);\n  endDate.setHours(23, 59, 59, 999);\n  \n  const orders = await getOrders({\n    dateRange: {\n      start: startDate.toISOString(),\n      end: endDate.toISOString()\n    }\n  });\n  \n  // Calculate top items\n  const itemCounts: Record<string, { name: string; quantity: number; revenue: number }> = {};\n  orders.forEach(order => {\n    order.items.forEach(item => {\n      if (!itemCounts[item.menuItemId]) {\n        itemCounts[item.menuItemId] = {\n          name: item.menuItemName,\n          quantity: 0,\n          revenue: 0\n        };\n      }\n      itemCounts[item.menuItemId].quantity += item.quantity;\n      itemCounts[item.menuItemId].revenue += item.totalPrice;\n    });\n  });\n  \n  const topItems = Object.entries(itemCounts)\n    .map(([id, data]) => ({\n      itemId: id,\n      itemName: data.name,\n      quantity: data.quantity,\n      revenue: data.revenue\n    }))\n    .sort((a, b) => b.revenue - a.revenue)\n    .slice(0, 10);\n  \n  // Calculate hourly distribution\n  const hourlyData: Record<number, { orders: number; revenue: number }> = {};\n  for (let hour = 0; hour < 24; hour++) {\n    hourlyData[hour] = { orders: 0, revenue: 0 };\n  }\n  \n  orders.forEach(order => {\n    const hour = new Date(order.createdAt).getHours();\n    hourlyData[hour].orders++;\n    hourlyData[hour].revenue += order.total;\n  });\n  \n  const hourlyDistribution = Object.entries(hourlyData)\n    .map(([hour, data]) => ({\n      hour: parseInt(hour),\n      orders: data.orders,\n      revenue: data.revenue\n    }));\n  \n  const totalRevenue = orders.reduce((sum, o) => sum + o.total, 0);\n  \n  return {\n    date,\n    orderCount: orders.length,\n    revenue: totalRevenue,\n    averageOrderValue: orders.length > 0 ? totalRevenue / orders.length : 0,\n    topItems,\n    hourlyDistribution\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Utility function to merge class names with tailwind-merge\n * Combines clsx and tailwind-merge for optimal class name handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Create a variant utility for component styling\n * Used to define consistent styling patterns across components\n */\nexport type VariantProps<T> = {\n  [K in keyof T]: keyof T[K];\n};\n\n/**\n * Focus ring utility classes for accessibility\n */\nexport const focusRing = 'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2';\n\n/**\n * Disabled state utility classes\n */\nexport const disabledStyles = 'disabled:pointer-events-none disabled:opacity-50';\n\n/**\n * Animation utility classes\n */\nexport const transitions = {\n  fast: 'transition-fast',\n  base: 'transition-base',\n  slow: 'transition-slow',\n} as const;"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAaO,MAAM,YAAY;AAKlB,MAAM,iBAAiB;AAKvB,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;AACR","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nconst badgeVariants = {\n  variant: {\n    default: 'bg-primary text-primary-foreground hover:bg-primary/80',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    success: 'bg-green-500 text-white hover:bg-green-600',\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600',\n    error: 'bg-destructive text-destructive-foreground hover:bg-destructive/80',\n    outline: 'border border-input bg-background text-foreground hover:bg-accent',\n    ghost: 'text-foreground hover:bg-accent',\n  },\n  size: {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-0.5 text-sm',\n    lg: 'px-3 py-1 text-sm',\n  },\n} as const;\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: keyof typeof badgeVariants.variant;\n  size?: keyof typeof badgeVariants.size;\n  pulse?: boolean;\n}\n\nfunction Badge({\n  className,\n  variant = 'default',\n  size = 'md',\n  pulse = false,\n  children,\n  ...props\n}: BadgeProps) {\n  return (\n    <div\n      className={cn(\n        // Base styles\n        'inline-flex items-center rounded-full font-semibold transition-colors',\n        'focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n        // Variant and size styles\n        badgeVariants.variant[variant],\n        badgeVariants.size[size],\n        // Pulse animation\n        pulse && 'animate-pulse',\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Status-specific badge components for common use cases\nexport function StatusBadge({ \n  status, \n  className, \n  ...props \n}: { status: 'online' | 'busy' | 'offline' | 'pending' | 'completed' | 'cancelled' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    online: 'success' as const,\n    completed: 'success' as const,\n    busy: 'warning' as const,\n    pending: 'warning' as const,\n    offline: 'secondary' as const,\n    cancelled: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[status]} \n      className={cn('capitalize', className)} \n      {...props}\n    >\n      <div className=\"mr-1 h-2 w-2 rounded-full bg-current opacity-75\" />\n      {status}\n    </Badge>\n  );\n}\n\n// Priority badge for orders, tasks, etc.\nexport function PriorityBadge({ \n  priority, \n  className, \n  ...props \n}: { priority: 'low' | 'medium' | 'high' | 'urgent' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    low: 'secondary' as const,\n    medium: 'default' as const,\n    high: 'warning' as const,\n    urgent: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[priority]} \n      className={cn('capitalize', className)}\n      pulse={priority === 'urgent'}\n      {...props}\n    >\n      {priority}\n    </Badge>\n  );\n}\n\nexport { Badge, badgeVariants };"],"names":[],"mappings":";;;;;;;;;;;AACA;;;AAEA,MAAM,gBAAgB;IACpB,SAAS;QACP,SAAS;QACT,WAAW;QACX,SAAS;QACT,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;IACT;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;AACF;AASA,SAAS,MAAM,EACb,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,QAAQ,KAAK,EACb,QAAQ,EACR,GAAG,OACQ;IACX,qBACE,8OAAC;QACC,WAAW,IAAA,+HAAE,EACX,cAAc;QACd,yEACA,uEACA,0BAA0B;QAC1B,cAAc,OAAO,CAAC,QAAQ,EAC9B,cAAc,IAAI,CAAC,KAAK,EACxB,kBAAkB;QAClB,SAAS,iBACT;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AAGO,SAAS,YAAY,EAC1B,MAAM,EACN,SAAS,EACT,GAAG,OAC6G;IAChH,MAAM,aAAa;QACjB,QAAQ;QACR,WAAW;QACX,MAAM;QACN,SAAS;QACT,SAAS;QACT,WAAW;IACb;IAEA,qBACE,8OAAC;QACC,SAAS,UAAU,CAAC,OAAO;QAC3B,WAAW,IAAA,+HAAE,EAAC,cAAc;QAC3B,GAAG,KAAK;;0BAET,8OAAC;gBAAI,WAAU;;;;;;YACd;;;;;;;AAGP;AAGO,SAAS,cAAc,EAC5B,QAAQ,EACR,SAAS,EACT,GAAG,OAC8E;IACjF,MAAM,aAAa;QACjB,KAAK;QACL,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IAEA,qBACE,8OAAC;QACC,SAAS,UAAU,CAAC,SAAS;QAC7B,WAAW,IAAA,+HAAE,EAAC,cAAc;QAC5B,OAAO,aAAa;QACnB,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cn, focusRing, disabledStyles } from './utils';\nimport { Loader2 } from 'lucide-react';\n\nconst buttonVariants = {\n  variant: {\n    primary: 'bg-primary text-primary-foreground hover:bg-primary/90',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    danger: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n    ghost: 'hover:bg-accent hover:text-accent-foreground',\n    outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n    link: 'text-primary underline-offset-4 hover:underline',\n  },\n  size: {\n    sm: 'h-9 rounded-md px-3 text-sm',\n    md: 'h-10 px-4 py-2',\n    lg: 'h-11 rounded-md px-8 text-base',\n    icon: 'h-10 w-10',\n  },\n} as const;\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: keyof typeof buttonVariants.variant;\n  size?: keyof typeof buttonVariants.size;\n  asChild?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant = 'primary',\n      size = 'md',\n      asChild = false,\n      loading = false,\n      loadingText,\n      disabled,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    \n    const buttonClasses = cn(\n      // Base styles\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium',\n      'ring-offset-background transition-colors',\n      focusRing,\n      disabledStyles,\n      // Variant styles\n      buttonVariants.variant[variant],\n      // Size styles  \n      buttonVariants.size[size],\n      className\n    );\n\n    const isDisabled = disabled || loading;\n\n    return (\n      <Comp\n        className={buttonClasses}\n        ref={ref}\n        disabled={isDisabled}\n        {...props}\n      >\n        {loading && (\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n        )}\n        {loading && loadingText ? loadingText : children}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB;IACrB,SAAS;QACP,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;QACP,SAAS;QACT,MAAM;IACR;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;AACF;AAWA,MAAM,uBAAS,mNAAgB,CAC7B,CACE,EACE,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,UAAU,KAAK,EACf,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,GAAG,OACJ,EACD;IAEA,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,MAAM,gBAAgB,IAAA,+HAAE,EACtB,cAAc;IACd,4FACA,4CACA,sIAAS,EACT,2IAAc,EACd,iBAAiB;IACjB,eAAe,OAAO,CAAC,QAAQ,EAC/B,gBAAgB;IAChB,eAAe,IAAI,CAAC,KAAK,EACzB;IAGF,MAAM,aAAa,YAAY;IAE/B,qBACE,8OAAC;QACC,WAAW;QACX,KAAK;QACL,UAAU;QACT,GAAG,KAAK;;YAER,yBACC,8OAAC,sLAAO;gBAAC,WAAU;;;;;;YAEpB,WAAW,cAAc,cAAc;;;;;;;AAG9C;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/checkbox.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox';\nimport { Check } from 'lucide-react';\nimport { cn } from '@/utils';\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn('flex items-center justify-center text-current')}\n    >\n      <Check className=\"h-3 w-3\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,yBAAW,mNAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,4KAAsB;QACrB,KAAK;QACL,WAAW,IAAA,oHAAE,EACX,sQACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,iLAA2B;YAC1B,WAAW,IAAA,oHAAE,EAAC;sBAEd,cAAA,8OAAC,2KAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,4KAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/orders/orders-table.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { OrderListItem, OrderStatus } from '@/lib/orders/types';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { \n  Clock, \n  DollarSign, \n  User, \n  Hash,\n  ChevronRight,\n  MoreVertical\n} from 'lucide-react';\n\ninterface OrdersTableProps {\n  orders: OrderListItem[];\n  loading: boolean;\n  selectedOrders: string[];\n  onSelectOrders: (orders: string[]) => void;\n  onStatusUpdate: (orderId: string, status: OrderStatus) => void;\n  onCancelOrder: (orderId: string) => void;\n  onViewOrder: (orderId: string) => void;\n}\n\nexport function OrdersTable({\n  orders,\n  loading,\n  selectedOrders,\n  onSelectOrders,\n  onStatusUpdate,\n  onCancelOrder,\n  onViewOrder\n}: OrdersTableProps) {\n  const [sortBy, setSortBy] = useState<'date' | 'total' | 'status'>('date');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n\n  const getStatusColor = (status: OrderStatus) => {\n    switch (status) {\n      case OrderStatus.PENDING: return 'yellow';\n      case OrderStatus.CONFIRMED: return 'blue';\n      case OrderStatus.PREPARING: return 'orange';\n      case OrderStatus.READY: return 'green';\n      case OrderStatus.COMPLETED: return 'gray';\n      case OrderStatus.DELIVERED: return 'green';\n      case OrderStatus.CANCELLED: return 'red';\n      case OrderStatus.REFUNDED: return 'purple';\n      default: return 'gray';\n    }\n  };\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'dine_in': return '🍽️';\n      case 'takeout': return '🥡';\n      case 'delivery': return '🚚';\n      case 'pickup': return '🛍️';\n      default: return '📦';\n    }\n  };\n\n  const formatTime = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const minutes = Math.floor(diff / 60000);\n    \n    if (minutes < 1) return 'Just now';\n    if (minutes < 60) return `${minutes}m ago`;\n    if (minutes < 1440) return `${Math.floor(minutes / 60)}h ago`;\n    return date.toLocaleDateString();\n  };\n\n  const handleSelectAll = () => {\n    if (selectedOrders.length === orders.length) {\n      onSelectOrders([]);\n    } else {\n      onSelectOrders(orders.map(o => o.id));\n    }\n  };\n\n  const handleSelectOrder = (orderId: string) => {\n    if (selectedOrders.includes(orderId)) {\n      onSelectOrders(selectedOrders.filter(id => id !== orderId));\n    } else {\n      onSelectOrders([...selectedOrders, orderId]);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"p-8 text-center text-muted-foreground\">\n        Loading orders...\n      </div>\n    );\n  }\n\n  if (orders.length === 0) {\n    return (\n      <div className=\"p-8 text-center text-muted-foreground\">\n        No orders found\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"w-full\">\n        <thead className=\"border-b\">\n          <tr>\n            <th className=\"p-4 text-left\">\n              <Checkbox\n                checked={selectedOrders.length === orders.length}\n                onCheckedChange={handleSelectAll}\n              />\n            </th>\n            <th className=\"p-4 text-left font-medium\">Order</th>\n            <th className=\"p-4 text-left font-medium\">Customer</th>\n            <th className=\"p-4 text-left font-medium\">Type</th>\n            <th className=\"p-4 text-left font-medium\">Items</th>\n            <th className=\"p-4 text-left font-medium\">Total</th>\n            <th className=\"p-4 text-left font-medium\">Status</th>\n            <th className=\"p-4 text-left font-medium\">Time</th>\n            <th className=\"p-4 text-left font-medium\">Actions</th>\n          </tr>\n        </thead>\n        <tbody className=\"divide-y\">\n          {orders.map((order) => (\n            <tr \n              key={order.id}\n              className=\"hover:bg-muted/50 cursor-pointer\"\n              onClick={() => onViewOrder(order.id)}\n            >\n              <td className=\"p-4\" onClick={(e) => e.stopPropagation()}>\n                <Checkbox\n                  checked={selectedOrders.includes(order.id)}\n                  onCheckedChange={() => handleSelectOrder(order.id)}\n                />\n              </td>\n              <td className=\"p-4\">\n                <div className=\"flex items-center gap-2\">\n                  <Hash className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"font-medium\">{order.orderNumber}</span>\n                </div>\n              </td>\n              <td className=\"p-4\">\n                <div className=\"flex items-center gap-2\">\n                  <User className=\"h-4 w-4 text-muted-foreground\" />\n                  <div>\n                    <p className=\"font-medium\">{order.customerName || 'Guest'}</p>\n                    {order.tableNumber && (\n                      <p className=\"text-sm text-muted-foreground\">Table {order.tableNumber}</p>\n                    )}\n                  </div>\n                </div>\n              </td>\n              <td className=\"p-4\">\n                <span className=\"text-xl\" title={order.type}>\n                  {getTypeIcon(order.type)}\n                </span>\n              </td>\n              <td className=\"p-4\">\n                <span className=\"text-sm\">{order.itemCount} items</span>\n              </td>\n              <td className=\"p-4\">\n                <div className=\"flex items-center gap-1\">\n                  <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n                  <span className=\"font-medium\">{order.total.toFixed(2)}</span>\n                </div>\n              </td>\n              <td className=\"p-4\">\n                <Badge variant={getStatusColor(order.status) as any}>\n                  {order.status.replace('_', ' ')}\n                </Badge>\n              </td>\n              <td className=\"p-4\">\n                <div className=\"flex items-center gap-1 text-sm text-muted-foreground\">\n                  <Clock className=\"h-4 w-4\" />\n                  <span>{formatTime(order.createdAt)}</span>\n                </div>\n                {order.estimatedReadyTime && (\n                  <p className=\"text-xs text-orange-500 mt-1\">\n                    Ready: {new Date(order.estimatedReadyTime).toLocaleTimeString()}\n                  </p>\n                )}\n              </td>\n              <td className=\"p-4\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    onClick={() => onViewOrder(order.id)}\n                  >\n                    <ChevronRight className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                  >\n                    <MoreVertical className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;;;;;;;;;;;;;AA0BO,SAAS,YAAY,EAC1B,MAAM,EACN,OAAO,EACP,cAAc,EACd,cAAc,EACd,cAAc,EACd,aAAa,EACb,WAAW,EACM;IACjB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,iNAAQ,EAA8B;IAClE,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAiB;IAE3D,MAAM,iBAAiB,CAAC;QACtB,OAAQ;YACN,KAAK,qIAAW,CAAC,OAAO;gBAAE,OAAO;YACjC,KAAK,qIAAW,CAAC,SAAS;gBAAE,OAAO;YACnC,KAAK,qIAAW,CAAC,SAAS;gBAAE,OAAO;YACnC,KAAK,qIAAW,CAAC,KAAK;gBAAE,OAAO;YAC/B,KAAK,qIAAW,CAAC,SAAS;gBAAE,OAAO;YACnC,KAAK,qIAAW,CAAC,SAAS;gBAAE,OAAO;YACnC,KAAK,qIAAW,CAAC,SAAS;gBAAE,OAAO;YACnC,KAAK,qIAAW,CAAC,QAAQ;gBAAE,OAAO;YAClC;gBAAS,OAAO;QAClB;IACF;IAEA,MAAM,cAAc,CAAC;QACnB,OAAQ;YACN,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAU,OAAO;YACtB;gBAAS,OAAO;QAClB;IACF;IAEA,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,MAAM,IAAI;QAChB,MAAM,OAAO,IAAI,OAAO,KAAK,KAAK,OAAO;QACzC,MAAM,UAAU,KAAK,KAAK,CAAC,OAAO;QAElC,IAAI,UAAU,GAAG,OAAO;QACxB,IAAI,UAAU,IAAI,OAAO,GAAG,QAAQ,KAAK,CAAC;QAC1C,IAAI,UAAU,MAAM,OAAO,GAAG,KAAK,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC;QAC7D,OAAO,KAAK,kBAAkB;IAChC;IAEA,MAAM,kBAAkB;QACtB,IAAI,eAAe,MAAM,KAAK,OAAO,MAAM,EAAE;YAC3C,eAAe,EAAE;QACnB,OAAO;YACL,eAAe,OAAO,GAAG,CAAC,CAAA,IAAK,EAAE,EAAE;QACrC;IACF;IAEA,MAAM,oBAAoB,CAAC;QACzB,IAAI,eAAe,QAAQ,CAAC,UAAU;YACpC,eAAe,eAAe,MAAM,CAAC,CAAA,KAAM,OAAO;QACpD,OAAO;YACL,eAAe;mBAAI;gBAAgB;aAAQ;QAC7C;IACF;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBAAwC;;;;;;IAI3D;IAEA,IAAI,OAAO,MAAM,KAAK,GAAG;QACvB,qBACE,8OAAC;YAAI,WAAU;sBAAwC;;;;;;IAI3D;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAM,WAAU;;8BACf,8OAAC;oBAAM,WAAU;8BACf,cAAA,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CACZ,cAAA,8OAAC,yIAAQ;oCACP,SAAS,eAAe,MAAM,KAAK,OAAO,MAAM;oCAChD,iBAAiB;;;;;;;;;;;0CAGrB,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;;;;;;;;;;;;8BAG9C,8OAAC;oBAAM,WAAU;8BACd,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;4BAEC,WAAU;4BACV,SAAS,IAAM,YAAY,MAAM,EAAE;;8CAEnC,8OAAC;oCAAG,WAAU;oCAAM,SAAS,CAAC,IAAM,EAAE,eAAe;8CACnD,cAAA,8OAAC,yIAAQ;wCACP,SAAS,eAAe,QAAQ,CAAC,MAAM,EAAE;wCACzC,iBAAiB,IAAM,kBAAkB,MAAM,EAAE;;;;;;;;;;;8CAGrD,8OAAC;oCAAG,WAAU;8CACZ,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,0KAAI;gDAAC,WAAU;;;;;;0DAChB,8OAAC;gDAAK,WAAU;0DAAe,MAAM,WAAW;;;;;;;;;;;;;;;;;8CAGpD,8OAAC;oCAAG,WAAU;8CACZ,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,0KAAI;gDAAC,WAAU;;;;;;0DAChB,8OAAC;;kEACC,8OAAC;wDAAE,WAAU;kEAAe,MAAM,YAAY,IAAI;;;;;;oDACjD,MAAM,WAAW,kBAChB,8OAAC;wDAAE,WAAU;;4DAAgC;4DAAO,MAAM,WAAW;;;;;;;;;;;;;;;;;;;;;;;;8CAK7E,8OAAC;oCAAG,WAAU;8CACZ,cAAA,8OAAC;wCAAK,WAAU;wCAAU,OAAO,MAAM,IAAI;kDACxC,YAAY,MAAM,IAAI;;;;;;;;;;;8CAG3B,8OAAC;oCAAG,WAAU;8CACZ,cAAA,8OAAC;wCAAK,WAAU;;4CAAW,MAAM,SAAS;4CAAC;;;;;;;;;;;;8CAE7C,8OAAC;oCAAG,WAAU;8CACZ,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,oLAAU;gDAAC,WAAU;;;;;;0DACtB,8OAAC;gDAAK,WAAU;0DAAe,MAAM,KAAK,CAAC,OAAO,CAAC;;;;;;;;;;;;;;;;;8CAGvD,8OAAC;oCAAG,WAAU;8CACZ,cAAA,8OAAC,mIAAK;wCAAC,SAAS,eAAe,MAAM,MAAM;kDACxC,MAAM,MAAM,CAAC,OAAO,CAAC,KAAK;;;;;;;;;;;8CAG/B,8OAAC;oCAAG,WAAU;;sDACZ,8OAAC;4CAAI,WAAU;;8DACb,8OAAC,2KAAK;oDAAC,WAAU;;;;;;8DACjB,8OAAC;8DAAM,WAAW,MAAM,SAAS;;;;;;;;;;;;wCAElC,MAAM,kBAAkB,kBACvB,8OAAC;4CAAE,WAAU;;gDAA+B;gDAClC,IAAI,KAAK,MAAM,kBAAkB,EAAE,kBAAkB;;;;;;;;;;;;;8CAInE,8OAAC;oCAAG,WAAU;oCAAM,SAAS,CAAC,IAAM,EAAE,eAAe;8CACnD,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,qIAAM;gDACL,MAAK;gDACL,SAAQ;gDACR,SAAS,IAAM,YAAY,MAAM,EAAE;0DAEnC,cAAA,8OAAC,sLAAY;oDAAC,WAAU;;;;;;;;;;;0DAE1B,8OAAC,qIAAM;gDACL,MAAK;gDACL,SAAQ;0DAER,cAAA,8OAAC,0LAAY;oDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;2BAtEzB,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;AAgF3B","debugId":null}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn, focusRing } from './utils';\nimport { AlertCircle, Check } from 'lucide-react';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  error?: string;\n  success?: boolean;\n  label?: string;\n  helperText?: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      type,\n      error,\n      success,\n      label,\n      helperText,\n      leftIcon,\n      rightIcon,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const generatedId = React.useId();\n    const inputId = id || generatedId;\n    const hasError = !!error;\n    const hasSuccess = success && !hasError;\n\n    const inputClasses = cn(\n      // Base styles\n      'flex h-10 w-full rounded-md border bg-background px-3 py-2 text-sm',\n      'ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium',\n      'placeholder:text-muted-foreground',\n      focusRing,\n      'disabled:cursor-not-allowed disabled:opacity-50',\n      // State styles\n      {\n        'border-input': !hasError && !hasSuccess,\n        'border-destructive text-destructive focus-visible:ring-destructive': hasError,\n        'border-green-500 text-green-700 focus-visible:ring-green-500': hasSuccess,\n        'pl-10': leftIcon,\n        'pr-10': rightIcon || hasError || hasSuccess,\n      },\n      className\n    );\n\n    const getStateIcon = () => {\n      if (hasError) return <AlertCircle className=\"h-4 w-4 text-destructive\" />;\n      if (hasSuccess) return <Check className=\"h-4 w-4 text-green-500\" />;\n      return rightIcon;\n    };\n\n    return (\n      <div className=\"w-full\">\n        {label && (\n          <label\n            htmlFor={inputId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n              hasError ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n          </label>\n        )}\n        <div className=\"relative\">\n          {leftIcon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2\">\n              {leftIcon}\n            </div>\n          )}\n          <input\n            type={type}\n            className={inputClasses}\n            ref={ref}\n            id={inputId}\n            aria-invalid={hasError ? 'true' : 'false'}\n            aria-describedby={\n              error ? `${inputId}-error` : helperText ? `${inputId}-helper` : undefined\n            }\n            {...props}\n          />\n          {(rightIcon || hasError || hasSuccess) && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n              {getStateIcon()}\n            </div>\n          )}\n        </div>\n        {error && (\n          <p\n            id={`${inputId}-error`}\n            className=\"mt-1 text-sm text-destructive\"\n            role=\"alert\"\n          >\n            {error}\n          </p>\n        )}\n        {helperText && !error && (\n          <p\n            id={`${inputId}-helper`}\n            className=\"mt-1 text-sm text-muted-foreground\"\n          >\n            {helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\nexport { Input };"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;;;;;;AAYA,MAAM,sBAAQ,mNAAgB,CAC5B,CACE,EACE,SAAS,EACT,IAAI,EACJ,KAAK,EACL,OAAO,EACP,KAAK,EACL,UAAU,EACV,QAAQ,EACR,SAAS,EACT,EAAE,EACF,GAAG,OACJ,EACD;IAEA,MAAM,cAAc,8MAAW;IAC/B,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,CAAC,CAAC;IACnB,MAAM,aAAa,WAAW,CAAC;IAE/B,MAAM,eAAe,IAAA,+HAAE,EACrB,cAAc;IACd,sEACA,0FACA,qCACA,sIAAS,EACT,mDACA,eAAe;IACf;QACE,gBAAgB,CAAC,YAAY,CAAC;QAC9B,sEAAsE;QACtE,gEAAgE;QAChE,SAAS;QACT,SAAS,aAAa,YAAY;IACpC,GACA;IAGF,MAAM,eAAe;QACnB,IAAI,UAAU,qBAAO,8OAAC,qLAAW;YAAC,WAAU;;;;;;QAC5C,IAAI,YAAY,qBAAO,8OAAC,2KAAK;YAAC,WAAU;;;;;;QACxC,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC;gBACC,SAAS;gBACT,WAAW,IAAA,+HAAE,EACX,8FACA,WAAW,qBAAqB;0BAGjC;;;;;;0BAGL,8OAAC;gBAAI,WAAU;;oBACZ,0BACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAGL,8OAAC;wBACC,MAAM;wBACN,WAAW;wBACX,KAAK;wBACL,IAAI;wBACJ,gBAAc,WAAW,SAAS;wBAClC,oBACE,QAAQ,GAAG,QAAQ,MAAM,CAAC,GAAG,aAAa,GAAG,QAAQ,OAAO,CAAC,GAAG;wBAEjE,GAAG,KAAK;;;;;;oBAEV,CAAC,aAAa,YAAY,UAAU,mBACnC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAIN,uBACC,8OAAC;gBACC,IAAI,GAAG,QAAQ,MAAM,CAAC;gBACtB,WAAU;gBACV,MAAK;0BAEJ;;;;;;YAGJ,cAAc,CAAC,uBACd,8OAAC;gBACC,IAAI,GAAG,QAAQ,OAAO,CAAC;gBACvB,WAAU;0BAET;;;;;;;;;;;;AAKX;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1518, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/date-range-picker.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DayPicker, DateRange } from 'react-day-picker';\nimport { format } from 'date-fns';\nimport { cn } from './utils';\nimport { Button } from './button';\n// Input component not needed for this component\nimport { Calendar, X } from 'lucide-react';\nimport 'react-day-picker/style.css';\n\nexport interface DateRangePickerProps {\n  value?: DateRange;\n  onChange?: (range: DateRange | undefined) => void;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n  calendarClassName?: string;\n  minDate?: Date;\n  maxDate?: Date;\n  presets?: {\n    label: string;\n    value: DateRange;\n  }[];\n  showPresets?: boolean;\n  allowSingleDate?: boolean;\n  format?: string;\n}\n\nfunction DateRangePicker({\n  value,\n  onChange,\n  placeholder = 'Select date range',\n  disabled = false,\n  className,\n  calendarClassName,\n  minDate,\n  maxDate,\n  presets = [\n    {\n      label: 'Today',\n      value: { from: new Date(), to: new Date() },\n    },\n    {\n      label: 'Yesterday',\n      value: {\n        from: new Date(Date.now() - 24 * 60 * 60 * 1000),\n        to: new Date(Date.now() - 24 * 60 * 60 * 1000),\n      },\n    },\n    {\n      label: 'Last 7 days',\n      value: {\n        from: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000),\n        to: new Date(),\n      },\n    },\n    {\n      label: 'Last 30 days',\n      value: {\n        from: new Date(Date.now() - 29 * 24 * 60 * 60 * 1000),\n        to: new Date(),\n      },\n    },\n    {\n      label: 'This month',\n      value: {\n        from: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\n        to: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),\n      },\n    },\n    {\n      label: 'Last month',\n      value: {\n        from: new Date(new Date().getFullYear(), new Date().getMonth() - 1, 1),\n        to: new Date(new Date().getFullYear(), new Date().getMonth(), 0),\n      },\n    },\n  ],\n  showPresets = true,\n  allowSingleDate = false,\n  format: dateFormat = 'MMM dd, yyyy',\n}: DateRangePickerProps) {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [selectedRange, setSelectedRange] = React.useState<DateRange | undefined>(value);\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const popoverRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    setSelectedRange(value);\n  }, [value]);\n\n  React.useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        popoverRef.current &&\n        !popoverRef.current.contains(event.target as Node) &&\n        triggerRef.current &&\n        !triggerRef.current.contains(event.target as Node)\n      ) {\n        setIsOpen(false);\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n    \n    // Return undefined when isOpen is false\n    return undefined;\n  }, [isOpen]);\n\n  const handleSelect = (range: DateRange | undefined) => {\n    setSelectedRange(range);\n    if (allowSingleDate && range?.from && !range?.to) {\n      onChange?.(range);\n      setIsOpen(false);\n    } else if (range?.from && range?.to) {\n      onChange?.(range);\n      setIsOpen(false);\n    }\n  };\n\n  const handlePresetSelect = (preset: DateRange) => {\n    setSelectedRange(preset);\n    onChange?.(preset);\n    setIsOpen(false);\n  };\n\n  const handleClear = () => {\n    setSelectedRange(undefined);\n    onChange?.(undefined);\n  };\n\n  const formatDateRange = (range: DateRange | undefined) => {\n    if (!range?.from) return '';\n    \n    if (!range.to) {\n      return format(range.from, dateFormat);\n    }\n    \n    if (range.from.getTime() === range.to.getTime()) {\n      return format(range.from, dateFormat);\n    }\n    \n    return `${format(range.from, dateFormat)} - ${format(range.to, dateFormat)}`;\n  };\n\n  const displayValue = formatDateRange(selectedRange);\n\n  return (\n    <div className={cn('relative', className)}>\n      <Button\n        ref={triggerRef}\n        variant=\"outline\"\n        className={cn(\n          'w-full justify-start text-left font-normal',\n          !displayValue && 'text-muted-foreground'\n        )}\n        onClick={() => setIsOpen(!isOpen)}\n        disabled={disabled}\n      >\n        <Calendar className=\"mr-2 h-4 w-4\" />\n        {displayValue || placeholder}\n        {displayValue && (\n          <X\n            className=\"ml-auto h-4 w-4 opacity-50 hover:opacity-100\"\n            onClick={(e) => {\n              e.stopPropagation();\n              handleClear();\n            }}\n          />\n        )}\n      </Button>\n\n      {isOpen && (\n        <div\n          ref={popoverRef}\n          className={cn(\n            'absolute top-full left-0 z-50 mt-2 rounded-md border bg-popover p-0 text-popover-foreground shadow-md',\n            'animate-in fade-in-0 zoom-in-95',\n            showPresets ? 'w-auto' : 'w-fit',\n            calendarClassName\n          )}\n        >\n          <div className=\"flex\">\n            {showPresets && (\n              <div className=\"border-r border-border p-3\">\n                <div className=\"space-y-1\">\n                  {presets.map((preset, index) => (\n                    <Button\n                      key={index}\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"w-full justify-start font-normal\"\n                      onClick={() => handlePresetSelect(preset.value)}\n                    >\n                      {preset.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            )}\n            <div className=\"p-3\">\n              <DayPicker\n                mode=\"range\"\n                selected={selectedRange}\n                onSelect={handleSelect}\n                disabled={(date) => {\n                  if (minDate && date < minDate) return true;\n                  if (maxDate && date > maxDate) return true;\n                  return false;\n                }}\n                numberOfMonths={2}\n                classNames={{\n                  months: 'flex space-x-4',\n                  month: 'space-y-4',\n                  caption: 'flex justify-center pt-1 relative items-center',\n                  caption_label: 'text-sm font-medium',\n                  nav: 'space-x-1 flex items-center',\n                  nav_button: cn(\n                    'inline-flex items-center justify-center rounded-md text-sm font-medium',\n                    'ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground',\n                    'h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100'\n                  ),\n                  nav_button_previous: 'absolute left-1',\n                  nav_button_next: 'absolute right-1',\n                  table: 'w-full border-collapse space-y-1',\n                  head_row: 'flex',\n                  head_cell: 'text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]',\n                  row: 'flex w-full mt-2',\n                  cell: 'text-center text-sm p-0 relative [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20',\n                  day: cn(\n                    'inline-flex items-center justify-center rounded-md text-sm font-normal',\n                    'ring-offset-background transition-colors hover:bg-accent hover:text-accent-foreground',\n                    'h-9 w-9 p-0 font-normal aria-selected:opacity-100'\n                  ),\n                  day_selected: 'bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground',\n                  day_today: 'bg-accent text-accent-foreground',\n                  day_outside: 'text-muted-foreground opacity-50',\n                  day_disabled: 'text-muted-foreground opacity-50',\n                  day_range_middle: 'aria-selected:bg-accent aria-selected:text-accent-foreground',\n                  day_hidden: 'invisible',\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport { DateRangePicker, type DateRange };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1771, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/orders/order-filters.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { OrderFilters, OrderStatus, OrderType, PaymentStatus } from '@/lib/orders/types';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { DateRangePicker } from '@/components/ui/date-range-picker';\nimport { Search, X, Filter } from 'lucide-react';\n\ninterface OrderFiltersComponentProps {\n  filters: OrderFilters;\n  onFiltersChange: (filters: OrderFilters) => void;\n}\n\nexport function OrderFilters({ filters, onFiltersChange }: OrderFiltersComponentProps) {\n  const [localFilters, setLocalFilters] = useState<OrderFilters>(filters);\n\n  const handleStatusToggle = (status: OrderStatus) => {\n    const currentStatuses = localFilters.status || [];\n    const newStatuses = currentStatuses.includes(status)\n      ? currentStatuses.filter(s => s !== status)\n      : [...currentStatuses, status];\n    \n    const updated = { ...localFilters, status: newStatuses.length > 0 ? newStatuses : undefined };\n    setLocalFilters(updated);\n  };\n\n  const handleTypeToggle = (type: OrderType) => {\n    const currentTypes = localFilters.type || [];\n    const newTypes = currentTypes.includes(type)\n      ? currentTypes.filter(t => t !== type)\n      : [...currentTypes, type];\n    \n    const updated = { ...localFilters, type: newTypes.length > 0 ? newTypes : undefined };\n    setLocalFilters(updated);\n  };\n\n  const handleSearchChange = (value: string) => {\n    const updated = { ...localFilters, searchTerm: value || undefined };\n    setLocalFilters(updated);\n  };\n\n  const handleDateRangeChange = (range: { start: Date; end: Date } | null) => {\n    const updated = {\n      ...localFilters,\n      dateRange: range ? {\n        start: range.start.toISOString(),\n        end: range.end.toISOString()\n      } : undefined\n    };\n    setLocalFilters(updated);\n  };\n\n  const handleApplyFilters = () => {\n    onFiltersChange(localFilters);\n  };\n\n  const handleClearFilters = () => {\n    setLocalFilters({});\n    onFiltersChange({});\n  };\n\n  const hasActiveFilters = Object.keys(localFilters).length > 0;\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Search */}\n      <div className=\"relative\">\n        <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-muted-foreground\" />\n        <Input\n          placeholder=\"Search orders by number, customer, email, or phone...\"\n          value={localFilters.searchTerm || ''}\n          onChange={(e) => handleSearchChange(e.target.value)}\n          className=\"pl-10\"\n        />\n      </div>\n\n      {/* Status Filters */}\n      <div>\n        <label className=\"text-sm font-medium mb-2 block\">Order Status</label>\n        <div className=\"flex flex-wrap gap-2\">\n          {Object.values(OrderStatus).map(status => (\n            <Badge\n              key={status}\n              variant={localFilters.status?.includes(status) ? 'default' : 'outline'}\n              className=\"cursor-pointer\"\n              onClick={() => handleStatusToggle(status)}\n            >\n              {status.replace('_', ' ')}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Type Filters */}\n      <div>\n        <label className=\"text-sm font-medium mb-2 block\">Order Type</label>\n        <div className=\"flex flex-wrap gap-2\">\n          {Object.values(OrderType).map(type => (\n            <Badge\n              key={type}\n              variant={localFilters.type?.includes(type) ? 'default' : 'outline'}\n              className=\"cursor-pointer\"\n              onClick={() => handleTypeToggle(type)}\n            >\n              {type.replace('_', ' ')}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Date Range */}\n      <div>\n        <label className=\"text-sm font-medium mb-2 block\">Date Range</label>\n        <DateRangePicker\n          value={localFilters.dateRange ? {\n            start: new Date(localFilters.dateRange.start),\n            end: new Date(localFilters.dateRange.end)\n          } : null}\n          onChange={handleDateRangeChange}\n        />\n      </div>\n\n      {/* Amount Range */}\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <label className=\"text-sm font-medium mb-2 block\">Min Amount</label>\n          <Input\n            type=\"number\"\n            placeholder=\"0.00\"\n            value={localFilters.minAmount || ''}\n            onChange={(e) => setLocalFilters({\n              ...localFilters,\n              minAmount: e.target.value ? parseFloat(e.target.value) : undefined\n            })}\n          />\n        </div>\n        <div>\n          <label className=\"text-sm font-medium mb-2 block\">Max Amount</label>\n          <Input\n            type=\"number\"\n            placeholder=\"999.99\"\n            value={localFilters.maxAmount || ''}\n            onChange={(e) => setLocalFilters({\n              ...localFilters,\n              maxAmount: e.target.value ? parseFloat(e.target.value) : undefined\n            })}\n          />\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex items-center justify-between pt-4 border-t\">\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={handleClearFilters}\n          disabled={!hasActiveFilters}\n        >\n          <X className=\"h-4 w-4 mr-2\" />\n          Clear Filters\n        </Button>\n        <Button\n          size=\"sm\"\n          onClick={handleApplyFilters}\n        >\n          <Filter className=\"h-4 w-4 mr-2\" />\n          Apply Filters\n        </Button>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AARA;;;;;;;;;;;AAeO,SAAS,aAAa,EAAE,OAAO,EAAE,eAAe,EAA8B;IACnF,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAe;IAE/D,MAAM,qBAAqB,CAAC;QAC1B,MAAM,kBAAkB,aAAa,MAAM,IAAI,EAAE;QACjD,MAAM,cAAc,gBAAgB,QAAQ,CAAC,UACzC,gBAAgB,MAAM,CAAC,CAAA,IAAK,MAAM,UAClC;eAAI;YAAiB;SAAO;QAEhC,MAAM,UAAU;YAAE,GAAG,YAAY;YAAE,QAAQ,YAAY,MAAM,GAAG,IAAI,cAAc;QAAU;QAC5F,gBAAgB;IAClB;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,eAAe,aAAa,IAAI,IAAI,EAAE;QAC5C,MAAM,WAAW,aAAa,QAAQ,CAAC,QACnC,aAAa,MAAM,CAAC,CAAA,IAAK,MAAM,QAC/B;eAAI;YAAc;SAAK;QAE3B,MAAM,UAAU;YAAE,GAAG,YAAY;YAAE,MAAM,SAAS,MAAM,GAAG,IAAI,WAAW;QAAU;QACpF,gBAAgB;IAClB;IAEA,MAAM,qBAAqB,CAAC;QAC1B,MAAM,UAAU;YAAE,GAAG,YAAY;YAAE,YAAY,SAAS;QAAU;QAClE,gBAAgB;IAClB;IAEA,MAAM,wBAAwB,CAAC;QAC7B,MAAM,UAAU;YACd,GAAG,YAAY;YACf,WAAW,QAAQ;gBACjB,OAAO,MAAM,KAAK,CAAC,WAAW;gBAC9B,KAAK,MAAM,GAAG,CAAC,WAAW;YAC5B,IAAI;QACN;QACA,gBAAgB;IAClB;IAEA,MAAM,qBAAqB;QACzB,gBAAgB;IAClB;IAEA,MAAM,qBAAqB;QACzB,gBAAgB,CAAC;QACjB,gBAAgB,CAAC;IACnB;IAEA,MAAM,mBAAmB,OAAO,IAAI,CAAC,cAAc,MAAM,GAAG;IAE5D,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4KAAM;wBAAC,WAAU;;;;;;kCAClB,8OAAC,mIAAK;wBACJ,aAAY;wBACZ,OAAO,aAAa,UAAU,IAAI;wBAClC,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;wBAClD,WAAU;;;;;;;;;;;;0BAKd,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC;wBAAI,WAAU;kCACZ,OAAO,MAAM,CAAC,qIAAW,EAAE,GAAG,CAAC,CAAA,uBAC9B,8OAAC,mIAAK;gCAEJ,SAAS,aAAa,MAAM,EAAE,SAAS,UAAU,YAAY;gCAC7D,WAAU;gCACV,SAAS,IAAM,mBAAmB;0CAEjC,OAAO,OAAO,CAAC,KAAK;+BALhB;;;;;;;;;;;;;;;;0BAYb,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC;wBAAI,WAAU;kCACZ,OAAO,MAAM,CAAC,mIAAS,EAAE,GAAG,CAAC,CAAA,qBAC5B,8OAAC,mIAAK;gCAEJ,SAAS,aAAa,IAAI,EAAE,SAAS,QAAQ,YAAY;gCACzD,WAAU;gCACV,SAAS,IAAM,iBAAiB;0CAE/B,KAAK,OAAO,CAAC,KAAK;+BALd;;;;;;;;;;;;;;;;0BAYb,8OAAC;;kCACC,8OAAC;wBAAM,WAAU;kCAAiC;;;;;;kCAClD,8OAAC,+JAAe;wBACd,OAAO,aAAa,SAAS,GAAG;4BAC9B,OAAO,IAAI,KAAK,aAAa,SAAS,CAAC,KAAK;4BAC5C,KAAK,IAAI,KAAK,aAAa,SAAS,CAAC,GAAG;wBAC1C,IAAI;wBACJ,UAAU;;;;;;;;;;;;0BAKd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAiC;;;;;;0CAClD,8OAAC,mIAAK;gCACJ,MAAK;gCACL,aAAY;gCACZ,OAAO,aAAa,SAAS,IAAI;gCACjC,UAAU,CAAC,IAAM,gBAAgB;wCAC/B,GAAG,YAAY;wCACf,WAAW,EAAE,MAAM,CAAC,KAAK,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,IAAI;oCAC3D;;;;;;;;;;;;kCAGJ,8OAAC;;0CACC,8OAAC;gCAAM,WAAU;0CAAiC;;;;;;0CAClD,8OAAC,mIAAK;gCACJ,MAAK;gCACL,aAAY;gCACZ,OAAO,aAAa,SAAS,IAAI;gCACjC,UAAU,CAAC,IAAM,gBAAgB;wCAC/B,GAAG,YAAY;wCACf,WAAW,EAAE,MAAM,CAAC,KAAK,GAAG,WAAW,EAAE,MAAM,CAAC,KAAK,IAAI;oCAC3D;;;;;;;;;;;;;;;;;;0BAMN,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,qIAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,SAAS;wBACT,UAAU,CAAC;;0CAEX,8OAAC,uKAAC;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGhC,8OAAC,qIAAM;wBACL,MAAK;wBACL,SAAS;;0CAET,8OAAC,4KAAM;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAM7C","debugId":null}},
    {"offset": {"line": 2094, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/orders/order-quick-actions.tsx"],"sourcesContent":["'use client';\n\nimport { Plus, RefreshCw } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\ninterface OrderQuickActionsProps {\n  onNewOrder: () => void;\n  onRefresh: () => void;\n}\n\nexport function OrderQuickActions({ onNewOrder, onRefresh }: OrderQuickActionsProps) {\n  return (\n    <div className=\"fixed bottom-6 right-6 flex flex-col gap-2\">\n      <Button\n        size=\"icon\"\n        variant=\"outline\"\n        className=\"h-12 w-12 rounded-full shadow-lg\"\n        onClick={onRefresh}\n      >\n        <RefreshCw className=\"h-5 w-5\" />\n      </Button>\n      <Button\n        size=\"icon\"\n        className=\"h-14 w-14 rounded-full shadow-lg\"\n        onClick={onNewOrder}\n      >\n        <Plus className=\"h-6 w-6\" />\n      </Button>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAHA;;;;;AAUO,SAAS,kBAAkB,EAAE,UAAU,EAAE,SAAS,EAA0B;IACjF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qIAAM;gBACL,MAAK;gBACL,SAAQ;gBACR,WAAU;gBACV,SAAS;0BAET,cAAA,8OAAC,mLAAS;oBAAC,WAAU;;;;;;;;;;;0BAEvB,8OAAC,qIAAM;gBACL,MAAK;gBACL,WAAU;gBACV,SAAS;0BAET,cAAA,8OAAC,0KAAI;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAIxB","debugId":null}},
    {"offset": {"line": 2155, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'outlined' | 'elevated';\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', padding = 'md', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg bg-card text-card-foreground',\n          {\n            'border border-border': variant === 'default' || variant === 'outlined',\n            'shadow-sm': variant === 'default',\n            'shadow-md': variant === 'elevated',\n            'p-0': padding === 'none',\n            'p-4': padding === 'sm',\n            'p-6': padding === 'md',\n            'p-8': padding === 'lg',\n          },\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\nCard.displayName = 'Card';\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n}\n\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, divider = false, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex flex-col space-y-1.5 p-6',\n        divider && 'border-b border-border',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, padding = 'md', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        {\n          'p-0': padding === 'none',\n          'p-4': padding === 'sm',\n          'p-6': padding === 'md',\n          'p-8': padding === 'lg',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardContent.displayName = 'CardContent';\n\nexport interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n  justify?: 'start' | 'center' | 'end' | 'between';\n}\n\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, divider = false, justify = 'start', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex items-center p-6 pt-0',\n        {\n          'border-t border-border pt-6': divider,\n          'justify-start': justify === 'start',\n          'justify-center': justify === 'center',\n          'justify-end': justify === 'end',\n          'justify-between': justify === 'between',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = 'CardFooter';\n\n// Specialized card variants for common use cases\nexport interface ActionCardProps extends CardProps {\n  title: string;\n  description?: string;\n  action: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\nfunction ActionCard({\n  title,\n  description,\n  action,\n  icon,\n  className,\n  ...props\n}: ActionCardProps) {\n  return (\n    <Card className={cn('transition-all hover:shadow-md', className)} {...props}>\n      <CardHeader>\n        <div className=\"flex items-center space-x-4\">\n          {icon && (\n            <div className=\"flex-shrink-0 p-2 rounded-lg bg-primary/10 text-primary\">\n              {icon}\n            </div>\n          )}\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg\">{title}</CardTitle>\n            {description && (\n              <CardDescription>{description}</CardDescription>\n            )}\n          </div>\n          <div className=\"flex-shrink-0\">{action}</div>\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nexport interface MetricCardProps extends CardProps {\n  label: string;\n  value: string | number;\n  change?: {\n    value: number;\n    type: 'increase' | 'decrease';\n    period?: string;\n  };\n  icon?: React.ReactNode;\n  loading?: boolean;\n}\n\nfunction MetricCard({\n  label,\n  value,\n  change,\n  icon,\n  loading = false,\n  className,\n  ...props\n}: MetricCardProps) {\n  return (\n    <Card className={className} {...props}>\n      <CardContent>\n        <div className=\"flex items-center justify-between space-y-0 pb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{label}</p>\n          {icon && <div className=\"text-muted-foreground\">{icon}</div>}\n        </div>\n        <div>\n          {loading ? (\n            <div className=\"h-8 w-24 bg-muted rounded animate-pulse\" />\n          ) : (\n            <div className=\"text-2xl font-bold\">{value}</div>\n          )}\n          {change && !loading && (\n            <p\n              className={cn(\n                'text-xs',\n                change.type === 'increase'\n                  ? 'text-green-600'\n                  : 'text-destructive'\n              )}\n            >\n              {change.type === 'increase' ? '+' : '-'}\n              {Math.abs(change.value)}%\n              {change.period && ` from ${change.period}`}\n            </p>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  ActionCard,\n  MetricCard,\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2408, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/orders/orders-content.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport {\n  Order,\n  OrderStatus,\n  OrderType,\n  PaymentStatus,\n  OrderFilters,\n  OrderStats,\n  OrderListItem\n} from '@/lib/orders/types';\nimport {\n  getOrderListItems,\n  getOrderStats,\n  updateOrder,\n  cancelOrder\n} from '@/lib/orders/data';\nimport { OrdersTable } from '@/components/orders/orders-table';\nimport { OrderFilters as FiltersComponent } from '@/components/orders/order-filters';\nimport { OrderStats as StatsComponent } from '@/components/orders/order-stats';\nimport { OrderQuickActions } from '@/components/orders/order-quick-actions';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  RefreshCw, \n  Download, \n  Plus,\n  Search,\n  Filter,\n  Clock,\n  CheckCircle,\n  XCircle,\n  AlertCircle\n} from 'lucide-react';\n\ninterface OrdersContentProps {\n  searchParams: {\n    status?: string;\n    type?: string;\n    search?: string;\n    date?: string;\n    page?: string;\n  };\n}\n\nexport function OrdersContent({ searchParams }: OrdersContentProps) {\n  const router = useRouter();\n  const [orders, setOrders] = useState<OrderListItem[]>([]);\n  const [stats, setStats] = useState<OrderStats | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [selectedOrders, setSelectedOrders] = useState<string[]>([]);\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Parse filters from search params\n  const filters: OrderFilters = {\n    status: searchParams.status ? searchParams.status.split(',') as OrderStatus[] : undefined,\n    type: searchParams.type ? searchParams.type.split(',') as OrderType[] : undefined,\n    searchTerm: searchParams.search,\n    dateRange: searchParams.date ? {\n      start: searchParams.date,\n      end: searchParams.date\n    } : undefined\n  };\n\n  // Load orders and stats\n  const loadData = useCallback(async () => {\n    try {\n      setLoading(true);\n      const [ordersData, statsData] = await Promise.all([\n        getOrderListItems(filters),\n        getOrderStats(filters.dateRange)\n      ]);\n      setOrders(ordersData);\n      setStats(statsData);\n    } catch (error) {\n      console.error('Failed to load orders:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [searchParams.status, searchParams.type, searchParams.search, searchParams.date]);\n\n  // Refresh data\n  const handleRefresh = async () => {\n    setRefreshing(true);\n    await loadData();\n    setRefreshing(false);\n  };\n\n  // Update order status\n  const handleStatusUpdate = async (orderId: string, status: OrderStatus) => {\n    try {\n      await updateOrder(orderId, { status });\n      await loadData();\n    } catch (error) {\n      console.error('Failed to update order status:', error);\n    }\n  };\n\n  // Cancel order\n  const handleCancelOrder = async (orderId: string) => {\n    if (confirm('Are you sure you want to cancel this order?')) {\n      try {\n        await cancelOrder(orderId, 'Cancelled by staff');\n        await loadData();\n      } catch (error) {\n        console.error('Failed to cancel order:', error);\n      }\n    }\n  };\n\n  // Bulk actions\n  const handleBulkAction = async (action: string) => {\n    if (selectedOrders.length === 0) return;\n\n    switch (action) {\n      case 'confirm':\n        for (const orderId of selectedOrders) {\n          await updateOrder(orderId, { status: OrderStatus.CONFIRMED });\n        }\n        break;\n      case 'ready':\n        for (const orderId of selectedOrders) {\n          await updateOrder(orderId, { status: OrderStatus.READY });\n        }\n        break;\n      case 'complete':\n        for (const orderId of selectedOrders) {\n          await updateOrder(orderId, { status: OrderStatus.COMPLETED });\n        }\n        break;\n      case 'cancel':\n        if (confirm(`Cancel ${selectedOrders.length} orders?`)) {\n          for (const orderId of selectedOrders) {\n            await cancelOrder(orderId, 'Bulk cancelled');\n          }\n        }\n        break;\n    }\n\n    setSelectedOrders([]);\n    await loadData();\n  };\n\n  // Export orders\n  const handleExport = () => {\n    // Implementation for CSV export\n    console.log('Exporting orders...');\n  };\n\n  useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  // Auto-refresh every 30 seconds for real-time updates\n  useEffect(() => {\n    const interval = setInterval(() => {\n      loadData();\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, [loadData]);\n\n  // Quick filter tabs\n  const quickFilters = [\n    { \n      label: 'All', \n      value: '', \n      count: stats?.totalOrders || 0 \n    },\n    { \n      label: 'Pending', \n      value: OrderStatus.PENDING,\n      count: stats?.pendingOrders || 0,\n      color: 'yellow' \n    },\n    { \n      label: 'Preparing', \n      value: OrderStatus.PREPARING,\n      count: stats?.preparingOrders || 0,\n      color: 'blue' \n    },\n    { \n      label: 'Ready', \n      value: OrderStatus.READY,\n      count: stats?.readyOrders || 0,\n      color: 'green' \n    },\n    { \n      label: 'Completed', \n      value: OrderStatus.COMPLETED,\n      count: stats?.completedOrders || 0,\n      color: 'gray' \n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Stats Cards */}\n      {stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <Card className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Today's Orders</p>\n                <p className=\"text-2xl font-bold\">{stats.todayOrders}</p>\n              </div>\n              <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\n                <Clock className=\"h-5 w-5 text-blue-600 dark:text-blue-400\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Today's Revenue</p>\n                <p className=\"text-2xl font-bold\">${stats.todayRevenue.toFixed(2)}</p>\n              </div>\n              <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\n                <CheckCircle className=\"h-5 w-5 text-green-600 dark:text-green-400\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Avg Order Value</p>\n                <p className=\"text-2xl font-bold\">${stats.averageOrderValue.toFixed(2)}</p>\n              </div>\n              <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\n                <AlertCircle className=\"h-5 w-5 text-purple-600 dark:text-purple-400\" />\n              </div>\n            </div>\n          </Card>\n\n          <Card className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm text-muted-foreground\">Avg Prep Time</p>\n                <p className=\"text-2xl font-bold\">{stats.averagePrepTime.toFixed(0)} min</p>\n              </div>\n              <div className=\"p-2 bg-orange-100 dark:bg-orange-900 rounded-lg\">\n                <Clock className=\"h-5 w-5 text-orange-600 dark:text-orange-400\" />\n              </div>\n            </div>\n          </Card>\n        </div>\n      )}\n\n      {/* Quick Filters */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-2\">\n          {quickFilters.map((filter) => (\n            <Button\n              key={filter.value}\n              variant={searchParams.status === filter.value || (!searchParams.status && !filter.value) ? 'default' : 'outline'}\n              size=\"sm\"\n              onClick={() => {\n                const params = new URLSearchParams(searchParams as any);\n                if (filter.value) {\n                  params.set('status', filter.value);\n                } else {\n                  params.delete('status');\n                }\n                router.push(`/orders?${params.toString()}`);\n              }}\n            >\n              {filter.label}\n              {filter.count > 0 && (\n                <Badge variant=\"secondary\" className=\"ml-2\">\n                  {filter.count}\n                </Badge>\n              )}\n            </Button>\n          ))}\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setShowFilters(!showFilters)}\n          >\n            <Filter className=\"h-4 w-4 mr-2\" />\n            Filters\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleRefresh}\n            disabled={refreshing}\n          >\n            <RefreshCw className={`h-4 w-4 mr-2 ${refreshing ? 'animate-spin' : ''}`} />\n            Refresh\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleExport}\n          >\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* Advanced Filters */}\n      {showFilters && (\n        <Card className=\"p-4\">\n          <FiltersComponent\n            filters={filters}\n            onFiltersChange={(newFilters) => {\n              const params = new URLSearchParams();\n              if (newFilters.status?.length) {\n                params.set('status', newFilters.status.join(','));\n              }\n              if (newFilters.type?.length) {\n                params.set('type', newFilters.type.join(','));\n              }\n              if (newFilters.searchTerm) {\n                params.set('search', newFilters.searchTerm);\n              }\n              if (newFilters.dateRange) {\n                params.set('date', newFilters.dateRange.start);\n              }\n              router.push(`/orders?${params.toString()}`);\n            }}\n          />\n        </Card>\n      )}\n\n      {/* Bulk Actions */}\n      {selectedOrders.length > 0 && (\n        <Card className=\"p-4 bg-primary/5\">\n          <div className=\"flex items-center justify-between\">\n            <p className=\"text-sm font-medium\">\n              {selectedOrders.length} order(s) selected\n            </p>\n            <div className=\"flex items-center gap-2\">\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={() => handleBulkAction('confirm')}\n              >\n                Confirm All\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={() => handleBulkAction('ready')}\n              >\n                Mark Ready\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={() => handleBulkAction('complete')}\n              >\n                Complete All\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"destructive\"\n                onClick={() => handleBulkAction('cancel')}\n              >\n                Cancel All\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => setSelectedOrders([])}\n              >\n                Clear Selection\n              </Button>\n            </div>\n          </div>\n        </Card>\n      )}\n\n      {/* Orders Table */}\n      <Card>\n        <OrdersTable\n          orders={orders}\n          loading={loading}\n          selectedOrders={selectedOrders}\n          onSelectOrders={setSelectedOrders}\n          onStatusUpdate={handleStatusUpdate}\n          onCancelOrder={handleCancelOrder}\n          onViewOrder={(orderId) => router.push(`/orders/${orderId}`)}\n        />\n      </Card>\n\n      {/* Quick Actions FAB */}\n      <OrderQuickActions\n        onNewOrder={() => router.push('/orders/new')}\n        onRefresh={handleRefresh}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}