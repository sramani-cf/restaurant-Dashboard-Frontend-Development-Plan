{"version":3,"sources":["turbopack:///[project]/components/settings/settings-navigation.tsx","turbopack:///[project]/components/settings/settings-header.tsx","turbopack:///[project]/components/settings/import-export-controls.tsx","turbopack:///[project]/app/settings/data:ac85a0 <text/javascript>","turbopack:///[project]/app/settings/data:56e8b6 <text/javascript>","turbopack:///[project]/app/settings/data:2f7204 <text/javascript>","turbopack:///[project]/components/settings/settings-validation.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { usePathname, useRouter, useSearchParams } from 'next/navigation';\nimport { cn } from '../../lib/utils';\n\ninterface NavigationItem {\n  id: string;\n  label: string;\n  icon: React.ReactNode;\n  description?: string;\n  badge?: string | number;\n  disabled?: boolean;\n}\n\nconst navigationItems: NavigationItem[] = [\n  {\n    id: 'restaurant',\n    label: 'Restaurant Profile',\n    description: 'Basic restaurant information and branding',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 21v-7.5a.75.75 0 01.75-.75h3a.75.75 0 01.75.75V21m-4.5 0H2.36m11.14 0H18m0 0h3.64m-1.39 0V9.349m-16.5 11.65V9.35m0 0a3.001 3.001 0 003.75-.615A2.993 2.993 0 009.75 9.75c.896 0 1.7-.393 2.25-1.016a2.993 2.993 0 00.75-2.09.75.75 0 01.75-.75c.896 0 1.7-.393 2.25-1.016a3.001 3.001 0 003.75.614m-16.5 0a3.004 3.004 0 01-.621-4.72L4.318 3.44A1.5 1.5 0 015.378 3h13.243a1.5 1.5 0 011.06.44l1.19 1.189a3.004 3.004 0 01-.621 4.72m-13.5 8.65h3.75a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75H6.75a.75.75 0 00-.75.75v3.75c0 .415.336.75.75.75z\" />\n      </svg>\n    )\n  },\n  {\n    id: 'users',\n    label: 'Users & Roles',\n    description: 'Manage team members and access levels',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z\" />\n      </svg>\n    ),\n    badge: '3'\n  },\n  {\n    id: 'permissions',\n    label: 'Permissions',\n    description: 'Configure role-based access control',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z\" />\n      </svg>\n    )\n  },\n  {\n    id: 'devices',\n    label: 'Devices',\n    description: 'POS terminals, KDS screens, and printers',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25\" />\n      </svg>\n    ),\n    badge: '1'\n  },\n  {\n    id: 'payments',\n    label: 'Payments',\n    description: 'Payment gateways and processing',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z\" />\n      </svg>\n    )\n  },\n  {\n    id: 'integrations',\n    label: 'Integrations',\n    description: 'Third-party services and APIs',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244\" />\n      </svg>\n    )\n  },\n  {\n    id: 'taxes',\n    label: 'Tax & Gratuity',\n    description: 'Tax rules and tip configurations',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 15.75V18m-7.5-6.75h.008v.008H8.25v-.008zm0 2.25h.008v.008H8.25V13.5zm0 2.25h.008v.008H8.25v-.008zm0 2.25h.008V18H8.25v-.008zM12 9l3-3m0 0l-3-3m3 3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    )\n  },\n  {\n    id: 'security',\n    label: 'Security',\n    description: 'Access control and data protection',\n    icon: (\n      <svg className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 12.75L11.25 15 15 9.75m-3-7.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285z\" />\n      </svg>\n    )\n  }\n];\n\nexport function SettingsNavigation() {\n  const router = useRouter();\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n  const [expandedItems, setExpandedItems] = useState<string[]>([]);\n\n  const activeTab = searchParams.get('tab') || 'restaurant';\n\n  const handleTabChange = (tabId: string) => {\n    const params = new URLSearchParams(searchParams);\n    params.set('tab', tabId);\n    router.push(`${pathname}?${params.toString()}`);\n  };\n\n  const toggleExpanded = (itemId: string) => {\n    setExpandedItems(prev => \n      prev.includes(itemId)\n        ? prev.filter(id => id !== itemId)\n        : [...prev, itemId]\n    );\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg border border-gray-200 shadow-sm\">\n      <div className=\"p-4 border-b border-gray-200\">\n        <h3 className=\"text-sm font-medium text-gray-900\">Settings</h3>\n        <p className=\"text-xs text-gray-500 mt-1\">\n          Configure your restaurant\n        </p>\n      </div>\n      \n      <nav className=\"p-2\" aria-label=\"Settings navigation\">\n        <ul className=\"space-y-1\">\n          {navigationItems.map((item) => (\n            <li key={item.id}>\n              <button\n                onClick={() => handleTabChange(item.id)}\n                disabled={item.disabled}\n                className={cn(\n                  'group flex w-full items-center gap-3 rounded-md px-3 py-2 text-sm font-medium transition-colors',\n                  'hover:bg-gray-50 hover:text-gray-900',\n                  'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-inset',\n                  activeTab === item.id\n                    ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700'\n                    : 'text-gray-700',\n                  item.disabled && 'opacity-50 cursor-not-allowed'\n                )}\n              >\n                <span className={cn(\n                  'flex-shrink-0',\n                  activeTab === item.id ? 'text-blue-700' : 'text-gray-400 group-hover:text-gray-600'\n                )}>\n                  {item.icon}\n                </span>\n                \n                <div className=\"flex-1 text-left\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"truncate\">{item.label}</span>\n                    {item.badge && (\n                      <span className={cn(\n                        'ml-2 inline-flex items-center justify-center rounded-full text-xs font-medium',\n                        'h-5 min-w-[20px] px-1.5',\n                        activeTab === item.id\n                          ? 'bg-blue-100 text-blue-700'\n                          : 'bg-gray-100 text-gray-600'\n                      )}>\n                        {item.badge}\n                      </span>\n                    )}\n                  </div>\n                  \n                  {item.description && (\n                    <p className={cn(\n                      'text-xs mt-1 truncate',\n                      activeTab === item.id ? 'text-blue-600' : 'text-gray-500'\n                    )}>\n                      {item.description}\n                    </p>\n                  )}\n                </div>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      \n      {/* Quick Actions */}\n      <div className=\"p-3 border-t border-gray-200\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500\">\n          <span>Quick Actions</span>\n          <button\n            onClick={() => handleTabChange('restaurant')}\n            className=\"text-blue-600 hover:text-blue-700 font-medium\"\n          >\n            Import/Export\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}","'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '../ui/button';\nimport { Modal } from '../ui/modal';\nimport { ImportExportControls } from './import-export-controls';\nimport { SettingsValidation } from './settings-validation';\n\ninterface SettingsHeaderProps {\n  showValidation?: boolean;\n}\n\nexport function SettingsHeader({ showValidation = true }: SettingsHeaderProps) {\n  const [showImportExport, setShowImportExport] = useState(false);\n  const [showValidationModal, setShowValidationModal] = useState(false);\n  const [lastSaved, setLastSaved] = useState<Date | null>(null);\n  const [isDirty, setIsDirty] = useState(false);\n\n  // Listen for form changes across the app\n  useEffect(() => {\n    const handleFormChange = () => setIsDirty(true);\n    const handleFormSave = () => {\n      setIsDirty(false);\n      setLastSaved(new Date());\n    };\n\n    // In a real app, you might use a context or state management library\n    window.addEventListener('settings:change', handleFormChange);\n    window.addEventListener('settings:save', handleFormSave);\n\n    return () => {\n      window.removeEventListener('settings:change', handleFormChange);\n      window.removeEventListener('settings:save', handleFormSave);\n    };\n  }, []);\n\n  const handleValidateSettings = () => {\n    setShowValidationModal(true);\n  };\n\n  const handleSaveAll = async () => {\n    // In a real app, this would save all pending changes\n    console.log('Saving all settings...');\n    window.dispatchEvent(new CustomEvent('settings:save'));\n  };\n\n  return (\n    <>\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"mx-auto max-w-screen-2xl px-4 py-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            {/* Status Indicator */}\n            <div className=\"flex items-center gap-4\">\n              <div className=\"flex items-center gap-2\">\n                {isDirty ? (\n                  <>\n                    <div className=\"h-2 w-2 bg-amber-400 rounded-full animate-pulse\" />\n                    <span className=\"text-sm text-amber-700 font-medium\">\n                      Unsaved changes\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"h-2 w-2 bg-green-400 rounded-full\" />\n                    <span className=\"text-sm text-gray-600\">\n                      All changes saved\n                      {lastSaved && (\n                        <span className=\"ml-2 text-gray-500\">\n                          • Last saved {lastSaved.toLocaleTimeString()}\n                        </span>\n                      )}\n                    </span>\n                  </>\n                )}\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex items-center gap-2\">\n              {showValidation && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={handleValidateSettings}\n                >\n                  <svg\n                    className=\"h-4 w-4 mr-2\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1.5\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                    />\n                  </svg>\n                  Validate\n                </Button>\n              )}\n\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setShowImportExport(true)}\n              >\n                <svg\n                  className=\"h-4 w-4 mr-2\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth=\"1.5\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5\"\n                  />\n                </svg>\n                Import/Export\n              </Button>\n\n              {isDirty && (\n                <Button\n                  size=\"sm\"\n                  onClick={handleSaveAll}\n                  className=\"bg-blue-600 hover:bg-blue-700\"\n                >\n                  <svg\n                    className=\"h-4 w-4 mr-2\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1.5\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M16.5 3.75V4.5L21 12l-4.5 7.5V20.25L12 16.5l-4.5 3.75V20.25L3 12l4.5-7.5V3.75L12 7.5l4.5-3.75z\"\n                    />\n                  </svg>\n                  Save All\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Import/Export Modal */}\n      <Modal\n        isOpen={showImportExport}\n        onClose={() => setShowImportExport(false)}\n        title=\"Import & Export Settings\"\n        size=\"lg\"\n      >\n        <ImportExportControls\n          onClose={() => setShowImportExport(false)}\n        />\n      </Modal>\n\n      {/* Validation Modal */}\n      <Modal\n        isOpen={showValidationModal}\n        onClose={() => setShowValidationModal(false)}\n        title=\"Settings Validation\"\n        size=\"md\"\n      >\n        <SettingsValidation\n          onClose={() => setShowValidationModal(false)}\n        />\n      </Modal>\n    </>\n  );\n}","'use client';\n\nimport { useState, useTransition } from 'react';\nimport { useFormState } from 'react-dom';\nimport { Button } from '../ui/button';\nimport { Input } from '../ui/input';\nimport { exportSettingsAction, importSettingsAction } from '../../app/settings/actions';\n\ninterface ImportExportControlsProps {\n  onClose?: () => void;\n}\n\nconst initialState = {\n  success: false,\n  message: '',\n  errors: {}\n};\n\nexport function ImportExportControls({ onClose }: ImportExportControlsProps) {\n  const [exportState, exportAction] = useFormState(exportSettingsAction, initialState);\n  const [importState, importAction] = useFormState(importSettingsAction, initialState);\n  const [isExporting, startExportTransition] = useTransition();\n  const [isImporting, startImportTransition] = useTransition();\n  const [activeTab, setActiveTab] = useState<'export' | 'import'>('export');\n\n  const settingSections = [\n    { id: 'restaurant', label: 'Restaurant Profile', description: 'Basic restaurant information and branding' },\n    { id: 'users', label: 'Users & Roles', description: 'User accounts and role definitions' },\n    { id: 'devices', label: 'Devices', description: 'POS terminals and hardware configuration' },\n    { id: 'payments', label: 'Payment Configuration', description: 'Payment gateways and processing settings' },\n    { id: 'integrations', label: 'Integrations', description: 'Third-party service connections' },\n    { id: 'taxes', label: 'Tax Configuration', description: 'Tax rules and calculations' },\n    { id: 'gratuity', label: 'Gratuity Settings', description: 'Tip configuration and distribution' },\n    { id: 'security', label: 'Security Settings', description: 'Access control and data protection' }\n  ];\n\n  const handleExport = (formData: FormData) => {\n    startExportTransition(() => {\n      exportAction(formData);\n    });\n  };\n\n  const handleImport = (formData: FormData) => {\n    startImportTransition(() => {\n      importAction(formData);\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Tabs */}\n      <div className=\"border-b border-gray-200\">\n        <nav className=\"-mb-px flex space-x-8\">\n          <button\n            onClick={() => setActiveTab('export')}\n            className={`py-2 px-1 border-b-2 font-medium text-sm ${\n              activeTab === 'export'\n                ? 'border-blue-500 text-blue-600'\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            Export Settings\n          </button>\n          <button\n            onClick={() => setActiveTab('import')}\n            className={`py-2 px-1 border-b-2 font-medium text-sm ${\n              activeTab === 'import'\n                ? 'border-blue-500 text-blue-600'\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n          >\n            Import Settings\n          </button>\n        </nav>\n      </div>\n\n      {/* Export Tab */}\n      {activeTab === 'export' && (\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Export Settings</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Download your restaurant settings as a backup file.\n            </p>\n          </div>\n\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.currentTarget);\n              handleExport(formData);\n            }}\n            className=\"space-y-6\"\n          >\n            {/* Section Selection */}\n            <div>\n              <label className=\"text-base font-medium text-gray-900\">\n                Select sections to export\n              </label>\n              <p className=\"text-sm text-gray-500\">Choose which settings to include in the export.</p>\n              <div className=\"mt-3 space-y-2\">\n                {settingSections.map((section) => (\n                  <div key={section.id} className=\"relative flex items-start\">\n                    <div className=\"flex items-center h-5\">\n                      <input\n                        id={`export-${section.id}`}\n                        name=\"sections\"\n                        value={section.id}\n                        type=\"checkbox\"\n                        defaultChecked\n                        className=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded\"\n                      />\n                    </div>\n                    <div className=\"ml-3 text-sm\">\n                      <label htmlFor={`export-${section.id}`} className=\"font-medium text-gray-700\">\n                        {section.label}\n                      </label>\n                      <p className=\"text-gray-500\">{section.description}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Export Options */}\n            <div>\n              <label className=\"text-base font-medium text-gray-900\">\n                Export options\n              </label>\n              <div className=\"mt-3 space-y-3\">\n                <div className=\"relative flex items-start\">\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id=\"includeCredentials\"\n                      name=\"includeCredentials\"\n                      type=\"checkbox\"\n                      className=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label htmlFor=\"includeCredentials\" className=\"font-medium text-gray-700\">\n                      Include sensitive credentials\n                    </label>\n                    <p className=\"text-gray-500\">Export API keys, passwords, and other sensitive data</p>\n                  </div>\n                </div>\n\n                <div className=\"relative flex items-start\">\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id=\"encryptSensitiveData\"\n                      name=\"encryptSensitiveData\"\n                      type=\"checkbox\"\n                      defaultChecked\n                      className=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label htmlFor=\"encryptSensitiveData\" className=\"font-medium text-gray-700\">\n                      Encrypt sensitive data\n                    </label>\n                    <p className=\"text-gray-500\">Protect sensitive information with encryption</p>\n                  </div>\n                </div>\n\n                <div className=\"relative flex items-start\">\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id=\"compression\"\n                      name=\"compression\"\n                      type=\"checkbox\"\n                      defaultChecked\n                      className=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label htmlFor=\"compression\" className=\"font-medium text-gray-700\">\n                      Compress export file\n                    </label>\n                    <p className=\"text-gray-500\">Reduce file size with compression</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Format Selection */}\n            <div>\n              <label htmlFor=\"format\" className=\"block text-sm font-medium text-gray-700\">\n                Export format\n              </label>\n              <select\n                id=\"format\"\n                name=\"format\"\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 rounded-md\"\n              >\n                <option value=\"json\">JSON (recommended)</option>\n                <option value=\"yaml\">YAML</option>\n                <option value=\"csv\">CSV (limited)</option>\n              </select>\n            </div>\n\n            {/* Export Results */}\n            {exportState.success && exportState.data?.downloadUrl && (\n              <div className=\"rounded-md bg-green-50 p-4\">\n                <div className=\"flex\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-green-800\">Export completed</h3>\n                    <div className=\"mt-2\">\n                      <Button\n                        as=\"a\"\n                        href={exportState.data.downloadUrl}\n                        download\n                        size=\"sm\"\n                        className=\"bg-green-600 hover:bg-green-700\"\n                      >\n                        Download Settings Backup\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Actions */}\n            <div className=\"flex justify-end gap-3\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={onClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={isExporting}\n                className=\"bg-blue-600 hover:bg-blue-700\"\n              >\n                {isExporting ? 'Exporting...' : 'Export Settings'}\n              </Button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Import Tab */}\n      {activeTab === 'import' && (\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Import Settings</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">\n              Restore settings from a previously exported backup file.\n            </p>\n          </div>\n\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              const formData = new FormData(e.currentTarget);\n              handleImport(formData);\n            }}\n            className=\"space-y-6\"\n          >\n            {/* File Upload */}\n            <div>\n              <label htmlFor=\"file\" className=\"block text-sm font-medium text-gray-700\">\n                Settings backup file\n              </label>\n              <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n                <div className=\"space-y-1 text-center\">\n                  <svg\n                    className=\"mx-auto h-12 w-12 text-gray-400\"\n                    stroke=\"currentColor\"\n                    fill=\"none\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <path\n                      d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                  <div className=\"flex text-sm text-gray-600\">\n                    <label\n                      htmlFor=\"file\"\n                      className=\"relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-blue-500\"\n                    >\n                      <span>Upload a file</span>\n                      <input\n                        id=\"file\"\n                        name=\"file\"\n                        type=\"file\"\n                        accept=\".json,.yaml,.yml\"\n                        className=\"sr-only\"\n                        required\n                      />\n                    </label>\n                    <p className=\"pl-1\">or drag and drop</p>\n                  </div>\n                  <p className=\"text-xs text-gray-500\">JSON, YAML up to 10MB</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Import Options */}\n            <div>\n              <label className=\"text-base font-medium text-gray-900\">\n                Import options\n              </label>\n              <div className=\"mt-3 space-y-3\">\n                <div className=\"relative flex items-start\">\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id=\"overwrite\"\n                      name=\"overwrite\"\n                      type=\"checkbox\"\n                      className=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label htmlFor=\"overwrite\" className=\"font-medium text-gray-700\">\n                      Overwrite existing settings\n                    </label>\n                    <p className=\"text-gray-500\">Replace current settings with imported values</p>\n                  </div>\n                </div>\n\n                <div className=\"relative flex items-start\">\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id=\"createBackup\"\n                      name=\"createBackup\"\n                      type=\"checkbox\"\n                      defaultChecked\n                      className=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label htmlFor=\"createBackup\" className=\"font-medium text-gray-700\">\n                      Create backup before import\n                    </label>\n                    <p className=\"text-gray-500\">Automatically backup current settings first</p>\n                  </div>\n                </div>\n\n                <div className=\"relative flex items-start\">\n                  <div className=\"flex items-center h-5\">\n                    <input\n                      id=\"validateIntegrity\"\n                      name=\"validateIntegrity\"\n                      type=\"checkbox\"\n                      defaultChecked\n                      className=\"focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded\"\n                    />\n                  </div>\n                  <div className=\"ml-3 text-sm\">\n                    <label htmlFor=\"validateIntegrity\" className=\"font-medium text-gray-700\">\n                      Validate file integrity\n                    </label>\n                    <p className=\"text-gray-500\">Check file for corruption or tampering</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Import Results */}\n            {importState.success && (\n              <div className=\"rounded-md bg-green-50 p-4\">\n                <div className=\"flex\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-green-800\">\n                      {importState.message || 'Settings imported successfully'}\n                    </h3>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {importState.errors && Object.keys(importState.errors).length > 0 && (\n              <div className=\"rounded-md bg-red-50 p-4\">\n                <div className=\"flex\">\n                  <div className=\"flex-shrink-0\">\n                    <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                    </svg>\n                  </div>\n                  <div className=\"ml-3\">\n                    <h3 className=\"text-sm font-medium text-red-800\">Import failed</h3>\n                    <div className=\"mt-2 text-sm text-red-700\">\n                      <p>{importState.message || 'There was an error importing the settings file.'}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {/* Actions */}\n            <div className=\"flex justify-end gap-3\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={onClose}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"submit\"\n                disabled={isImporting}\n                className=\"bg-blue-600 hover:bg-blue-700\"\n              >\n                {isImporting ? 'Importing...' : 'Import Settings'}\n              </Button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}","/* __next_internal_action_entry_do_not_use__ [{\"60bc57e7b2098bd8d4d43006fac2204dfa87905b82\":\"exportSettingsAction\"},\"app/settings/actions.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var exportSettingsAction=/*#__PURE__*/createServerReference(\"60bc57e7b2098bd8d4d43006fac2204dfa87905b82\",callServer,void 0,findSourceMapURL,\"exportSettingsAction\");","/* __next_internal_action_entry_do_not_use__ [{\"60721bbaffe7c87c4aa00c2df8c33e7461f267baec\":\"importSettingsAction\"},\"app/settings/actions.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var importSettingsAction=/*#__PURE__*/createServerReference(\"60721bbaffe7c87c4aa00c2df8c33e7461f267baec\",callServer,void 0,findSourceMapURL,\"importSettingsAction\");","/* __next_internal_action_entry_do_not_use__ [{\"000488c989d9380f6f891498ca4f75a053595b8930\":\"validateSettingsAction\"},\"app/settings/actions.ts\",\"\"] */\"use turbopack no side effects\";import{createServerReference,callServer,findSourceMapURL}from\"private-next-rsc-action-client-wrapper\";export var validateSettingsAction=/*#__PURE__*/createServerReference(\"000488c989d9380f6f891498ca4f75a053595b8930\",callServer,void 0,findSourceMapURL,\"validateSettingsAction\");","'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '../ui/button';\nimport { validateSettingsAction } from '../../app/settings/actions';\n\ninterface SettingsValidationProps {\n  onClose?: () => void;\n}\n\ninterface ValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n}\n\nexport function SettingsValidation({ onClose }: SettingsValidationProps) {\n  const [isValidating, setIsValidating] = useState(false);\n  const [validationResult, setValidationResult] = useState<ValidationResult | null>(null);\n  const [lastValidated, setLastValidated] = useState<Date | null>(null);\n\n  const runValidation = async () => {\n    setIsValidating(true);\n    try {\n      const result = await validateSettingsAction();\n      if (result.success && result.data) {\n        setValidationResult(result.data);\n        setLastValidated(new Date());\n      }\n    } catch (error) {\n      console.error('Validation error:', error);\n    } finally {\n      setIsValidating(false);\n    }\n  };\n\n  // Run validation on component mount\n  useEffect(() => {\n    runValidation();\n  }, []);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-gray-900\">Settings Validation</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            Check your settings for errors and potential issues\n          </p>\n        </div>\n        <Button\n          onClick={runValidation}\n          disabled={isValidating}\n          size=\"sm\"\n          variant=\"outline\"\n        >\n          {isValidating ? 'Validating...' : 'Re-validate'}\n        </Button>\n      </div>\n\n      {/* Validation Status */}\n      {isValidating ? (\n        <div className=\"text-center py-8\">\n          <svg\n            className=\"animate-spin h-8 w-8 text-blue-600 mx-auto\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n          </svg>\n          <p className=\"mt-2 text-sm text-gray-500\">\n            Validating your settings...\n          </p>\n        </div>\n      ) : validationResult ? (\n        <div className=\"space-y-6\">\n          {/* Overall Status */}\n          <div className={`rounded-lg p-4 ${\n            validationResult.isValid \n              ? 'bg-green-50 border border-green-200' \n              : 'bg-red-50 border border-red-200'\n          }`}>\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                {validationResult.isValid ? (\n                  <svg\n                    className=\"h-5 w-5 text-green-400\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                ) : (\n                  <svg\n                    className=\"h-5 w-5 text-red-400\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                )}\n              </div>\n              <div className=\"ml-3\">\n                <h3 className={`text-sm font-medium ${\n                  validationResult.isValid ? 'text-green-800' : 'text-red-800'\n                }`}>\n                  {validationResult.isValid \n                    ? 'Settings validation passed' \n                    : 'Settings validation failed'\n                  }\n                </h3>\n                <p className={`mt-1 text-sm ${\n                  validationResult.isValid ? 'text-green-700' : 'text-red-700'\n                }`}>\n                  {validationResult.isValid\n                    ? 'Your restaurant settings are configured correctly.'\n                    : `Found ${validationResult.errors.length} error(s) that need attention.`\n                  }\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Validation Summary */}\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"bg-white p-4 rounded-lg border border-gray-200 text-center\">\n              <div className={`text-2xl font-bold ${\n                validationResult.isValid ? 'text-green-600' : 'text-red-600'\n              }`}>\n                {validationResult.isValid ? '✓' : '✗'}\n              </div>\n              <div className=\"text-sm text-gray-500 mt-1\">Overall Status</div>\n            </div>\n            \n            <div className=\"bg-white p-4 rounded-lg border border-gray-200 text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {validationResult.errors.length}\n              </div>\n              <div className=\"text-sm text-gray-500 mt-1\">Errors</div>\n            </div>\n            \n            <div className=\"bg-white p-4 rounded-lg border border-gray-200 text-center\">\n              <div className=\"text-2xl font-bold text-amber-600\">\n                {validationResult.warnings.length}\n              </div>\n              <div className=\"text-sm text-gray-500 mt-1\">Warnings</div>\n            </div>\n          </div>\n\n          {/* Errors */}\n          {validationResult.errors.length > 0 && (\n            <div>\n              <h4 className=\"text-lg font-medium text-gray-900 mb-3\">\n                Errors ({validationResult.errors.length})\n              </h4>\n              <div className=\"space-y-2\">\n                {validationResult.errors.map((error, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-start p-3 bg-red-50 border border-red-200 rounded-lg\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <svg\n                        className=\"h-5 w-5 text-red-400 mt-0.5\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm font-medium text-red-800\">\n                        {error}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Warnings */}\n          {validationResult.warnings.length > 0 && (\n            <div>\n              <h4 className=\"text-lg font-medium text-gray-900 mb-3\">\n                Warnings ({validationResult.warnings.length})\n              </h4>\n              <div className=\"space-y-2\">\n                {validationResult.warnings.map((warning, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-start p-3 bg-amber-50 border border-amber-200 rounded-lg\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <svg\n                        className=\"h-5 w-5 text-amber-400 mt-0.5\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\n                          clipRule=\"evenodd\"\n                        />\n                      </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                      <p className=\"text-sm font-medium text-amber-800\">\n                        {warning}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Last Validated */}\n          {lastValidated && (\n            <div className=\"text-sm text-gray-500 text-center\">\n              Last validated: {lastValidated.toLocaleString()}\n            </div>\n          )}\n        </div>\n      ) : null}\n\n      {/* Actions */}\n      <div className=\"flex justify-end gap-3 pt-6 border-t border-gray-200\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onClose}\n        >\n          Close\n        </Button>\n        {validationResult && !validationResult.isValid && (\n          <Button\n            onClick={() => {\n              // In a real app, this might navigate to the first error\n              onClose?.();\n            }}\n            className=\"bg-red-600 hover:bg-red-700\"\n          >\n            Fix Issues\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}