{"version":3,"sources":["turbopack:///[project]/components/ui/skeleton.tsx","turbopack:///[project]/app/inventory/loading.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface SkeletonProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'circular' | 'text' | 'card';\n  width?: string | number;\n  height?: string | number;\n  lines?: number; // For text variant\n  animate?: boolean;\n}\n\nfunction Skeleton({\n  className,\n  variant = 'default',\n  width,\n  height,\n  lines = 1,\n  animate = true,\n  style,\n  ...props\n}: SkeletonProps) {\n  const baseClasses = cn(\n    'bg-muted',\n    animate && 'animate-pulse',\n    {\n      'rounded-md': variant === 'default' || variant === 'card',\n      'rounded-full': variant === 'circular',\n      'rounded': variant === 'text',\n    },\n    className\n  );\n\n  const inlineStyles = {\n    width: width,\n    height: height,\n    ...style,\n  };\n\n  // For text variant with multiple lines\n  if (variant === 'text' && lines > 1) {\n    return (\n      <div className=\"space-y-2\" {...props}>\n        {Array.from({ length: lines }, (_, i) => (\n          <div\n            key={i}\n            className={cn(\n              baseClasses,\n              i === lines - 1 ? 'w-3/4' : 'w-full' // Last line is shorter\n            )}\n            style={{\n              height: height || '1rem',\n              width: i === lines - 1 ? '75%' : width || '100%',\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Default height based on variant\n  const getDefaultHeight = () => {\n    if (height) return height;\n    switch (variant) {\n      case 'text':\n        return '1rem';\n      case 'circular':\n        return '2.5rem';\n      case 'card':\n        return '8rem';\n      default:\n        return '1.25rem';\n    }\n  };\n\n  // Default width based on variant\n  const getDefaultWidth = () => {\n    if (width) return width;\n    switch (variant) {\n      case 'circular':\n        return '2.5rem';\n      default:\n        return '100%';\n    }\n  };\n\n  const defaultHeight = getDefaultHeight();\n  const defaultWidth = getDefaultWidth();\n\n  return (\n    <div\n      className={baseClasses}\n      style={{\n        ...inlineStyles,\n        height: inlineStyles.height || defaultHeight,\n        width: inlineStyles.width || defaultWidth,\n      }}\n      {...props}\n    />\n  );\n}\n\n// Predefined skeleton patterns for common use cases\nexport function SkeletonCard({ className, ...props }: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      <Skeleton variant=\"card\" height=\"12rem\" />\n      <div className=\"space-y-2\">\n        <Skeleton height=\"1.25rem\" />\n        <Skeleton height=\"1rem\" width=\"80%\" />\n      </div>\n    </div>\n  );\n}\n\nexport function SkeletonAvatar({ \n  className, \n  size = 'md',\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { size?: 'sm' | 'md' | 'lg' }) {\n  const sizeMap = {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem',\n  };\n  \n  return (\n    <Skeleton\n      variant=\"circular\"\n      width={sizeMap[size]}\n      height={sizeMap[size]}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonText({ \n  lines = 3,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <Skeleton\n      variant=\"text\"\n      lines={lines}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { rows?: number; columns?: number }) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex space-x-4\">\n        {Array.from({ length: columns }, (_, i) => (\n          <Skeleton key={`header-${i}`} height=\"1.5rem\" className=\"flex-1\" />\n        ))}\n      </div>\n      {/* Rows */}\n      {Array.from({ length: rows }, (_, rowIndex) => (\n        <div key={`row-${rowIndex}`} className=\"flex space-x-4\">\n          {Array.from({ length: columns }, (_, colIndex) => (\n            <Skeleton key={`cell-${rowIndex}-${colIndex}`} height=\"1.25rem\" className=\"flex-1\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport { Skeleton };","import { Skeleton } from '@/components/ui/skeleton';\n\nexport default function InventoryLoading() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Skeleton */}\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n        <div className=\"space-y-2\">\n          <Skeleton className=\"h-8 w-48\" />\n          <Skeleton className=\"h-4 w-64\" />\n        </div>\n        <div className=\"flex space-x-2\">\n          <Skeleton className=\"h-10 w-32\" />\n          <Skeleton className=\"h-10 w-24\" />\n        </div>\n      </div>\n\n      {/* Metrics Cards Skeleton */}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {[1, 2, 3, 4].map((i) => (\n          <div key={i} className=\"bg-white p-6 rounded-lg border border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-2\">\n                <Skeleton className=\"h-4 w-24\" />\n                <Skeleton className=\"h-8 w-16\" />\n              </div>\n              <Skeleton className=\"h-8 w-8 rounded-full\" />\n            </div>\n            <div className=\"mt-4\">\n              <Skeleton className=\"h-3 w-full\" />\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Filters Skeleton */}\n      <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          <Skeleton className=\"h-10 w-full sm:w-64\" />\n          <Skeleton className=\"h-10 w-full sm:w-40\" />\n          <Skeleton className=\"h-10 w-full sm:w-40\" />\n          <Skeleton className=\"h-10 w-full sm:w-32\" />\n        </div>\n      </div>\n\n      {/* Table Skeleton */}\n      <div className=\"bg-white rounded-lg border border-gray-200\">\n        {/* Table Header */}\n        <div className=\"p-4 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <Skeleton className=\"h-6 w-32\" />\n            <Skeleton className=\"h-6 w-20\" />\n          </div>\n        </div>\n\n        {/* Table Rows */}\n        <div className=\"divide-y divide-gray-200\">\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => (\n            <div key={i} className=\"p-4\">\n              <div className=\"flex items-center space-x-4\">\n                {/* Image */}\n                <Skeleton className=\"h-12 w-12 rounded-lg flex-shrink-0\" />\n                \n                {/* Content */}\n                <div className=\"flex-1 space-y-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <Skeleton className=\"h-5 w-48\" />\n                    <Skeleton className=\"h-4 w-16\" />\n                  </div>\n                  <div className=\"flex items-center space-x-4\">\n                    <Skeleton className=\"h-4 w-24\" />\n                    <Skeleton className=\"h-4 w-20\" />\n                    <Skeleton className=\"h-4 w-32\" />\n                  </div>\n                </div>\n\n                {/* Actions */}\n                <div className=\"flex space-x-2 flex-shrink-0\">\n                  <Skeleton className=\"h-8 w-8\" />\n                  <Skeleton className=\"h-8 w-8\" />\n                  <Skeleton className=\"h-8 w-8\" />\n                </div>\n              </div>\n\n              {/* Mobile Stock Info */}\n              <div className=\"mt-3 sm:hidden\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex space-x-4\">\n                    <Skeleton className=\"h-4 w-16\" />\n                    <Skeleton className=\"h-4 w-20\" />\n                  </div>\n                  <Skeleton className=\"h-6 w-16 rounded-full\" />\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Table Footer */}\n        <div className=\"p-4 border-t border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <Skeleton className=\"h-4 w-32\" />\n            <div className=\"flex space-x-2\">\n              <Skeleton className=\"h-8 w-20\" />\n              <Skeleton className=\"h-8 w-8\" />\n              <Skeleton className=\"h-8 w-8\" />\n              <Skeleton className=\"h-8 w-8\" />\n              <Skeleton className=\"h-8 w-20\" />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Quick Actions Skeleton (Mobile) */}\n      <div className=\"fixed bottom-20 right-4 sm:hidden\">\n        <Skeleton className=\"h-14 w-14 rounded-full\" />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}