{"version":3,"sources":["turbopack:///[project]/components/accessibility/announcer.tsx","turbopack:///[project]/components/accessibility/keyboard-shortcuts.tsx","turbopack:///[project]/lib/accessibility/keyboard.ts","turbopack:///[project]/components/accessibility/focus-trap.tsx","turbopack:///[project]/components/accessibility/skip-link.tsx"],"sourcesContent":["/**\n * Live Region Announcer Component\n * \n * Provides live region announcements for screen readers to communicate\n * dynamic content changes and important updates.\n */\n\n'use client';\n\nimport React from 'react';\nimport { cn } from '@/utils';\n\n/**\n * Announcement priority levels\n */\nexport type AnnouncementPriority = 'polite' | 'assertive' | 'off';\n\n/**\n * Announcement configuration\n */\nexport interface Announcement {\n  id: string;\n  message: string;\n  priority: AnnouncementPriority;\n  timestamp: number;\n  duration?: number;\n  persistent?: boolean;\n}\n\n/**\n * Announcer component props\n */\nexport interface AnnouncerProps {\n  /** Live region politeness level */\n  priority?: AnnouncementPriority;\n  /** Whether to show announcements visually (for debugging) */\n  visible?: boolean;\n  /** Maximum number of announcements to keep in history */\n  maxHistory?: number;\n  /** Additional CSS classes */\n  className?: string;\n}\n\n/**\n * Announcement context for managing global announcements\n */\nexport interface AnnouncerContextValue {\n  announce: (message: string, priority?: AnnouncementPriority, duration?: number) => string;\n  announceImmediate: (message: string, priority?: AnnouncementPriority) => void;\n  clearAnnouncements: () => void;\n  getHistory: () => Announcement[];\n  isActive: boolean;\n}\n\nconst AnnouncerContext = React.createContext<AnnouncerContextValue | null>(null);\n\n/**\n * Hook to use the announcer context\n */\nexport const useAnnouncer = (): AnnouncerContextValue => {\n  const context = React.useContext(AnnouncerContext);\n  if (!context) {\n    throw new Error('useAnnouncer must be used within an AnnouncerProvider');\n  }\n  return context;\n};\n\n/**\n * Individual Live Region Component\n */\nconst LiveRegion: React.FC<{\n  priority: AnnouncementPriority;\n  visible?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n}> = ({ priority, visible, className, children }) => {\n  if (priority === 'off') {\n    return null;\n  }\n\n  return (\n    <div\n      role={priority === 'assertive' ? 'alert' : 'status'}\n      aria-live={priority}\n      aria-atomic=\"true\"\n      aria-relevant=\"additions text\"\n      className={cn(\n        // Screen reader only by default\n        !visible && 'sr-only',\n        // Visible styles for debugging\n        visible && [\n          'fixed bottom-4 right-4 z-50',\n          'bg-background border rounded-lg p-4 shadow-lg',\n          'max-w-sm text-sm',\n          priority === 'assertive' && 'border-red-200 bg-red-50 text-red-900',\n          priority === 'polite' && 'border-blue-200 bg-blue-50 text-blue-900',\n        ],\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\n/**\n * Core Announcer Component\n */\nexport const Announcer: React.FC<AnnouncerProps> = ({\n  priority = 'polite',\n  visible = false,\n  maxHistory = 50,\n  className,\n}) => {\n  const [politeContent, setPoliteContent] = React.useState<string>('');\n  const [assertiveContent, setAssertiveContent] = React.useState<string>('');\n  const [history, setHistory] = React.useState<Announcement[]>([]);\n  const timeoutRefs = React.useRef<Map<string, NodeJS.Timeout>>(new Map());\n  const idCounter = React.useRef(0);\n\n  /**\n   * Generate unique announcement ID\n   */\n  const generateId = React.useCallback(() => {\n    return `announcement-${++idCounter.current}-${Date.now()}`;\n  }, []);\n\n  /**\n   * Add announcement to history\n   */\n  const addToHistory = React.useCallback((announcement: Announcement) => {\n    setHistory(prev => {\n      const updated = [announcement, ...prev];\n      return updated.slice(0, maxHistory);\n    });\n  }, [maxHistory]);\n\n  /**\n   * Clear announcement after duration\n   */\n  const clearAnnouncementAfterDelay = React.useCallback((\n    id: string,\n    priority: AnnouncementPriority,\n    duration: number\n  ) => {\n    const timeoutId = setTimeout(() => {\n      if (priority === 'assertive') {\n        setAssertiveContent('');\n      } else if (priority === 'polite') {\n        setPoliteContent('');\n      }\n      timeoutRefs.current.delete(id);\n    }, duration);\n\n    timeoutRefs.current.set(id, timeoutId);\n  }, []);\n\n  /**\n   * Make an announcement\n   */\n  const announce = React.useCallback((\n    message: string,\n    announcementPriority: AnnouncementPriority = priority,\n    duration = 3000\n  ): string => {\n    if (!message.trim() || announcementPriority === 'off') {\n      return '';\n    }\n\n    const id = generateId();\n    const announcement: Announcement = {\n      id,\n      message: message.trim(),\n      priority: announcementPriority,\n      timestamp: Date.now(),\n      duration,\n      persistent: duration === 0,\n    };\n\n    // Add to history\n    addToHistory(announcement);\n\n    // Clear previous content first (for better screen reader support)\n    if (announcementPriority === 'assertive') {\n      setAssertiveContent('');\n      setTimeout(() => setAssertiveContent(message), 50);\n    } else if (announcementPriority === 'polite') {\n      setPoliteContent('');\n      setTimeout(() => setPoliteContent(message), 50);\n    }\n\n    // Clear announcement after duration (if not persistent)\n    if (duration > 0) {\n      clearAnnouncementAfterDelay(id, announcementPriority, duration);\n    }\n\n    return id;\n  }, [priority, generateId, addToHistory, clearAnnouncementAfterDelay]);\n\n  /**\n   * Make an immediate announcement (no delay)\n   */\n  const announceImmediate = React.useCallback((\n    message: string,\n    announcementPriority: AnnouncementPriority = priority\n  ) => {\n    if (!message.trim() || announcementPriority === 'off') {\n      return;\n    }\n\n    if (announcementPriority === 'assertive') {\n      setAssertiveContent(message);\n    } else if (announcementPriority === 'polite') {\n      setPoliteContent(message);\n    }\n\n    const announcement: Announcement = {\n      id: generateId(),\n      message: message.trim(),\n      priority: announcementPriority,\n      timestamp: Date.now(),\n      duration: 0,\n      persistent: true,\n    };\n\n    addToHistory(announcement);\n  }, [priority, generateId, addToHistory]);\n\n  /**\n   * Clear all announcements\n   */\n  const clearAnnouncements = React.useCallback(() => {\n    setPoliteContent('');\n    setAssertiveContent('');\n    \n    // Clear all timeouts\n    timeoutRefs.current.forEach(timeout => clearTimeout(timeout));\n    timeoutRefs.current.clear();\n  }, []);\n\n  /**\n   * Get announcement history\n   */\n  const getHistory = React.useCallback(() => {\n    return [...history];\n  }, [history]);\n\n  // Cleanup timeouts on unmount\n  React.useEffect(() => {\n    return () => {\n      timeoutRefs.current.forEach(timeout => clearTimeout(timeout));\n    };\n  }, []);\n\n  return (\n    <div className={cn('announcer-container', className)}>\n      {/* Polite live region */}\n      <LiveRegion\n        priority=\"polite\"\n        visible={visible}\n        className=\"polite-announcer\"\n      >\n        {politeContent}\n      </LiveRegion>\n\n      {/* Assertive live region */}\n      <LiveRegion\n        priority=\"assertive\"\n        visible={visible}\n        className=\"assertive-announcer\"\n      >\n        {assertiveContent}\n      </LiveRegion>\n\n      {/* Status region for form feedback */}\n      <div\n        role=\"status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        className=\"sr-only\"\n        id=\"form-status-announcer\"\n      />\n\n      {/* Log region for activity updates */}\n      <div\n        role=\"log\"\n        aria-live=\"polite\"\n        aria-atomic=\"false\"\n        className=\"sr-only\"\n        id=\"activity-log-announcer\"\n      />\n    </div>\n  );\n};\n\n/**\n * Announcer Provider Component\n */\nexport const AnnouncerProvider: React.FC<{\n  maxHistory?: number;\n  debugMode?: boolean;\n  children: React.ReactNode;\n}> = ({ maxHistory = 50, debugMode = false, children }) => {\n  const announcerRef = React.useRef<{\n    announce: (message: string, priority?: AnnouncementPriority, duration?: number) => string;\n    announceImmediate: (message: string, priority?: AnnouncementPriority) => void;\n    clearAnnouncements: () => void;\n    getHistory: () => Announcement[];\n  } | null>(null);\n\n  const [history, setHistory] = React.useState<Announcement[]>([]);\n  const [isActive, setIsActive] = React.useState(true);\n\n  const contextValue: AnnouncerContextValue = React.useMemo(() => ({\n    announce: (message: string, priority?: AnnouncementPriority, duration?: number) => {\n      if (!isActive || !announcerRef.current) return '';\n      return announcerRef.current.announce(message, priority, duration);\n    },\n    announceImmediate: (message: string, priority?: AnnouncementPriority) => {\n      if (!isActive || !announcerRef.current) return;\n      announcerRef.current.announceImmediate(message, priority);\n    },\n    clearAnnouncements: () => {\n      if (!announcerRef.current) return;\n      announcerRef.current.clearAnnouncements();\n    },\n    getHistory: () => {\n      if (!announcerRef.current) return [];\n      return announcerRef.current.getHistory();\n    },\n    isActive,\n  }), [isActive]);\n\n  return (\n    <AnnouncerContext.Provider value={contextValue}>\n      {children}\n      <AnnouncerImpl\n        ref={announcerRef}\n        maxHistory={maxHistory}\n        visible={debugMode}\n        onHistoryChange={setHistory}\n      />\n    </AnnouncerContext.Provider>\n  );\n};\n\n/**\n * Internal Announcer Implementation\n */\nconst AnnouncerImpl = React.forwardRef<{\n  announce: (message: string, priority?: AnnouncementPriority, duration?: number) => string;\n  announceImmediate: (message: string, priority?: AnnouncementPriority) => void;\n  clearAnnouncements: () => void;\n  getHistory: () => Announcement[];\n}, {\n  maxHistory: number;\n  visible: boolean;\n  onHistoryChange: (history: Announcement[]) => void;\n}>(({ maxHistory, visible, onHistoryChange }, ref) => {\n  const [politeContent, setPoliteContent] = React.useState('');\n  const [assertiveContent, setAssertiveContent] = React.useState('');\n  const [history, setHistory] = React.useState<Announcement[]>([]);\n  const timeoutRefs = React.useRef<Map<string, NodeJS.Timeout>>(new Map());\n  const idCounter = React.useRef(0);\n\n  const generateId = () => `announcement-${++idCounter.current}-${Date.now()}`;\n\n  const addToHistory = React.useCallback((announcement: Announcement) => {\n    setHistory(prev => {\n      const updated = [announcement, ...prev].slice(0, maxHistory);\n      onHistoryChange(updated);\n      return updated;\n    });\n  }, [maxHistory, onHistoryChange]);\n\n  const announce = React.useCallback((\n    message: string,\n    priority: AnnouncementPriority = 'polite',\n    duration = 3000\n  ): string => {\n    if (!message.trim() || priority === 'off') return '';\n\n    const id = generateId();\n    const announcement: Announcement = {\n      id,\n      message: message.trim(),\n      priority,\n      timestamp: Date.now(),\n      duration,\n      persistent: duration === 0,\n    };\n\n    addToHistory(announcement);\n\n    if (priority === 'assertive') {\n      setAssertiveContent('');\n      setTimeout(() => setAssertiveContent(message), 50);\n    } else if (priority === 'polite') {\n      setPoliteContent('');\n      setTimeout(() => setPoliteContent(message), 50);\n    }\n\n    if (duration > 0) {\n      const timeoutId = setTimeout(() => {\n        if (priority === 'assertive') {\n          setAssertiveContent('');\n        } else if (priority === 'polite') {\n          setPoliteContent('');\n        }\n        timeoutRefs.current.delete(id);\n      }, duration);\n      timeoutRefs.current.set(id, timeoutId);\n    }\n\n    return id;\n  }, [addToHistory]);\n\n  const announceImmediate = React.useCallback((\n    message: string,\n    priority: AnnouncementPriority = 'polite'\n  ) => {\n    if (!message.trim() || priority === 'off') return;\n\n    if (priority === 'assertive') {\n      setAssertiveContent(message);\n    } else if (priority === 'polite') {\n      setPoliteContent(message);\n    }\n\n    const announcement: Announcement = {\n      id: generateId(),\n      message: message.trim(),\n      priority,\n      timestamp: Date.now(),\n      duration: 0,\n      persistent: true,\n    };\n\n    addToHistory(announcement);\n  }, [addToHistory]);\n\n  const clearAnnouncements = React.useCallback(() => {\n    setPoliteContent('');\n    setAssertiveContent('');\n    timeoutRefs.current.forEach(timeout => clearTimeout(timeout));\n    timeoutRefs.current.clear();\n  }, []);\n\n  const getHistory = React.useCallback(() => [...history], [history]);\n\n  React.useImperativeHandle(ref, () => ({\n    announce,\n    announceImmediate,\n    clearAnnouncements,\n    getHistory,\n  }), [announce, announceImmediate, clearAnnouncements, getHistory]);\n\n  React.useEffect(() => {\n    return () => {\n      timeoutRefs.current.forEach(timeout => clearTimeout(timeout));\n    };\n  }, []);\n\n  return (\n    <>\n      <LiveRegion priority=\"polite\" visible={visible}>\n        {politeContent}\n      </LiveRegion>\n      <LiveRegion priority=\"assertive\" visible={visible}>\n        {assertiveContent}\n      </LiveRegion>\n      <div role=\"status\" aria-live=\"polite\" aria-atomic=\"true\" className=\"sr-only\" />\n      <div role=\"log\" aria-live=\"polite\" aria-atomic=\"false\" className=\"sr-only\" />\n    </>\n  );\n});\n\nAnnouncerImpl.displayName = 'AnnouncerImpl';\n\n/**\n * Form Announcer Component\n * \n * Specialized component for form validation announcements\n */\nexport const FormAnnouncer: React.FC<{\n  errors?: Record<string, string>;\n  success?: string;\n  className?: string;\n}> = ({ errors, success, className }) => {\n  const { announce } = useAnnouncer();\n  const prevErrorsRef = React.useRef<Record<string, string>>();\n\n  // Announce form errors\n  React.useEffect(() => {\n    if (!errors) return;\n\n    const currentErrors = Object.values(errors);\n    const prevErrors = Object.values(prevErrorsRef.current || {});\n\n    if (currentErrors.length > 0 && JSON.stringify(currentErrors) !== JSON.stringify(prevErrors)) {\n      const message = currentErrors.length === 1 \n        ? `Form error: ${currentErrors[0]}`\n        : `Form has ${currentErrors.length} errors: ${currentErrors.join(', ')}`;\n      \n      announce(message, 'assertive', 5000);\n    }\n\n    prevErrorsRef.current = errors;\n  }, [errors, announce]);\n\n  // Announce success message\n  React.useEffect(() => {\n    if (success) {\n      announce(success, 'polite', 3000);\n    }\n  }, [success, announce]);\n\n  return (\n    <div\n      role=\"status\"\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n      className={cn('sr-only', className)}\n      id=\"form-announcer\"\n    />\n  );\n};\n\n/**\n * Loading Announcer Component\n * \n * Specialized component for loading state announcements\n */\nexport const LoadingAnnouncer: React.FC<{\n  isLoading?: boolean;\n  loadingMessage?: string;\n  completeMessage?: string;\n  className?: string;\n}> = ({\n  isLoading,\n  loadingMessage = 'Loading',\n  completeMessage = 'Loading complete',\n  className,\n}) => {\n  const { announce } = useAnnouncer();\n  const prevLoadingRef = React.useRef<boolean>();\n\n  React.useEffect(() => {\n    if (isLoading !== prevLoadingRef.current) {\n      if (isLoading) {\n        announce(loadingMessage, 'polite', 0);\n      } else if (prevLoadingRef.current) {\n        announce(completeMessage, 'polite');\n      }\n      prevLoadingRef.current = isLoading;\n    }\n  }, [isLoading, loadingMessage, completeMessage, announce]);\n\n  return (\n    <div\n      role=\"status\"\n      aria-live=\"polite\"\n      aria-atomic=\"true\"\n      className={cn('sr-only', className)}\n      id=\"loading-announcer\"\n    />\n  );\n};\n\n/**\n * Route Change Announcer Component\n * \n * Announces navigation changes for single-page applications\n */\nexport const RouteChangeAnnouncer: React.FC<{\n  currentPath?: string;\n  pageTitle?: string;\n  className?: string;\n}> = ({ currentPath, pageTitle, className }) => {\n  const { announce } = useAnnouncer();\n  const prevPathRef = React.useRef<string>();\n\n  React.useEffect(() => {\n    if (currentPath && currentPath !== prevPathRef.current) {\n      const message = pageTitle \n        ? `Navigated to ${pageTitle}`\n        : `Page changed to ${currentPath}`;\n      \n      announce(message, 'assertive', 2000);\n      prevPathRef.current = currentPath;\n    }\n  }, [currentPath, pageTitle, announce]);\n\n  return (\n    <div\n      role=\"status\"\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      className={cn('sr-only', className)}\n      id=\"route-announcer\"\n    />\n  );\n};\n\n/**\n * Utility hook for common announcements\n */\nexport const useCommonAnnouncements = () => {\n  const { announce } = useAnnouncer();\n\n  return React.useMemo(() => ({\n    announceSuccess: (message: string) => announce(`Success: ${message}`, 'polite'),\n    announceError: (message: string) => announce(`Error: ${message}`, 'assertive'),\n    announceWarning: (message: string) => announce(`Warning: ${message}`, 'polite'),\n    announceInfo: (message: string) => announce(message, 'polite'),\n    announceNavigation: (destination: string) => announce(`Navigated to ${destination}`, 'assertive'),\n    announceAction: (action: string) => announce(action, 'polite'),\n  }), [announce]);\n};\n\n// Export default as AnnouncerProvider\nexport default AnnouncerProvider;","/**\n * Keyboard Shortcuts Component\n * \n * Provides discoverable keyboard shortcuts overlay and management\n * to enhance keyboard navigation accessibility.\n */\n\n'use client';\n\nimport React from 'react';\nimport { cn } from '@/utils';\nimport { FocusTrap } from './focus-trap';\n\n/**\n * Keyboard shortcut definition\n */\nexport interface KeyboardShortcut {\n  /** Unique identifier */\n  id: string;\n  /** Shortcut key combination */\n  keys: string[];\n  /** Human-readable description */\n  description: string;\n  /** Category for grouping */\n  category?: string;\n  /** Handler function */\n  handler: (event: KeyboardEvent) => void;\n  /** Whether shortcut is enabled */\n  enabled?: boolean;\n  /** Whether shortcut should prevent default */\n  preventDefault?: boolean;\n  /** Context where shortcut is active */\n  context?: string;\n  /** Platform-specific variations */\n  platforms?: {\n    mac?: string[];\n    windows?: string[];\n    linux?: string[];\n  };\n}\n\n/**\n * Shortcut category definition\n */\nexport interface ShortcutCategory {\n  id: string;\n  name: string;\n  description?: string;\n  priority?: number;\n}\n\n/**\n * Keyboard shortcuts provider props\n */\nexport interface KeyboardShortcutsProviderProps {\n  shortcuts?: KeyboardShortcut[];\n  categories?: ShortcutCategory[];\n  globalShortcuts?: boolean;\n  showHelp?: boolean;\n  helpKey?: string[];\n  children: React.ReactNode;\n}\n\n/**\n * Keyboard shortcuts context\n */\nexport interface KeyboardShortcutsContextValue {\n  shortcuts: KeyboardShortcut[];\n  categories: ShortcutCategory[];\n  registerShortcut: (shortcut: KeyboardShortcut) => () => void;\n  unregisterShortcut: (id: string) => void;\n  updateShortcut: (id: string, updates: Partial<KeyboardShortcut>) => void;\n  toggleShortcut: (id: string, enabled?: boolean) => void;\n  showHelp: () => void;\n  hideHelp: () => void;\n  isHelpVisible: boolean;\n}\n\nconst KeyboardShortcutsContext = React.createContext<KeyboardShortcutsContextValue | null>(null);\n\n/**\n * Hook to use keyboard shortcuts\n */\nexport const useKeyboardShortcuts = (): KeyboardShortcutsContextValue => {\n  const context = React.useContext(KeyboardShortcutsContext);\n  if (!context) {\n    throw new Error('useKeyboardShortcuts must be used within a KeyboardShortcutsProvider');\n  }\n  return context;\n};\n\n/**\n * Default categories\n */\nconst DEFAULT_CATEGORIES: ShortcutCategory[] = [\n  { id: 'navigation', name: 'Navigation', priority: 1 },\n  { id: 'actions', name: 'Actions', priority: 2 },\n  { id: 'editing', name: 'Editing', priority: 3 },\n  { id: 'view', name: 'View', priority: 4 },\n  { id: 'accessibility', name: 'Accessibility', priority: 5 },\n];\n\n/**\n * Default global shortcuts\n */\nconst DEFAULT_SHORTCUTS: KeyboardShortcut[] = [\n  {\n    id: 'skip-to-main',\n    keys: ['Alt', '1'],\n    description: 'Skip to main content',\n    category: 'navigation',\n    handler: () => {\n      const main = document.querySelector('#main-content, main, [role=\"main\"]');\n      if (main) {\n        (main as HTMLElement).focus();\n        main.scrollIntoView({ behavior: 'smooth' });\n      }\n    },\n  },\n  {\n    id: 'skip-to-nav',\n    keys: ['Alt', '2'],\n    description: 'Skip to navigation',\n    category: 'navigation',\n    handler: () => {\n      const nav = document.querySelector('#main-navigation, nav, [role=\"navigation\"]');\n      if (nav) {\n        (nav as HTMLElement).focus();\n        nav.scrollIntoView({ behavior: 'smooth' });\n      }\n    },\n  },\n  {\n    id: 'toggle-help',\n    keys: ['Alt', '/'],\n    description: 'Show keyboard shortcuts help',\n    category: 'accessibility',\n    handler: () => {\n      // This will be handled by the provider\n    },\n  },\n  {\n    id: 'close-modal',\n    keys: ['Escape'],\n    description: 'Close modal or dialog',\n    category: 'navigation',\n    handler: () => {\n      const modal = document.querySelector('[role=\"dialog\"]:not([aria-hidden=\"true\"])');\n      if (modal) {\n        const closeButton = modal.querySelector('[data-close], [aria-label*=\"close\" i]');\n        if (closeButton) {\n          (closeButton as HTMLElement).click();\n        }\n      }\n    },\n  },\n];\n\n/**\n * Utility to detect platform\n */\nconst getPlatform = (): 'mac' | 'windows' | 'linux' => {\n  if (typeof window === 'undefined') return 'windows';\n  \n  const platform = window.navigator.platform.toLowerCase();\n  if (platform.includes('mac')) return 'mac';\n  if (platform.includes('linux')) return 'linux';\n  return 'windows';\n};\n\n/**\n * Utility to normalize key combination\n */\nconst normalizeKeys = (keys: string[]): string[] => {\n  const platform = getPlatform();\n  const keyMap: Record<string, string> = {\n    'Mod': platform === 'mac' ? 'Cmd' : 'Ctrl',\n    'Command': 'Cmd',\n    'Control': 'Ctrl',\n    'Option': 'Alt',\n    'Meta': platform === 'mac' ? 'Cmd' : 'Win',\n  };\n\n  return keys.map(key => keyMap[key] || key);\n};\n\n/**\n * Utility to format key combination for display\n */\nconst formatKeyCombo = (keys: string[]): string => {\n  const normalized = normalizeKeys(keys);\n  const platform = getPlatform();\n  \n  if (platform === 'mac') {\n    return normalized\n      .map(key => {\n        const symbols: Record<string, string> = {\n          'Cmd': '⌘',\n          'Ctrl': '⌃',\n          'Alt': '⌥',\n          'Shift': '⇧',\n          'Enter': '↵',\n          'Space': '␣',\n          'Tab': '⇥',\n          'Escape': '⎋',\n          'Backspace': '⌫',\n          'Delete': '⌦',\n          'ArrowUp': '↑',\n          'ArrowDown': '↓',\n          'ArrowLeft': '←',\n          'ArrowRight': '→',\n        };\n        return symbols[key] || key;\n      })\n      .join('');\n  }\n  \n  return normalized.join(' + ');\n};\n\n/**\n * Utility to check if key combination matches event\n */\nconst matchesKeyEvent = (keys: string[], event: KeyboardEvent): boolean => {\n  const normalized = normalizeKeys(keys);\n  const eventKeys: string[] = [];\n  \n  if (event.ctrlKey) eventKeys.push('Ctrl');\n  if (event.altKey) eventKeys.push('Alt');\n  if (event.shiftKey) eventKeys.push('Shift');\n  if (event.metaKey) eventKeys.push(getPlatform() === 'mac' ? 'Cmd' : 'Win');\n  \n  eventKeys.push(event.key);\n  \n  return eventKeys.length === normalized.length && \n         eventKeys.every(key => normalized.includes(key));\n};\n\n/**\n * Keyboard Shortcuts Provider Component\n */\nexport const KeyboardShortcutsProvider: React.FC<KeyboardShortcutsProviderProps> = ({\n  shortcuts: initialShortcuts = [],\n  categories: initialCategories = DEFAULT_CATEGORIES,\n  globalShortcuts = true,\n  showHelp: showHelpProp = true,\n  helpKey = ['Alt', '/'],\n  children,\n}) => {\n  const [shortcuts, setShortcuts] = React.useState<KeyboardShortcut[]>(() => [\n    ...(globalShortcuts ? DEFAULT_SHORTCUTS : []),\n    ...initialShortcuts,\n  ]);\n  const [categories] = React.useState<ShortcutCategory[]>(initialCategories);\n  const [isHelpVisible, setIsHelpVisible] = React.useState(false);\n\n  /**\n   * Register a new shortcut\n   */\n  const registerShortcut = React.useCallback((shortcut: KeyboardShortcut) => {\n    setShortcuts(prev => {\n      const existing = prev.find(s => s.id === shortcut.id);\n      if (existing) {\n        console.warn(`Shortcut with id \"${shortcut.id}\" already exists`);\n        return prev;\n      }\n      return [...prev, { ...shortcut, enabled: shortcut.enabled !== false }];\n    });\n\n    // Return unregister function\n    return () => unregisterShortcut(shortcut.id);\n  }, []);\n\n  /**\n   * Unregister a shortcut\n   */\n  const unregisterShortcut = React.useCallback((id: string) => {\n    setShortcuts(prev => prev.filter(s => s.id !== id));\n  }, []);\n\n  /**\n   * Update a shortcut\n   */\n  const updateShortcut = React.useCallback((id: string, updates: Partial<KeyboardShortcut>) => {\n    setShortcuts(prev => \n      prev.map(shortcut => \n        shortcut.id === id ? { ...shortcut, ...updates } : shortcut\n      )\n    );\n  }, []);\n\n  /**\n   * Toggle shortcut enabled state\n   */\n  const toggleShortcut = React.useCallback((id: string, enabled?: boolean) => {\n    setShortcuts(prev => \n      prev.map(shortcut => \n        shortcut.id === id \n          ? { ...shortcut, enabled: enabled !== undefined ? enabled : !shortcut.enabled }\n          : shortcut\n      )\n    );\n  }, []);\n\n  /**\n   * Show help overlay\n   */\n  const showHelp = React.useCallback(() => {\n    setIsHelpVisible(true);\n  }, []);\n\n  /**\n   * Hide help overlay\n   */\n  const hideHelp = React.useCallback(() => {\n    setIsHelpVisible(false);\n  }, []);\n\n  /**\n   * Handle keyboard events\n   */\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      // Check for help shortcut first\n      if (showHelpProp && matchesKeyEvent(helpKey, event)) {\n        event.preventDefault();\n        setIsHelpVisible(prev => !prev);\n        return;\n      }\n\n      // Skip if help is visible (let help handle its own shortcuts)\n      if (isHelpVisible) return;\n\n      // Find matching shortcut\n      const matchingShortcut = shortcuts.find(shortcut => \n        shortcut.enabled !== false && \n        matchesKeyEvent(shortcut.keys, event)\n      );\n\n      if (matchingShortcut) {\n        if (matchingShortcut.preventDefault !== false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n        try {\n          matchingShortcut.handler(event);\n        } catch (error) {\n          console.error(`Error executing shortcut \"${matchingShortcut.id}\":`, error);\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, true);\n    return () => document.removeEventListener('keydown', handleKeyDown, true);\n  }, [shortcuts, isHelpVisible, showHelpProp, helpKey]);\n\n  const contextValue: KeyboardShortcutsContextValue = React.useMemo(() => ({\n    shortcuts,\n    categories,\n    registerShortcut,\n    unregisterShortcut,\n    updateShortcut,\n    toggleShortcut,\n    showHelp,\n    hideHelp,\n    isHelpVisible,\n  }), [\n    shortcuts,\n    categories,\n    registerShortcut,\n    unregisterShortcut,\n    updateShortcut,\n    toggleShortcut,\n    showHelp,\n    hideHelp,\n    isHelpVisible,\n  ]);\n\n  return (\n    <KeyboardShortcutsContext.Provider value={contextValue}>\n      {children}\n      {showHelpProp && (\n        <KeyboardShortcutsHelp\n          isVisible={isHelpVisible}\n          onClose={hideHelp}\n        />\n      )}\n    </KeyboardShortcutsContext.Provider>\n  );\n};\n\n/**\n * Keyboard Shortcuts Help Component\n */\nconst KeyboardShortcutsHelp: React.FC<{\n  isVisible: boolean;\n  onClose: () => void;\n}> = ({ isVisible, onClose }) => {\n  const { shortcuts, categories } = useKeyboardShortcuts();\n\n  // Group shortcuts by category\n  const groupedShortcuts = React.useMemo(() => {\n    const groups: Record<string, KeyboardShortcut[]> = {};\n    \n    shortcuts\n      .filter(shortcut => shortcut.enabled !== false)\n      .forEach(shortcut => {\n        const categoryId = shortcut.category || 'other';\n        if (!groups[categoryId]) {\n          groups[categoryId] = [];\n        }\n        groups[categoryId].push(shortcut);\n      });\n\n    return groups;\n  }, [shortcuts]);\n\n  // Sort categories by priority\n  const sortedCategories = React.useMemo(() => {\n    const categoriesWithShortcuts = categories.filter(cat => \n      groupedShortcuts[cat.id] && groupedShortcuts[cat.id].length > 0\n    );\n    \n    return categoriesWithShortcuts.sort((a, b) => (a.priority || 999) - (b.priority || 999));\n  }, [categories, groupedShortcuts]);\n\n  if (!isVisible) return null;\n\n  return (\n    <FocusTrap\n      active={isVisible}\n      config={{\n        autoFocus: true,\n        restoreFocus: true,\n        preventScroll: true,\n        initialFocus: '[data-close-help]',\n      }}\n      onEscapeAttempt={onClose}\n    >\n      <div\n        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"shortcuts-title\"\n        aria-describedby=\"shortcuts-description\"\n        onClick={(e) => e.target === e.currentTarget && onClose()}\n      >\n        <div className=\"bg-background rounded-lg shadow-xl border max-w-2xl w-full max-h-[90vh] overflow-hidden mx-4\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b\">\n            <div>\n              <h2 id=\"shortcuts-title\" className=\"text-xl font-semibold\">\n                Keyboard Shortcuts\n              </h2>\n              <p id=\"shortcuts-description\" className=\"text-sm text-muted-foreground mt-1\">\n                Navigate faster with these keyboard shortcuts\n              </p>\n            </div>\n            <button\n              data-close-help\n              onClick={onClose}\n              className=\"p-2 rounded-md hover:bg-muted focus:outline-none focus:ring-2 focus:ring-ring\"\n              aria-label=\"Close shortcuts help\"\n            >\n              <span aria-hidden=\"true\" className=\"text-xl\">×</span>\n            </button>\n          </div>\n\n          {/* Content */}\n          <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-8rem)]\">\n            <div className=\"space-y-6\">\n              {sortedCategories.map(category => {\n                const categoryShortcuts = groupedShortcuts[category.id];\n                if (!categoryShortcuts?.length) return null;\n\n                return (\n                  <div key={category.id}>\n                    <h3 className=\"text-lg font-medium mb-3 text-foreground\">\n                      {category.name}\n                    </h3>\n                    {category.description && (\n                      <p className=\"text-sm text-muted-foreground mb-3\">\n                        {category.description}\n                      </p>\n                    )}\n                    <div className=\"space-y-2\">\n                      {categoryShortcuts.map(shortcut => (\n                        <div\n                          key={shortcut.id}\n                          className=\"flex items-center justify-between py-2 px-3 rounded-md hover:bg-muted/50\"\n                        >\n                          <span className=\"text-sm text-foreground\">\n                            {shortcut.description}\n                          </span>\n                          <div className=\"flex items-center gap-1\">\n                            {shortcut.keys.map((key, index) => (\n                              <React.Fragment key={index}>\n                                {index > 0 && (\n                                  <span className=\"text-xs text-muted-foreground mx-1\">\n                                    +\n                                  </span>\n                                )}\n                                <kbd className=\"px-2 py-1 text-xs bg-muted border border-border rounded\">\n                                  {formatKeyCombo([key])}\n                                </kbd>\n                              </React.Fragment>\n                            ))}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n\n              {/* Other shortcuts (uncategorized) */}\n              {groupedShortcuts.other && (\n                <div>\n                  <h3 className=\"text-lg font-medium mb-3\">Other</h3>\n                  <div className=\"space-y-2\">\n                    {groupedShortcuts.other.map(shortcut => (\n                      <div\n                        key={shortcut.id}\n                        className=\"flex items-center justify-between py-2 px-3 rounded-md hover:bg-muted/50\"\n                      >\n                        <span className=\"text-sm\">{shortcut.description}</span>\n                        <kbd className=\"px-2 py-1 text-xs bg-muted border border-border rounded\">\n                          {formatKeyCombo(shortcut.keys)}\n                        </kbd>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Footer */}\n          <div className=\"p-6 border-t bg-muted/50\">\n            <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n              <span>Press {formatKeyCombo(['Escape'])} to close</span>\n              <span>{shortcuts.filter(s => s.enabled !== false).length} shortcuts available</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </FocusTrap>\n  );\n};\n\n/**\n * Hook to register component-specific shortcuts\n */\nexport const useShortcut = (\n  keys: string[],\n  handler: (event: KeyboardEvent) => void,\n  options: {\n    description: string;\n    category?: string;\n    enabled?: boolean;\n    preventDefault?: boolean;\n    context?: string;\n  }\n) => {\n  const { registerShortcut } = useKeyboardShortcuts();\n  const shortcutId = React.useRef<string>();\n\n  React.useEffect(() => {\n    const id = `shortcut-${Math.random().toString(36).substr(2, 9)}`;\n    shortcutId.current = id;\n\n    const unregister = registerShortcut({\n      id,\n      keys,\n      handler,\n      ...options,\n    });\n\n    return unregister;\n  }, [keys.join(','), handler, options.description, options.category, options.enabled, options.preventDefault, options.context, registerShortcut]);\n};\n\n/**\n * Shortcut Display Component\n * \n * Shows a keyboard shortcut inline\n */\nexport const ShortcutDisplay: React.FC<{\n  keys: string[];\n  className?: string;\n}> = ({ keys, className }) => {\n  return (\n    <div className={cn('flex items-center gap-1', className)}>\n      {keys.map((key, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && (\n            <span className=\"text-xs text-muted-foreground\">+</span>\n          )}\n          <kbd className=\"px-1.5 py-0.5 text-xs bg-muted border border-border rounded\">\n            {formatKeyCombo([key])}\n          </kbd>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\n/**\n * Shortcuts Summary Component\n * \n * Shows a compact list of available shortcuts\n */\nexport const ShortcutsSummary: React.FC<{\n  categoryId?: string;\n  limit?: number;\n  className?: string;\n}> = ({ categoryId, limit, className }) => {\n  const { shortcuts } = useKeyboardShortcuts();\n\n  const relevantShortcuts = React.useMemo(() => {\n    let filtered = shortcuts.filter(s => s.enabled !== false);\n    \n    if (categoryId) {\n      filtered = filtered.filter(s => s.category === categoryId);\n    }\n    \n    if (limit) {\n      filtered = filtered.slice(0, limit);\n    }\n    \n    return filtered;\n  }, [shortcuts, categoryId, limit]);\n\n  if (relevantShortcuts.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={cn('space-y-1', className)}>\n      {relevantShortcuts.map(shortcut => (\n        <div key={shortcut.id} className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-muted-foreground\">{shortcut.description}</span>\n          <ShortcutDisplay keys={shortcut.keys} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Export default as KeyboardShortcutsProvider\nexport default KeyboardShortcutsProvider;","/**\n * Keyboard Navigation Helpers\n * \n * Provides comprehensive keyboard navigation utilities for WCAG 2.1 AA compliance\n * including focus management, keyboard traps, and navigation patterns.\n */\n\n/**\n * Keyboard navigation configuration\n */\nexport interface KeyboardConfig {\n  /** Enable roving tabindex pattern */\n  rovingTabindex?: boolean;\n  /** Enable arrow key navigation */\n  arrowKeys?: boolean;\n  /** Enable Escape key handling */\n  escapeKey?: boolean;\n  /** Enable Home/End key navigation */\n  homeEndKeys?: boolean;\n  /** Trap focus within container */\n  trapFocus?: boolean;\n}\n\n/**\n * Focus management utilities\n */\nexport class FocusManager {\n  private focusHistory: HTMLElement[] = [];\n  private maxHistorySize = 10;\n\n  /**\n   * Save current focus to history\n   */\n  saveFocus(element?: HTMLElement): void {\n    const activeElement = element || (document.activeElement as HTMLElement);\n    if (activeElement && activeElement !== document.body) {\n      this.focusHistory.unshift(activeElement);\n      if (this.focusHistory.length > this.maxHistorySize) {\n        this.focusHistory.pop();\n      }\n    }\n  }\n\n  /**\n   * Restore previous focus\n   */\n  restoreFocus(): boolean {\n    const previousElement = this.focusHistory.shift();\n    if (previousElement && document.contains(previousElement)) {\n      previousElement.focus();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Clear focus history\n   */\n  clearHistory(): void {\n    this.focusHistory = [];\n  }\n\n  /**\n   * Get focus history\n   */\n  getHistory(): HTMLElement[] {\n    return [...this.focusHistory];\n  }\n\n  /**\n   * Focus first focusable element in container\n   */\n  focusFirst(container: HTMLElement): boolean {\n    const firstFocusable = this.getFocusableElements(container)[0];\n    if (firstFocusable) {\n      firstFocusable.focus();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Focus last focusable element in container\n   */\n  focusLast(container: HTMLElement): boolean {\n    const focusableElements = this.getFocusableElements(container);\n    const lastFocusable = focusableElements[focusableElements.length - 1];\n    if (lastFocusable) {\n      lastFocusable.focus();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Focus next focusable element\n   */\n  focusNext(container: HTMLElement, currentElement?: HTMLElement): boolean {\n    const focusableElements = this.getFocusableElements(container);\n    const current = currentElement || (document.activeElement as HTMLElement);\n    const currentIndex = focusableElements.indexOf(current);\n    \n    if (currentIndex >= 0 && currentIndex < focusableElements.length - 1) {\n      focusableElements[currentIndex + 1].focus();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Focus previous focusable element\n   */\n  focusPrevious(container: HTMLElement, currentElement?: HTMLElement): boolean {\n    const focusableElements = this.getFocusableElements(container);\n    const current = currentElement || (document.activeElement as HTMLElement);\n    const currentIndex = focusableElements.indexOf(current);\n    \n    if (currentIndex > 0) {\n      focusableElements[currentIndex - 1].focus();\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get all focusable elements within a container\n   */\n  getFocusableElements(container: HTMLElement): HTMLElement[] {\n    const focusableSelectors = [\n      'a[href]',\n      'button:not([disabled])',\n      'textarea:not([disabled])',\n      'input:not([disabled]):not([type=\"hidden\"])',\n      'select:not([disabled])',\n      '[tabindex]:not([tabindex=\"-1\"])',\n      '[contenteditable=\"true\"]',\n      'summary',\n      'iframe',\n      'object',\n      'embed',\n      'area[href]',\n      'audio[controls]',\n      'video[controls]',\n      '[draggable=\"true\"]'\n    ];\n\n    const elements = Array.from(\n      container.querySelectorAll(focusableSelectors.join(','))\n    ) as HTMLElement[];\n\n    return elements.filter(element => {\n      // Check if element is visible and not disabled\n      return this.isElementFocusable(element);\n    });\n  }\n\n  /**\n   * Check if an element is focusable\n   */\n  isElementFocusable(element: HTMLElement): boolean {\n    // Check if element is visible\n    if (element.offsetWidth === 0 && element.offsetHeight === 0) {\n      return false;\n    }\n\n    // Check if element or parents have display: none or visibility: hidden\n    let current: HTMLElement | null = element;\n    while (current) {\n      const style = window.getComputedStyle(current);\n      if (style.display === 'none' || style.visibility === 'hidden') {\n        return false;\n      }\n      current = current.parentElement;\n    }\n\n    // Check for disabled state\n    if ('disabled' in element && (element as any).disabled) {\n      return false;\n    }\n\n    // Check for negative tabindex (unless it's -1 which can still be programmatically focused)\n    const tabindex = element.getAttribute('tabindex');\n    if (tabindex && parseInt(tabindex, 10) < -1) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n/**\n * Focus trap implementation for modals and dialogs\n */\nexport class FocusTrap {\n  private container: HTMLElement;\n  private firstFocusable: HTMLElement | null = null;\n  private lastFocusable: HTMLElement | null = null;\n  private previousActiveElement: HTMLElement | null = null;\n  private focusManager: FocusManager;\n  private keydownHandler: (event: KeyboardEvent) => void;\n\n  constructor(container: HTMLElement, focusManager: FocusManager) {\n    this.container = container;\n    this.focusManager = focusManager;\n    this.keydownHandler = this.handleKeydown.bind(this);\n  }\n\n  /**\n   * Activate focus trap\n   */\n  activate(): void {\n    this.previousActiveElement = document.activeElement as HTMLElement;\n    this.updateFocusableElements();\n    \n    // Focus first element or container\n    if (this.firstFocusable) {\n      this.firstFocusable.focus();\n    } else if (this.container.tabIndex >= 0) {\n      this.container.focus();\n    }\n\n    // Add keydown listener\n    document.addEventListener('keydown', this.keydownHandler, true);\n    \n    // Set aria-hidden on siblings\n    this.setSiblingAriaHidden(true);\n  }\n\n  /**\n   * Deactivate focus trap\n   */\n  deactivate(): void {\n    document.removeEventListener('keydown', this.keydownHandler, true);\n    \n    // Restore aria-hidden on siblings\n    this.setSiblingAriaHidden(false);\n    \n    // Restore previous focus\n    if (this.previousActiveElement && document.contains(this.previousActiveElement)) {\n      this.previousActiveElement.focus();\n    }\n  }\n\n  /**\n   * Update focusable elements within trap\n   */\n  private updateFocusableElements(): void {\n    const focusableElements = this.focusManager.getFocusableElements(this.container);\n    this.firstFocusable = focusableElements[0] || null;\n    this.lastFocusable = focusableElements[focusableElements.length - 1] || null;\n  }\n\n  /**\n   * Handle keydown events for focus trap\n   */\n  private handleKeydown(event: KeyboardEvent): void {\n    if (event.key !== 'Tab') return;\n\n    // Update focusable elements (in case DOM changed)\n    this.updateFocusableElements();\n\n    if (!this.firstFocusable && !this.lastFocusable) {\n      // No focusable elements, prevent tabbing\n      event.preventDefault();\n      return;\n    }\n\n    if (event.shiftKey) {\n      // Shift + Tab (backward)\n      if (document.activeElement === this.firstFocusable) {\n        event.preventDefault();\n        this.lastFocusable?.focus();\n      }\n    } else {\n      // Tab (forward)\n      if (document.activeElement === this.lastFocusable) {\n        event.preventDefault();\n        this.firstFocusable?.focus();\n      }\n    }\n  }\n\n  /**\n   * Set aria-hidden on sibling elements\n   */\n  private setSiblingAriaHidden(hidden: boolean): void {\n    const siblings = Array.from(document.body.children) as HTMLElement[];\n    siblings.forEach(sibling => {\n      if (sibling !== this.container && !this.container.contains(sibling)) {\n        if (hidden) {\n          sibling.setAttribute('aria-hidden', 'true');\n          sibling.setAttribute('data-focus-trap-hidden', 'true');\n        } else if (sibling.getAttribute('data-focus-trap-hidden')) {\n          sibling.removeAttribute('aria-hidden');\n          sibling.removeAttribute('data-focus-trap-hidden');\n        }\n      }\n    });\n  }\n}\n\n/**\n * Roving tabindex implementation for complex widgets\n */\nexport class RovingTabindex {\n  private container: HTMLElement;\n  private items: HTMLElement[] = [];\n  private currentIndex = 0;\n  private orientation: 'horizontal' | 'vertical' | 'both' = 'both';\n  private wrap = true;\n  private keydownHandler: (event: KeyboardEvent) => void;\n\n  constructor(\n    container: HTMLElement,\n    options: {\n      orientation?: 'horizontal' | 'vertical' | 'both';\n      wrap?: boolean;\n    } = {}\n  ) {\n    this.container = container;\n    this.orientation = options.orientation || 'both';\n    this.wrap = options.wrap !== false;\n    this.keydownHandler = this.handleKeydown.bind(this);\n  }\n\n  /**\n   * Initialize roving tabindex\n   */\n  initialize(itemSelector?: string): void {\n    this.updateItems(itemSelector);\n    this.updateTabindices();\n    this.container.addEventListener('keydown', this.keydownHandler);\n    this.container.addEventListener('focusin', this.handleFocusin.bind(this));\n  }\n\n  /**\n   * Update items list\n   */\n  updateItems(itemSelector?: string): void {\n    const selector = itemSelector || '[role=\"tab\"], [role=\"option\"], [role=\"gridcell\"], [role=\"menuitem\"]';\n    this.items = Array.from(this.container.querySelectorAll(selector)) as HTMLElement[];\n  }\n\n  /**\n   * Update tabindex attributes\n   */\n  private updateTabindices(): void {\n    this.items.forEach((item, index) => {\n      item.setAttribute('tabindex', index === this.currentIndex ? '0' : '-1');\n    });\n  }\n\n  /**\n   * Move to specific index\n   */\n  moveTo(index: number): void {\n    if (index >= 0 && index < this.items.length) {\n      this.currentIndex = index;\n      this.updateTabindices();\n      this.items[index].focus();\n    }\n  }\n\n  /**\n   * Move to next item\n   */\n  moveNext(): void {\n    let nextIndex = this.currentIndex + 1;\n    if (nextIndex >= this.items.length) {\n      nextIndex = this.wrap ? 0 : this.items.length - 1;\n    }\n    this.moveTo(nextIndex);\n  }\n\n  /**\n   * Move to previous item\n   */\n  movePrevious(): void {\n    let previousIndex = this.currentIndex - 1;\n    if (previousIndex < 0) {\n      previousIndex = this.wrap ? this.items.length - 1 : 0;\n    }\n    this.moveTo(previousIndex);\n  }\n\n  /**\n   * Move to first item\n   */\n  moveFirst(): void {\n    this.moveTo(0);\n  }\n\n  /**\n   * Move to last item\n   */\n  moveLast(): void {\n    this.moveTo(this.items.length - 1);\n  }\n\n  /**\n   * Handle keydown events\n   */\n  private handleKeydown(event: KeyboardEvent): void {\n    const { key } = event;\n    let handled = false;\n\n    switch (key) {\n      case 'ArrowRight':\n        if (this.orientation === 'horizontal' || this.orientation === 'both') {\n          this.moveNext();\n          handled = true;\n        }\n        break;\n      case 'ArrowLeft':\n        if (this.orientation === 'horizontal' || this.orientation === 'both') {\n          this.movePrevious();\n          handled = true;\n        }\n        break;\n      case 'ArrowDown':\n        if (this.orientation === 'vertical' || this.orientation === 'both') {\n          this.moveNext();\n          handled = true;\n        }\n        break;\n      case 'ArrowUp':\n        if (this.orientation === 'vertical' || this.orientation === 'both') {\n          this.movePrevious();\n          handled = true;\n        }\n        break;\n      case 'Home':\n        this.moveFirst();\n        handled = true;\n        break;\n      case 'End':\n        this.moveLast();\n        handled = true;\n        break;\n    }\n\n    if (handled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * Handle focus events\n   */\n  private handleFocusin(event: FocusEvent): void {\n    const target = event.target as HTMLElement;\n    const index = this.items.indexOf(target);\n    if (index >= 0) {\n      this.currentIndex = index;\n      this.updateTabindices();\n    }\n  }\n\n  /**\n   * Destroy roving tabindex\n   */\n  destroy(): void {\n    this.container.removeEventListener('keydown', this.keydownHandler);\n    this.container.removeEventListener('focusin', this.handleFocusin.bind(this));\n    \n    // Reset all tabindex values\n    this.items.forEach(item => {\n      item.removeAttribute('tabindex');\n    });\n  }\n}\n\n/**\n * Main Keyboard Navigation Manager\n */\nexport class KeyboardNavigationManager {\n  private focusManager: FocusManager;\n  private activeFocusTraps: Map<HTMLElement, FocusTrap> = new Map();\n  private activeRovingTabindices: Map<HTMLElement, RovingTabindex> = new Map();\n\n  constructor() {\n    this.focusManager = new FocusManager();\n  }\n\n  /**\n   * Initialize keyboard navigation\n   */\n  initialize(): void {\n    // Setup global keyboard shortcuts\n    document.addEventListener('keydown', this.handleGlobalKeydown.bind(this));\n  }\n\n  /**\n   * Create and activate focus trap\n   */\n  trapFocus(container: HTMLElement): () => void {\n    const existingTrap = this.activeFocusTraps.get(container);\n    if (existingTrap) {\n      existingTrap.deactivate();\n    }\n\n    const trap = new FocusTrap(container, this.focusManager);\n    trap.activate();\n    this.activeFocusTraps.set(container, trap);\n\n    // Return cleanup function\n    return () => {\n      trap.deactivate();\n      this.activeFocusTraps.delete(container);\n    };\n  }\n\n  /**\n   * Create roving tabindex for container\n   */\n  createRovingTabindex(\n    container: HTMLElement,\n    options?: {\n      orientation?: 'horizontal' | 'vertical' | 'both';\n      wrap?: boolean;\n      itemSelector?: string;\n    }\n  ): RovingTabindex {\n    const existingRoving = this.activeRovingTabindices.get(container);\n    if (existingRoving) {\n      existingRoving.destroy();\n    }\n\n    const roving = new RovingTabindex(container, options);\n    roving.initialize(options?.itemSelector);\n    this.activeRovingTabindices.set(container, roving);\n\n    return roving;\n  }\n\n  /**\n   * Save current focus\n   */\n  saveFocus(element?: HTMLElement): void {\n    this.focusManager.saveFocus(element);\n  }\n\n  /**\n   * Restore previous focus\n   */\n  restoreFocus(): boolean {\n    return this.focusManager.restoreFocus();\n  }\n\n  /**\n   * Get focus manager\n   */\n  getFocusManager(): FocusManager {\n    return this.focusManager;\n  }\n\n  /**\n   * Validate element for keyboard accessibility\n   */\n  validateElement(element: HTMLElement): string[] {\n    const issues: string[] = [];\n\n    // Check if interactive element is keyboard accessible\n    if (this.isInteractiveElement(element)) {\n      if (!this.isKeyboardAccessible(element)) {\n        issues.push('Interactive element is not keyboard accessible');\n      }\n    }\n\n    // Check for proper focus indicators\n    if (element.matches(':focus-visible') && !this.hasFocusIndicator(element)) {\n      issues.push('Element lacks visible focus indicator');\n    }\n\n    return issues;\n  }\n\n  /**\n   * Handle global keyboard events\n   */\n  private handleGlobalKeydown(event: KeyboardEvent): void {\n    // Handle F6 for landmark navigation\n    if (event.key === 'F6') {\n      event.preventDefault();\n      this.navigateLandmarks(event.shiftKey);\n    }\n\n    // Handle Alt+F6 for heading navigation\n    if (event.altKey && event.key === 'F6') {\n      event.preventDefault();\n      this.navigateHeadings(event.shiftKey);\n    }\n  }\n\n  /**\n   * Navigate between landmarks\n   */\n  private navigateLandmarks(reverse = false): void {\n    const landmarks = document.querySelectorAll('[role=\"banner\"], [role=\"navigation\"], [role=\"main\"], [role=\"contentinfo\"], [role=\"complementary\"], [role=\"search\"], [role=\"form\"], [role=\"region\"], main, nav, header, footer, aside, section[aria-label], section[aria-labelledby]');\n    const landmarkArray = Array.from(landmarks) as HTMLElement[];\n    \n    if (landmarkArray.length === 0) return;\n\n    const currentIndex = landmarkArray.findIndex(landmark => \n      landmark.contains(document.activeElement) || landmark === document.activeElement\n    );\n\n    let nextIndex: number;\n    if (currentIndex === -1) {\n      nextIndex = reverse ? landmarkArray.length - 1 : 0;\n    } else {\n      nextIndex = reverse \n        ? (currentIndex - 1 + landmarkArray.length) % landmarkArray.length\n        : (currentIndex + 1) % landmarkArray.length;\n    }\n\n    const nextLandmark = landmarkArray[nextIndex];\n    if (nextLandmark.tabIndex >= 0) {\n      nextLandmark.focus();\n    } else {\n      const firstFocusable = this.focusManager.getFocusableElements(nextLandmark)[0];\n      if (firstFocusable) {\n        firstFocusable.focus();\n      } else {\n        nextLandmark.setAttribute('tabindex', '-1');\n        nextLandmark.focus();\n      }\n    }\n  }\n\n  /**\n   * Navigate between headings\n   */\n  private navigateHeadings(reverse = false): void {\n    const headings = document.querySelectorAll('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n    const headingArray = Array.from(headings) as HTMLElement[];\n    \n    if (headingArray.length === 0) return;\n\n    const currentIndex = headingArray.findIndex(heading => \n      heading.contains(document.activeElement) || heading === document.activeElement\n    );\n\n    let nextIndex: number;\n    if (currentIndex === -1) {\n      nextIndex = reverse ? headingArray.length - 1 : 0;\n    } else {\n      nextIndex = reverse \n        ? (currentIndex - 1 + headingArray.length) % headingArray.length\n        : (currentIndex + 1) % headingArray.length;\n    }\n\n    const nextHeading = headingArray[nextIndex];\n    nextHeading.setAttribute('tabindex', '-1');\n    nextHeading.focus();\n  }\n\n  /**\n   * Check if element is interactive\n   */\n  private isInteractiveElement(element: HTMLElement): boolean {\n    const interactiveRoles = [\n      'button', 'link', 'textbox', 'checkbox', 'radio', 'combobox', 'listbox',\n      'menu', 'menuitem', 'tab', 'tabpanel', 'option', 'gridcell', 'slider'\n    ];\n\n    const tagName = element.tagName.toLowerCase();\n    const role = element.getAttribute('role');\n\n    return (\n      ['a', 'button', 'input', 'select', 'textarea'].includes(tagName) ||\n      (role && interactiveRoles.includes(role)) ||\n      element.hasAttribute('onclick') ||\n      element.hasAttribute('onkeydown') ||\n      element.tabIndex >= 0\n    );\n  }\n\n  /**\n   * Check if element is keyboard accessible\n   */\n  private isKeyboardAccessible(element: HTMLElement): boolean {\n    // Check if element can receive focus\n    const focusableElements = this.focusManager.getFocusableElements(document.body);\n    return focusableElements.includes(element);\n  }\n\n  /**\n   * Check if element has visible focus indicator\n   */\n  private hasFocusIndicator(element: HTMLElement): boolean {\n    const computedStyle = window.getComputedStyle(element);\n    \n    // Check for outline\n    if (computedStyle.outline !== 'none' && computedStyle.outline !== '0px') {\n      return true;\n    }\n\n    // Check for box-shadow (common for custom focus indicators)\n    if (computedStyle.boxShadow !== 'none') {\n      return true;\n    }\n\n    // Check for border changes\n    const originalBorder = computedStyle.border;\n    element.classList.add('focus-test');\n    const focusStyle = window.getComputedStyle(element);\n    element.classList.remove('focus-test');\n    \n    return focusStyle.border !== originalBorder;\n  }\n\n  /**\n   * Cleanup all keyboard navigation\n   */\n  destroy(): void {\n    // Deactivate all focus traps\n    this.activeFocusTraps.forEach(trap => trap.deactivate());\n    this.activeFocusTraps.clear();\n\n    // Destroy all roving tabindices\n    this.activeRovingTabindices.forEach(roving => roving.destroy());\n    this.activeRovingTabindices.clear();\n\n    // Clear focus history\n    this.focusManager.clearHistory();\n  }\n}\n\n/**\n * Keyboard shortcut configuration\n */\nexport interface KeyboardShortcut {\n  key: string;\n  ctrlKey?: boolean;\n  altKey?: boolean;\n  shiftKey?: boolean;\n  metaKey?: boolean;\n  description: string;\n  action: () => void;\n}\n\n/**\n * Keyboard shortcuts manager\n */\nexport class KeyboardShortcutsManager {\n  private shortcuts: Map<string, KeyboardShortcut> = new Map();\n  private keydownHandler: (event: KeyboardEvent) => void;\n\n  constructor() {\n    this.keydownHandler = this.handleKeydown.bind(this);\n  }\n\n  /**\n   * Register a keyboard shortcut\n   */\n  register(shortcut: KeyboardShortcut): void {\n    const key = this.getShortcutKey(shortcut);\n    this.shortcuts.set(key, shortcut);\n  }\n\n  /**\n   * Unregister a keyboard shortcut\n   */\n  unregister(shortcut: Partial<KeyboardShortcut>): void {\n    const key = this.getShortcutKey(shortcut);\n    this.shortcuts.delete(key);\n  }\n\n  /**\n   * Start listening for keyboard shortcuts\n   */\n  start(): void {\n    document.addEventListener('keydown', this.keydownHandler);\n  }\n\n  /**\n   * Stop listening for keyboard shortcuts\n   */\n  stop(): void {\n    document.removeEventListener('keydown', this.keydownHandler);\n  }\n\n  /**\n   * Get all registered shortcuts\n   */\n  getShortcuts(): KeyboardShortcut[] {\n    return Array.from(this.shortcuts.values());\n  }\n\n  /**\n   * Handle keydown events\n   */\n  private handleKeydown(event: KeyboardEvent): void {\n    const key = this.getEventKey(event);\n    const shortcut = this.shortcuts.get(key);\n    \n    if (shortcut) {\n      event.preventDefault();\n      shortcut.action();\n    }\n  }\n\n  /**\n   * Generate shortcut key from shortcut object\n   */\n  private getShortcutKey(shortcut: Partial<KeyboardShortcut>): string {\n    const parts: string[] = [];\n    \n    if (shortcut.ctrlKey) parts.push('Ctrl');\n    if (shortcut.altKey) parts.push('Alt');\n    if (shortcut.shiftKey) parts.push('Shift');\n    if (shortcut.metaKey) parts.push('Meta');\n    if (shortcut.key) parts.push(shortcut.key);\n    \n    return parts.join('+');\n  }\n\n  /**\n   * Generate key from keyboard event\n   */\n  private getEventKey(event: KeyboardEvent): string {\n    const parts: string[] = [];\n    \n    if (event.ctrlKey) parts.push('Ctrl');\n    if (event.altKey) parts.push('Alt');\n    if (event.shiftKey) parts.push('Shift');\n    if (event.metaKey) parts.push('Meta');\n    parts.push(event.key);\n    \n    return parts.join('+');\n  }\n}","/**\n * Focus Trap Component\n * \n * Provides focus trapping for modals, dialogs, and other overlay components\n * to ensure WCAG 2.1 AA compliance and proper keyboard navigation.\n */\n\n'use client';\n\nimport React from 'react';\nimport { cn } from '@/utils';\nimport { FocusTrap as FocusTrapUtil, FocusManager } from '@/lib/accessibility/keyboard';\n\n/**\n * Focus trap configuration\n */\nexport interface FocusTrapConfig {\n  /** Automatically focus first element on mount */\n  autoFocus?: boolean;\n  /** Restore focus when trap is deactivated */\n  restoreFocus?: boolean;\n  /** Prevent scrolling on elements outside the trap */\n  preventScroll?: boolean;\n  /** Set aria-hidden on sibling elements */\n  hideOthers?: boolean;\n  /** Initial element to focus (selector or element) */\n  initialFocus?: string | HTMLElement;\n  /** Fallback element to focus if initialFocus is not found */\n  fallbackFocus?: string | HTMLElement;\n  /** Elements to include in the focus trap even if outside container */\n  additionalElements?: string | HTMLElement[];\n}\n\n/**\n * Focus trap component props\n */\nexport interface FocusTrapProps {\n  /** Whether the focus trap is active */\n  active: boolean;\n  /** Focus trap configuration */\n  config?: FocusTrapConfig;\n  /** Additional CSS classes */\n  className?: string;\n  /** Component children */\n  children: React.ReactNode;\n  /** Callback when trap is activated */\n  onActivate?: () => void;\n  /** Callback when trap is deactivated */\n  onDeactivate?: () => void;\n  /** Callback when focus moves outside trap (escape attempt) */\n  onEscapeAttempt?: () => void;\n}\n\n/**\n * Focus trap hook for managing focus behavior\n */\nexport const useFocusTrap = (config: FocusTrapConfig = {}) => {\n  const containerRef = React.useRef<HTMLElement>(null);\n  const focusTrapRef = React.useRef<FocusTrapUtil | null>(null);\n  const focusManagerRef = React.useRef<FocusManager>(new FocusManager());\n  const previousActiveElement = React.useRef<HTMLElement | null>(null);\n  const additionalElementsRef = React.useRef<HTMLElement[]>([]);\n\n  const {\n    autoFocus = true,\n    restoreFocus = true,\n    preventScroll = true,\n    hideOthers = true,\n    initialFocus,\n    fallbackFocus,\n    additionalElements,\n  } = config;\n\n  /**\n   * Activate focus trap\n   */\n  const activate = React.useCallback(() => {\n    const container = containerRef.current;\n    if (!container) return false;\n\n    try {\n      // Store current active element for restoration\n      previousActiveElement.current = document.activeElement as HTMLElement;\n\n      // Create focus trap\n      focusTrapRef.current = new FocusTrapUtil(container, focusManagerRef.current);\n      \n      // Process additional elements\n      if (additionalElements) {\n        const elements = typeof additionalElements === 'string' \n          ? Array.from(document.querySelectorAll(additionalElements)) as HTMLElement[]\n          : Array.isArray(additionalElements) \n            ? additionalElements \n            : [additionalElements];\n        \n        additionalElementsRef.current = elements;\n      }\n\n      // Activate trap\n      focusTrapRef.current.activate();\n\n      // Handle initial focus\n      if (autoFocus) {\n        requestAnimationFrame(() => {\n          let targetElement: HTMLElement | null = null;\n\n          // Try initial focus element\n          if (initialFocus) {\n            if (typeof initialFocus === 'string') {\n              targetElement = container.querySelector(initialFocus);\n            } else {\n              targetElement = initialFocus;\n            }\n          }\n\n          // Try fallback focus element\n          if (!targetElement && fallbackFocus) {\n            if (typeof fallbackFocus === 'string') {\n              targetElement = container.querySelector(fallbackFocus);\n            } else {\n              targetElement = fallbackFocus;\n            }\n          }\n\n          // Use first focusable element as final fallback\n          if (!targetElement) {\n            const focusableElements = focusManagerRef.current.getFocusableElements(container);\n            targetElement = focusableElements[0] || container;\n          }\n\n          if (targetElement) {\n            targetElement.focus();\n          }\n        });\n      }\n\n      // Handle scroll prevention\n      if (preventScroll) {\n        document.body.style.overflow = 'hidden';\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Failed to activate focus trap:', error);\n      return false;\n    }\n  }, [autoFocus, initialFocus, fallbackFocus, additionalElements, preventScroll]);\n\n  /**\n   * Deactivate focus trap\n   */\n  const deactivate = React.useCallback(() => {\n    try {\n      // Deactivate trap\n      if (focusTrapRef.current) {\n        focusTrapRef.current.deactivate();\n        focusTrapRef.current = null;\n      }\n\n      // Restore focus\n      if (restoreFocus && previousActiveElement.current) {\n        if (document.contains(previousActiveElement.current)) {\n          previousActiveElement.current.focus();\n        }\n        previousActiveElement.current = null;\n      }\n\n      // Restore scroll\n      if (preventScroll) {\n        document.body.style.overflow = '';\n      }\n\n      // Clear additional elements\n      additionalElementsRef.current = [];\n\n      return true;\n    } catch (error) {\n      console.error('Failed to deactivate focus trap:', error);\n      return false;\n    }\n  }, [restoreFocus, preventScroll]);\n\n  /**\n   * Check if focus is within trap\n   */\n  const isActive = React.useCallback(() => {\n    return !!focusTrapRef.current;\n  }, []);\n\n  /**\n   * Get focusable elements in trap\n   */\n  const getFocusableElements = React.useCallback(() => {\n    const container = containerRef.current;\n    if (!container) return [];\n    \n    return focusManagerRef.current.getFocusableElements(container);\n  }, []);\n\n  return {\n    containerRef,\n    activate,\n    deactivate,\n    isActive,\n    getFocusableElements,\n  };\n};\n\n/**\n * Focus Trap Component\n */\nexport const FocusTrap: React.FC<FocusTrapProps> = ({\n  active,\n  config = {},\n  className,\n  children,\n  onActivate,\n  onDeactivate,\n  onEscapeAttempt,\n}) => {\n  const {\n    containerRef,\n    activate,\n    deactivate,\n    isActive,\n  } = useFocusTrap(config);\n\n  // Handle active state changes\n  React.useEffect(() => {\n    if (active && !isActive()) {\n      const success = activate();\n      if (success && onActivate) {\n        onActivate();\n      }\n    } else if (!active && isActive()) {\n      const success = deactivate();\n      if (success && onDeactivate) {\n        onDeactivate();\n      }\n    }\n  }, [active, activate, deactivate, isActive, onActivate, onDeactivate]);\n\n  // Handle escape key\n  React.useEffect(() => {\n    if (!active) return;\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        event.preventDefault();\n        event.stopPropagation();\n        \n        if (onEscapeAttempt) {\n          onEscapeAttempt();\n        } else {\n          deactivate();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', handleKeydown, true);\n    return () => document.removeEventListener('keydown', handleKeydown, true);\n  }, [active, onEscapeAttempt, deactivate]);\n\n  // Cleanup on unmount\n  React.useEffect(() => {\n    return () => {\n      if (isActive()) {\n        deactivate();\n      }\n    };\n  }, [deactivate, isActive]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\n        'focus-trap',\n        active && 'focus-trap-active',\n        className\n      )}\n      data-focus-trap={active ? 'true' : 'false'}\n    >\n      {children}\n    </div>\n  );\n};\n\n/**\n * Modal Focus Trap Component\n * \n * Pre-configured focus trap specifically for modal dialogs\n */\nexport const ModalFocusTrap: React.FC<{\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  description?: string;\n  className?: string;\n  children: React.ReactNode;\n}> = ({\n  isOpen,\n  onClose,\n  title,\n  description,\n  className,\n  children,\n}) => {\n  const titleId = React.useId();\n  const descriptionId = React.useId();\n\n  return (\n    <FocusTrap\n      active={isOpen}\n      config={{\n        autoFocus: true,\n        restoreFocus: true,\n        preventScroll: true,\n        hideOthers: true,\n        initialFocus: '[data-modal-close], button',\n        fallbackFocus: '[tabindex=\"0\"], button, input, select, textarea, [href]',\n      }}\n      onEscapeAttempt={onClose}\n      className={cn('modal-focus-trap', className)}\n    >\n      <div\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-labelledby={title ? titleId : undefined}\n        aria-describedby={description ? descriptionId : undefined}\n        className={cn(\n          'fixed inset-0 z-50 flex items-center justify-center',\n          'bg-black/50 backdrop-blur-sm',\n          isOpen ? 'visible opacity-100' : 'invisible opacity-0',\n          'transition-all duration-200'\n        )}\n        onClick={(e) => e.target === e.currentTarget && onClose()}\n      >\n        <div\n          className={cn(\n            'bg-background rounded-lg shadow-xl border',\n            'max-w-lg w-full max-h-[90vh] overflow-auto',\n            'mx-4 p-6',\n            'focus:outline-none',\n            isOpen ? 'scale-100' : 'scale-95',\n            'transition-transform duration-200'\n          )}\n          tabIndex={-1}\n        >\n          {title && (\n            <h2\n              id={titleId}\n              className=\"text-xl font-semibold mb-4\"\n            >\n              {title}\n            </h2>\n          )}\n          \n          {description && (\n            <p\n              id={descriptionId}\n              className=\"text-muted-foreground mb-4\"\n            >\n              {description}\n            </p>\n          )}\n          \n          {children}\n          \n          {/* Close button for keyboard users */}\n          <button\n            data-modal-close\n            onClick={onClose}\n            className=\"absolute top-4 right-4 p-2 rounded-md hover:bg-muted focus:outline-none focus:ring-2 focus:ring-ring sr-only focus:not-sr-only\"\n            aria-label=\"Close dialog\"\n          >\n            <span aria-hidden=\"true\">×</span>\n          </button>\n        </div>\n      </div>\n    </FocusTrap>\n  );\n};\n\n/**\n * Drawer Focus Trap Component\n * \n * Pre-configured focus trap for drawer/sidebar components\n */\nexport const DrawerFocusTrap: React.FC<{\n  isOpen: boolean;\n  onClose: () => void;\n  side?: 'left' | 'right' | 'top' | 'bottom';\n  className?: string;\n  children: React.ReactNode;\n}> = ({\n  isOpen,\n  onClose,\n  side = 'right',\n  className,\n  children,\n}) => {\n  return (\n    <FocusTrap\n      active={isOpen}\n      config={{\n        autoFocus: true,\n        restoreFocus: true,\n        preventScroll: true,\n        hideOthers: true,\n        initialFocus: 'button, [href], input, select, textarea, [tabindex=\"0\"]',\n      }}\n      onEscapeAttempt={onClose}\n      className={cn('drawer-focus-trap', className)}\n    >\n      <div\n        className={cn(\n          'fixed inset-0 z-50',\n          isOpen ? 'visible' : 'invisible'\n        )}\n      >\n        {/* Backdrop */}\n        <div\n          className={cn(\n            'absolute inset-0 bg-black/50 backdrop-blur-sm',\n            isOpen ? 'opacity-100' : 'opacity-0',\n            'transition-opacity duration-300'\n          )}\n          onClick={onClose}\n        />\n        \n        {/* Drawer */}\n        <div\n          role=\"dialog\"\n          aria-modal=\"true\"\n          className={cn(\n            'absolute bg-background shadow-xl border',\n            'transition-transform duration-300',\n            // Position based on side\n            side === 'left' && [\n              'left-0 top-0 bottom-0 w-80 max-w-[80vw]',\n              isOpen ? 'translate-x-0' : '-translate-x-full'\n            ],\n            side === 'right' && [\n              'right-0 top-0 bottom-0 w-80 max-w-[80vw]',\n              isOpen ? 'translate-x-0' : 'translate-x-full'\n            ],\n            side === 'top' && [\n              'top-0 left-0 right-0 h-80 max-h-[80vh]',\n              isOpen ? 'translate-y-0' : '-translate-y-full'\n            ],\n            side === 'bottom' && [\n              'bottom-0 left-0 right-0 h-80 max-h-[80vh]',\n              isOpen ? 'translate-y-0' : 'translate-y-full'\n            ]\n          )}\n          tabIndex={-1}\n        >\n          <div className=\"p-6 h-full overflow-auto\">\n            {children}\n            \n            {/* Close button */}\n            <button\n              onClick={onClose}\n              className=\"absolute top-4 right-4 p-2 rounded-md hover:bg-muted focus:outline-none focus:ring-2 focus:ring-ring\"\n              aria-label=\"Close drawer\"\n            >\n              <span aria-hidden=\"true\">×</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </FocusTrap>\n  );\n};\n\n/**\n * Popover Focus Trap Component\n * \n * Pre-configured focus trap for popover components\n */\nexport const PopoverFocusTrap: React.FC<{\n  isOpen: boolean;\n  onClose: () => void;\n  trigger?: HTMLElement | null;\n  className?: string;\n  children: React.ReactNode;\n}> = ({\n  isOpen,\n  onClose,\n  trigger,\n  className,\n  children,\n}) => {\n  const popoverRef = React.useRef<HTMLDivElement>(null);\n\n  // Position popover relative to trigger\n  React.useEffect(() => {\n    if (!isOpen || !trigger || !popoverRef.current) return;\n\n    const updatePosition = () => {\n      const triggerRect = trigger.getBoundingClientRect();\n      const popoverElement = popoverRef.current;\n      \n      if (popoverElement) {\n        popoverElement.style.top = `${triggerRect.bottom + 8}px`;\n        popoverElement.style.left = `${triggerRect.left}px`;\n      }\n    };\n\n    updatePosition();\n    window.addEventListener('resize', updatePosition);\n    window.addEventListener('scroll', updatePosition);\n\n    return () => {\n      window.removeEventListener('resize', updatePosition);\n      window.removeEventListener('scroll', updatePosition);\n    };\n  }, [isOpen, trigger]);\n\n  return (\n    <FocusTrap\n      active={isOpen}\n      config={{\n        autoFocus: true,\n        restoreFocus: true,\n        preventScroll: false,\n        hideOthers: false,\n      }}\n      onEscapeAttempt={onClose}\n      className={cn('popover-focus-trap', className)}\n    >\n      <div\n        ref={popoverRef}\n        role=\"dialog\"\n        aria-modal=\"false\"\n        className={cn(\n          'fixed z-50 bg-background rounded-md shadow-lg border p-4',\n          'min-w-48 max-w-sm',\n          isOpen ? 'visible opacity-100 scale-100' : 'invisible opacity-0 scale-95',\n          'transition-all duration-200'\n        )}\n        tabIndex={-1}\n      >\n        {children}\n      </div>\n    </FocusTrap>\n  );\n};\n\n/**\n * Focus Guard Component\n * \n * Invisible elements that help manage focus in complex layouts\n */\nexport const FocusGuard: React.FC<{\n  onFocus?: () => void;\n  className?: string;\n}> = ({ onFocus, className }) => {\n  return (\n    <div\n      tabIndex={-1}\n      onFocus={onFocus}\n      className={cn('focus-guard sr-only', className)}\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: 1,\n        height: 1,\n        padding: 0,\n        margin: 0,\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n      }}\n    />\n  );\n};\n\n/**\n * Focus Lock Component\n * \n * Alternative implementation using react-focus-lock\n */\nexport const FocusLock: React.FC<{\n  disabled?: boolean;\n  autoFocus?: boolean;\n  restoreFocus?: boolean;\n  className?: string;\n  children: React.ReactNode;\n}> = ({\n  disabled = false,\n  autoFocus = true,\n  restoreFocus = true,\n  className,\n  children,\n}) => {\n  // This would use react-focus-lock if available\n  // For now, we'll use our custom implementation\n  return (\n    <FocusTrap\n      active={!disabled}\n      config={{\n        autoFocus,\n        restoreFocus,\n        preventScroll: false,\n        hideOthers: false,\n      }}\n      className={className}\n    >\n      {children}\n    </FocusTrap>\n  );\n};\n\n// Export default as FocusTrap\nexport default FocusTrap;","/**\n * Skip Link Component\n * \n * Provides keyboard navigation skip links for WCAG 2.1 AA compliance.\n * Skip links allow keyboard users to quickly navigate to main content areas.\n */\n\n'use client';\n\nimport React from 'react';\nimport { cn } from '@/utils';\n\n/**\n * Skip link configuration\n */\nexport interface SkipLinkConfig {\n  href: string;\n  text: string;\n  title?: string;\n}\n\n/**\n * Skip links component props\n */\nexport interface SkipLinksProps {\n  links?: SkipLinkConfig[];\n  className?: string;\n  children?: React.ReactNode;\n}\n\n/**\n * Individual skip link props\n */\nexport interface SkipLinkProps {\n  href: string;\n  title?: string;\n  className?: string;\n  onClick?: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n  children: React.ReactNode;\n}\n\n/**\n * Default skip links configuration\n */\nconst DEFAULT_SKIP_LINKS: SkipLinkConfig[] = [\n  {\n    href: '#main-content',\n    text: 'Skip to main content',\n    title: 'Skip directly to the main content of the page',\n  },\n  {\n    href: '#main-navigation',\n    text: 'Skip to navigation',\n    title: 'Skip to the main navigation menu',\n  },\n  {\n    href: '#page-footer',\n    text: 'Skip to footer',\n    title: 'Skip to the page footer',\n  },\n];\n\n/**\n * Individual Skip Link Component\n */\nexport const SkipLink: React.FC<SkipLinkProps> = ({\n  href,\n  title,\n  className,\n  onClick,\n  children,\n}) => {\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    // Call custom click handler if provided\n    if (onClick) {\n      onClick(event);\n    }\n\n    // Ensure target element is focusable\n    const target = document.querySelector(href);\n    if (target && target instanceof HTMLElement) {\n      // Add tabindex if element is not naturally focusable\n      if (!target.hasAttribute('tabindex') && \n          !['A', 'BUTTON', 'INPUT', 'SELECT', 'TEXTAREA'].includes(target.tagName)) {\n        target.setAttribute('tabindex', '-1');\n      }\n\n      // Focus the target element\n      setTimeout(() => {\n        target.focus();\n        \n        // Scroll target into view smoothly\n        target.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n          inline: 'nearest',\n        });\n      }, 100);\n    }\n  };\n\n  return (\n    <a\n      href={href}\n      title={title}\n      onClick={handleClick}\n      suppressHydrationWarning\n      className={cn(\n        // Base styles - hidden by default\n        'absolute left-4 top-4 z-50',\n        'px-4 py-2',\n        'bg-primary text-primary-foreground',\n        'border border-primary-foreground/20',\n        'rounded-md shadow-lg',\n        'font-medium text-sm',\n        'transition-all duration-200',\n        'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring',\n        \n        // Screen reader only by default\n        'sr-only',\n        \n        // Show on focus\n        'focus:not-sr-only focus:fixed focus:left-4 focus:top-4',\n        \n        // Hover effects when visible\n        'hover:bg-primary/90 hover:text-primary-foreground',\n        'hover:shadow-xl hover:scale-105',\n        \n        // High contrast mode support\n        'contrast-more:border-2 contrast-more:border-current',\n        \n        className\n      )}\n    >\n      {children}\n    </a>\n  );\n};\n\n/**\n * Skip Links Container Component\n * \n * Renders multiple skip links for common page landmarks\n */\nexport const SkipLinks: React.FC<SkipLinksProps> = ({\n  links = DEFAULT_SKIP_LINKS,\n  className,\n  children,\n}) => {\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"Skip links\"\n      className={cn('skip-links-container', className)}\n      suppressHydrationWarning\n    >\n      {/* Default skip links */}\n      {links.map((link, index) => (\n        <SkipLink\n          key={link.href}\n          href={link.href}\n          title={link.title}\n        >\n          {link.text}\n        </SkipLink>\n      ))}\n      \n      {/* Custom skip links */}\n      {children}\n    </nav>\n  );\n};\n\n/**\n * Skip to Main Content Component\n * \n * Simple component for the most common skip link\n */\nexport const SkipToMain: React.FC<{\n  href?: string;\n  text?: string;\n  className?: string;\n}> = ({\n  href = '#main-content',\n  text = 'Skip to main content',\n  className,\n}) => {\n  return (\n    <SkipLink\n      href={href}\n      title=\"Skip directly to the main content of the page\"\n      className={className}\n    >\n      {text}\n    </SkipLink>\n  );\n};\n\n/**\n * Skip Navigation Component\n * \n * Provides skip links for complex navigation scenarios\n */\nexport const SkipNavigation: React.FC<{\n  sections: Array<{\n    id: string;\n    label: string;\n    title?: string;\n  }>;\n  className?: string;\n}> = ({ sections, className }) => {\n  if (sections.length === 0) {\n    return null;\n  }\n\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"Skip navigation\"\n      className={cn('skip-navigation', className)}\n    >\n      {sections.map((section) => (\n        <SkipLink\n          key={section.id}\n          href={`#${section.id}`}\n          title={section.title || `Skip to ${section.label}`}\n        >\n          Skip to {section.label}\n        </SkipLink>\n      ))}\n    </nav>\n  );\n};\n\n/**\n * Table of Contents Skip Links\n * \n * Automatically generates skip links for headings in content\n */\nexport const TableOfContentsSkipLinks: React.FC<{\n  containerId?: string;\n  headingLevels?: string[];\n  maxItems?: number;\n  className?: string;\n}> = ({\n  containerId = 'main-content',\n  headingLevels = ['h2', 'h3'],\n  maxItems = 5,\n  className,\n}) => {\n  const [headings, setHeadings] = React.useState<Array<{\n    id: string;\n    text: string;\n    level: number;\n  }>>([]);\n\n  React.useEffect(() => {\n    const container = containerId ? document.getElementById(containerId) : document;\n    if (!container) return;\n\n    const selector = headingLevels.join(', ');\n    const headingElements = container.querySelectorAll(selector);\n    \n    const headingData = Array.from(headingElements)\n      .slice(0, maxItems)\n      .map((heading) => {\n        const element = heading as HTMLHeadingElement;\n        let id = element.id;\n        \n        // Generate ID if not present\n        if (!id) {\n          const text = element.textContent || '';\n          id = text\n            .toLowerCase()\n            .replace(/[^a-z0-9]+/g, '-')\n            .replace(/^-|-$/g, '');\n          \n          // Ensure uniqueness\n          let counter = 1;\n          let uniqueId = id;\n          while (document.getElementById(uniqueId)) {\n            uniqueId = `${id}-${counter}`;\n            counter++;\n          }\n          \n          element.id = uniqueId;\n          id = uniqueId;\n        }\n        \n        return {\n          id,\n          text: element.textContent || '',\n          level: parseInt(element.tagName.charAt(1), 10),\n        };\n      });\n\n    setHeadings(headingData);\n  }, [containerId, headingLevels, maxItems]);\n\n  if (headings.length === 0) {\n    return null;\n  }\n\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"Table of contents skip links\"\n      className={cn('toc-skip-links', className)}\n    >\n      {headings.map((heading) => (\n        <SkipLink\n          key={heading.id}\n          href={`#${heading.id}`}\n          title={`Skip to section: ${heading.text}`}\n          className={cn(\n            // Indent based on heading level\n            heading.level === 3 && 'ml-4',\n            heading.level === 4 && 'ml-8',\n            heading.level === 5 && 'ml-12',\n            heading.level === 6 && 'ml-16'\n          )}\n        >\n          {heading.text}\n        </SkipLink>\n      ))}\n    </nav>\n  );\n};\n\n/**\n * Data Table Skip Links\n * \n * Provides skip links for large data tables\n */\nexport const DataTableSkipLinks: React.FC<{\n  tableId: string;\n  sections?: Array<{\n    selector: string;\n    label: string;\n  }>;\n  className?: string;\n}> = ({\n  tableId,\n  sections = [\n    { selector: 'thead', label: 'table headers' },\n    { selector: 'tbody', label: 'table data' },\n    { selector: 'tfoot', label: 'table footer' },\n  ],\n  className,\n}) => {\n  const [availableSections, setAvailableSections] = React.useState<Array<{\n    id: string;\n    label: string;\n  }>>([]);\n\n  React.useEffect(() => {\n    const table = document.getElementById(tableId);\n    if (!table) return;\n\n    const found: Array<{ id: string; label: string }> = [];\n\n    sections.forEach((section) => {\n      const element = table.querySelector(section.selector);\n      if (element) {\n        let id = element.id;\n        if (!id) {\n          id = `${tableId}-${section.selector}`;\n          element.id = id;\n        }\n        found.push({ id, label: section.label });\n      }\n    });\n\n    setAvailableSections(found);\n  }, [tableId, sections]);\n\n  if (availableSections.length === 0) {\n    return null;\n  }\n\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"Table navigation skip links\"\n      className={cn('table-skip-links', className)}\n    >\n      {availableSections.map((section) => (\n        <SkipLink\n          key={section.id}\n          href={`#${section.id}`}\n          title={`Skip to ${section.label}`}\n        >\n          Skip to {section.label}\n        </SkipLink>\n      ))}\n    </nav>\n  );\n};\n\n/**\n * Form Skip Links\n * \n * Provides skip links for complex forms\n */\nexport const FormSkipLinks: React.FC<{\n  formId: string;\n  sections?: Array<{\n    selector: string;\n    label: string;\n  }>;\n  className?: string;\n}> = ({\n  formId,\n  sections = [\n    { selector: 'fieldset', label: 'form sections' },\n    { selector: '.form-actions, .form-buttons', label: 'form actions' },\n  ],\n  className,\n}) => {\n  const [formSections, setFormSections] = React.useState<Array<{\n    id: string;\n    label: string;\n  }>>([]);\n\n  React.useEffect(() => {\n    const form = document.getElementById(formId);\n    if (!form) return;\n\n    const found: Array<{ id: string; label: string }> = [];\n\n    sections.forEach((section) => {\n      const elements = form.querySelectorAll(section.selector);\n      elements.forEach((element, index) => {\n        let id = element.id;\n        if (!id) {\n          id = `${formId}-${section.selector.replace(/[^a-z0-9]/gi, '-')}-${index}`;\n          element.id = id;\n        }\n        \n        // Get section title from legend or heading\n        const legend = element.querySelector('legend');\n        const heading = element.querySelector('h2, h3, h4, h5, h6');\n        const title = legend?.textContent || heading?.textContent || `${section.label} ${index + 1}`;\n        \n        found.push({ id, label: title });\n      });\n    });\n\n    setFormSections(found);\n  }, [formId, sections]);\n\n  if (formSections.length === 0) {\n    return null;\n  }\n\n  return (\n    <nav\n      role=\"navigation\"\n      aria-label=\"Form section skip links\"\n      className={cn('form-skip-links', className)}\n    >\n      {formSections.map((section) => (\n        <SkipLink\n          key={section.id}\n          href={`#${section.id}`}\n          title={`Skip to ${section.label}`}\n        >\n          {section.label}\n        </SkipLink>\n      ))}\n    </nav>\n  );\n};\n\n/**\n * Hook for managing skip link visibility and behavior\n */\nexport const useSkipLinks = () => {\n  const [isSkipLinkActive, setIsSkipLinkActive] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      const target = event.target as HTMLElement;\n      if (target && target.closest('.skip-links-container')) {\n        setIsSkipLinkActive(true);\n      } else {\n        setIsSkipLinkActive(false);\n      }\n    };\n\n    document.addEventListener('focusin', handleFocus);\n    return () => document.removeEventListener('focusin', handleFocus);\n  }, []);\n\n  const announceSkipLinkUsage = (targetId: string) => {\n    const target = document.querySelector(targetId);\n    if (target) {\n      const targetName = target.getAttribute('aria-label') || \n                        target.textContent?.slice(0, 50) || \n                        'content area';\n      \n      // Create announcement\n      const announcement = `Skipped to ${targetName}`;\n      \n      // Use live region for announcement\n      const announcer = document.querySelector('[role=\"status\"]') || \n                       document.querySelector('[aria-live=\"polite\"]');\n      \n      if (announcer) {\n        announcer.textContent = announcement;\n        setTimeout(() => {\n          announcer.textContent = '';\n        }, 1000);\n      }\n    }\n  };\n\n  return {\n    isSkipLinkActive,\n    announceSkipLinkUsage,\n  };\n};\n\n// Export default as SkipLinks for convenience\nexport default SkipLinks;"],"names":[],"mappings":"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"}