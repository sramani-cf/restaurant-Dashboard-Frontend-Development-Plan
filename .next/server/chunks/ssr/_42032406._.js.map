{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Utility function to merge class names with tailwind-merge\n * Combines clsx and tailwind-merge for optimal class name handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Create a variant utility for component styling\n * Used to define consistent styling patterns across components\n */\nexport type VariantProps<T> = {\n  [K in keyof T]: keyof T[K];\n};\n\n/**\n * Focus ring utility classes for accessibility\n */\nexport const focusRing = 'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2';\n\n/**\n * Disabled state utility classes\n */\nexport const disabledStyles = 'disabled:pointer-events-none disabled:opacity-50';\n\n/**\n * Animation utility classes\n */\nexport const transitions = {\n  fast: 'transition-fast',\n  base: 'transition-base',\n  slow: 'transition-slow',\n} as const;"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAaO,MAAM,YAAY;AAKlB,MAAM,iBAAiB;AAKvB,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;AACR","debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cn, focusRing, disabledStyles } from './utils';\nimport { Loader2 } from 'lucide-react';\n\nconst buttonVariants = {\n  variant: {\n    primary: 'bg-primary text-primary-foreground hover:bg-primary/90',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    danger: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n    ghost: 'hover:bg-accent hover:text-accent-foreground',\n    outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n    link: 'text-primary underline-offset-4 hover:underline',\n  },\n  size: {\n    sm: 'h-9 rounded-md px-3 text-sm',\n    md: 'h-10 px-4 py-2',\n    lg: 'h-11 rounded-md px-8 text-base',\n    icon: 'h-10 w-10',\n  },\n} as const;\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: keyof typeof buttonVariants.variant;\n  size?: keyof typeof buttonVariants.size;\n  asChild?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant = 'primary',\n      size = 'md',\n      asChild = false,\n      loading = false,\n      loadingText,\n      disabled,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    \n    const buttonClasses = cn(\n      // Base styles\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium',\n      'ring-offset-background transition-colors',\n      focusRing,\n      disabledStyles,\n      // Variant styles\n      buttonVariants.variant[variant],\n      // Size styles  \n      buttonVariants.size[size],\n      className\n    );\n\n    const isDisabled = disabled || loading;\n\n    return (\n      <Comp\n        className={buttonClasses}\n        ref={ref}\n        disabled={isDisabled}\n        {...props}\n      >\n        {loading && (\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n        )}\n        {loading && loadingText ? loadingText : children}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB;IACrB,SAAS;QACP,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;QACP,SAAS;QACT,MAAM;IACR;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;AACF;AAWA,MAAM,uBAAS,mNAAgB,CAC7B,CACE,EACE,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,UAAU,KAAK,EACf,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,GAAG,OACJ,EACD;IAEA,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,MAAM,gBAAgB,IAAA,+HAAE,EACtB,cAAc;IACd,4FACA,4CACA,sIAAS,EACT,2IAAc,EACd,iBAAiB;IACjB,eAAe,OAAO,CAAC,QAAQ,EAC/B,gBAAgB;IAChB,eAAe,IAAI,CAAC,KAAK,EACzB;IAGF,MAAM,aAAa,YAAY;IAE/B,qBACE,8OAAC;QACC,WAAW;QACX,KAAK;QACL,UAAU;QACT,GAAG,KAAK;;YAER,yBACC,8OAAC,sLAAO;gBAAC,WAAU;;;;;;YAEpB,WAAW,cAAc,cAAc;;;;;;;AAG9C;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nconst badgeVariants = {\n  variant: {\n    default: 'bg-primary text-primary-foreground hover:bg-primary/80',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    success: 'bg-green-500 text-white hover:bg-green-600',\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600',\n    error: 'bg-destructive text-destructive-foreground hover:bg-destructive/80',\n    outline: 'border border-input bg-background text-foreground hover:bg-accent',\n    ghost: 'text-foreground hover:bg-accent',\n  },\n  size: {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-0.5 text-sm',\n    lg: 'px-3 py-1 text-sm',\n  },\n} as const;\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: keyof typeof badgeVariants.variant;\n  size?: keyof typeof badgeVariants.size;\n  pulse?: boolean;\n}\n\nfunction Badge({\n  className,\n  variant = 'default',\n  size = 'md',\n  pulse = false,\n  children,\n  ...props\n}: BadgeProps) {\n  return (\n    <div\n      className={cn(\n        // Base styles\n        'inline-flex items-center rounded-full font-semibold transition-colors',\n        'focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n        // Variant and size styles\n        badgeVariants.variant[variant],\n        badgeVariants.size[size],\n        // Pulse animation\n        pulse && 'animate-pulse',\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Status-specific badge components for common use cases\nexport function StatusBadge({ \n  status, \n  className, \n  ...props \n}: { status: 'online' | 'busy' | 'offline' | 'pending' | 'completed' | 'cancelled' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    online: 'success' as const,\n    completed: 'success' as const,\n    busy: 'warning' as const,\n    pending: 'warning' as const,\n    offline: 'secondary' as const,\n    cancelled: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[status]} \n      className={cn('capitalize', className)} \n      {...props}\n    >\n      <div className=\"mr-1 h-2 w-2 rounded-full bg-current opacity-75\" />\n      {status}\n    </Badge>\n  );\n}\n\n// Priority badge for orders, tasks, etc.\nexport function PriorityBadge({ \n  priority, \n  className, \n  ...props \n}: { priority: 'low' | 'medium' | 'high' | 'urgent' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    low: 'secondary' as const,\n    medium: 'default' as const,\n    high: 'warning' as const,\n    urgent: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[priority]} \n      className={cn('capitalize', className)}\n      pulse={priority === 'urgent'}\n      {...props}\n    >\n      {priority}\n    </Badge>\n  );\n}\n\nexport { Badge, badgeVariants };"],"names":[],"mappings":";;;;;;;;;;;AACA;;;AAEA,MAAM,gBAAgB;IACpB,SAAS;QACP,SAAS;QACT,WAAW;QACX,SAAS;QACT,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;IACT;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;AACF;AASA,SAAS,MAAM,EACb,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,QAAQ,KAAK,EACb,QAAQ,EACR,GAAG,OACQ;IACX,qBACE,8OAAC;QACC,WAAW,IAAA,+HAAE,EACX,cAAc;QACd,yEACA,uEACA,0BAA0B;QAC1B,cAAc,OAAO,CAAC,QAAQ,EAC9B,cAAc,IAAI,CAAC,KAAK,EACxB,kBAAkB;QAClB,SAAS,iBACT;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AAGO,SAAS,YAAY,EAC1B,MAAM,EACN,SAAS,EACT,GAAG,OAC6G;IAChH,MAAM,aAAa;QACjB,QAAQ;QACR,WAAW;QACX,MAAM;QACN,SAAS;QACT,SAAS;QACT,WAAW;IACb;IAEA,qBACE,8OAAC;QACC,SAAS,UAAU,CAAC,OAAO;QAC3B,WAAW,IAAA,+HAAE,EAAC,cAAc;QAC3B,GAAG,KAAK;;0BAET,8OAAC;gBAAI,WAAU;;;;;;YACd;;;;;;;AAGP;AAGO,SAAS,cAAc,EAC5B,QAAQ,EACR,SAAS,EACT,GAAG,OAC8E;IACjF,MAAM,aAAa;QACjB,KAAK;QACL,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IAEA,qBACE,8OAAC;QACC,SAAS,UAAU,CAAC,SAAS;QAC7B,WAAW,IAAA,+HAAE,EAAC,cAAc;QAC5B,OAAO,aAAa;QACnB,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/alert.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\nimport { AlertCircle, CheckCircle, Info, X, AlertTriangle } from 'lucide-react';\n\nconst alertVariants = {\n  variant: {\n    default: 'bg-background text-foreground border-border',\n    success: 'bg-green-50 text-green-800 border-green-200 dark:bg-green-900/20 dark:text-green-200 dark:border-green-800',\n    warning: 'bg-yellow-50 text-yellow-800 border-yellow-200 dark:bg-yellow-900/20 dark:text-yellow-200 dark:border-yellow-800',\n    error: 'bg-destructive/10 text-destructive border-destructive/20 dark:bg-destructive/10 dark:text-destructive dark:border-destructive/20',\n    info: 'bg-blue-50 text-blue-800 border-blue-200 dark:bg-blue-900/20 dark:text-blue-200 dark:border-blue-800',\n  },\n} as const;\n\nexport interface AlertProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: keyof typeof alertVariants.variant;\n  title?: string;\n  dismissible?: boolean;\n  onDismiss?: () => void;\n  icon?: React.ReactNode;\n}\n\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(\n  (\n    {\n      className,\n      variant = 'default',\n      title,\n      dismissible = false,\n      onDismiss,\n      icon,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [isVisible, setIsVisible] = React.useState(true);\n\n    const handleDismiss = () => {\n      setIsVisible(false);\n      onDismiss?.();\n    };\n\n    const getDefaultIcon = () => {\n      switch (variant) {\n        case 'success':\n          return <CheckCircle className=\"h-4 w-4\" />;\n        case 'warning':\n          return <AlertTriangle className=\"h-4 w-4\" />;\n        case 'error':\n          return <AlertCircle className=\"h-4 w-4\" />;\n        case 'info':\n          return <Info className=\"h-4 w-4\" />;\n        default:\n          return <Info className=\"h-4 w-4\" />;\n      }\n    };\n\n    const displayIcon = icon !== null ? (icon || getDefaultIcon()) : null;\n\n    if (!isVisible) return null;\n\n    return (\n      <div\n        ref={ref}\n        role=\"alert\"\n        className={cn(\n          'relative w-full rounded-lg border p-4 transition-all duration-300',\n          alertVariants.variant[variant],\n          className\n        )}\n        {...props}\n      >\n        <div className=\"flex\">\n          {displayIcon && (\n            <div className=\"flex-shrink-0\">\n              {displayIcon}\n            </div>\n          )}\n          <div className={cn('flex-1', displayIcon && 'ml-3')}>\n            {title && (\n              <h5 className=\"mb-1 font-semibold leading-none tracking-tight\">\n                {title}\n              </h5>\n            )}\n            <div className={cn('text-sm', title && '[&_p]:leading-relaxed')}>\n              {children}\n            </div>\n          </div>\n          {dismissible && (\n            <button\n              onClick={handleDismiss}\n              className=\"ml-auto flex-shrink-0 rounded-md p-1.5 hover:bg-black/5 dark:hover:bg-white/5 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n              aria-label=\"Dismiss alert\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nAlert.displayName = 'Alert';\n\n// Convenience components for specific alert types\nexport function SuccessAlert(props: Omit<AlertProps, 'variant'>) {\n  return <Alert variant=\"success\" {...props} />;\n}\n\nexport function WarningAlert(props: Omit<AlertProps, 'variant'>) {\n  return <Alert variant=\"warning\" {...props} />;\n}\n\nexport function ErrorAlert(props: Omit<AlertProps, 'variant'>) {\n  return <Alert variant=\"error\" {...props} />;\n}\n\nexport function InfoAlert(props: Omit<AlertProps, 'variant'>) {\n  return <Alert variant=\"info\" {...props} />;\n}\n\nexport { Alert, alertVariants };"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;AAEA,MAAM,gBAAgB;IACpB,SAAS;QACP,SAAS;QACT,SAAS;QACT,SAAS;QACT,OAAO;QACP,MAAM;IACR;AACF;AAWA,MAAM,sBAAQ,mNAAgB,CAC5B,CACE,EACE,SAAS,EACT,UAAU,SAAS,EACnB,KAAK,EACL,cAAc,KAAK,EACnB,SAAS,EACT,IAAI,EACJ,QAAQ,EACR,GAAG,OACJ,EACD;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,iNAAc,CAAC;IAEjD,MAAM,gBAAgB;QACpB,aAAa;QACb;IACF;IAEA,MAAM,iBAAiB;QACrB,OAAQ;YACN,KAAK;gBACH,qBAAO,8OAAC,4LAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,8OAAC,uLAAa;oBAAC,WAAU;;;;;;YAClC,KAAK;gBACH,qBAAO,8OAAC,qLAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,8OAAC,0KAAI;oBAAC,WAAU;;;;;;YACzB;gBACE,qBAAO,8OAAC,0KAAI;oBAAC,WAAU;;;;;;QAC3B;IACF;IAEA,MAAM,cAAc,SAAS,OAAQ,QAAQ,mBAAoB;IAEjE,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,IAAA,+HAAE,EACX,qEACA,cAAc,OAAO,CAAC,QAAQ,EAC9B;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC;YAAI,WAAU;;gBACZ,6BACC,8OAAC;oBAAI,WAAU;8BACZ;;;;;;8BAGL,8OAAC;oBAAI,WAAW,IAAA,+HAAE,EAAC,UAAU,eAAe;;wBACzC,uBACC,8OAAC;4BAAG,WAAU;sCACX;;;;;;sCAGL,8OAAC;4BAAI,WAAW,IAAA,+HAAE,EAAC,WAAW,SAAS;sCACpC;;;;;;;;;;;;gBAGJ,6BACC,8OAAC;oBACC,SAAS;oBACT,WAAU;oBACV,cAAW;8BAEX,cAAA,8OAAC,uKAAC;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;AAMzB;AAGF,MAAM,WAAW,GAAG;AAGb,SAAS,aAAa,KAAkC;IAC7D,qBAAO,8OAAC;QAAM,SAAQ;QAAW,GAAG,KAAK;;;;;;AAC3C;AAEO,SAAS,aAAa,KAAkC;IAC7D,qBAAO,8OAAC;QAAM,SAAQ;QAAW,GAAG,KAAK;;;;;;AAC3C;AAEO,SAAS,WAAW,KAAkC;IAC3D,qBAAO,8OAAC;QAAM,SAAQ;QAAS,GAAG,KAAK;;;;;;AACzC;AAEO,SAAS,UAAU,KAAkC;IAC1D,qBAAO,8OAAC;QAAM,SAAQ;QAAQ,GAAG,KAAK;;;;;;AACxC","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn, focusRing } from './utils';\nimport { AlertCircle, Check } from 'lucide-react';\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  error?: string;\n  success?: boolean;\n  label?: string;\n  helperText?: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      className,\n      type,\n      error,\n      success,\n      label,\n      helperText,\n      leftIcon,\n      rightIcon,\n      id,\n      ...props\n    },\n    ref\n  ) => {\n    const generatedId = React.useId();\n    const inputId = id || generatedId;\n    const hasError = !!error;\n    const hasSuccess = success && !hasError;\n\n    const inputClasses = cn(\n      // Base styles\n      'flex h-10 w-full rounded-md border bg-background px-3 py-2 text-sm',\n      'ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium',\n      'placeholder:text-muted-foreground',\n      focusRing,\n      'disabled:cursor-not-allowed disabled:opacity-50',\n      // State styles\n      {\n        'border-input': !hasError && !hasSuccess,\n        'border-destructive text-destructive focus-visible:ring-destructive': hasError,\n        'border-green-500 text-green-700 focus-visible:ring-green-500': hasSuccess,\n        'pl-10': leftIcon,\n        'pr-10': rightIcon || hasError || hasSuccess,\n      },\n      className\n    );\n\n    const getStateIcon = () => {\n      if (hasError) return <AlertCircle className=\"h-4 w-4 text-destructive\" />;\n      if (hasSuccess) return <Check className=\"h-4 w-4 text-green-500\" />;\n      return rightIcon;\n    };\n\n    return (\n      <div className=\"w-full\">\n        {label && (\n          <label\n            htmlFor={inputId}\n            className={cn(\n              'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n              hasError ? 'text-destructive' : 'text-foreground'\n            )}\n          >\n            {label}\n          </label>\n        )}\n        <div className=\"relative\">\n          {leftIcon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2\">\n              {leftIcon}\n            </div>\n          )}\n          <input\n            type={type}\n            className={inputClasses}\n            ref={ref}\n            id={inputId}\n            aria-invalid={hasError ? 'true' : 'false'}\n            aria-describedby={\n              error ? `${inputId}-error` : helperText ? `${inputId}-helper` : undefined\n            }\n            {...props}\n          />\n          {(rightIcon || hasError || hasSuccess) && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\n              {getStateIcon()}\n            </div>\n          )}\n        </div>\n        {error && (\n          <p\n            id={`${inputId}-error`}\n            className=\"mt-1 text-sm text-destructive\"\n            role=\"alert\"\n          >\n            {error}\n          </p>\n        )}\n        {helperText && !error && (\n          <p\n            id={`${inputId}-helper`}\n            className=\"mt-1 text-sm text-muted-foreground\"\n          >\n            {helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\nexport { Input };"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;;;;;;AAYA,MAAM,sBAAQ,mNAAgB,CAC5B,CACE,EACE,SAAS,EACT,IAAI,EACJ,KAAK,EACL,OAAO,EACP,KAAK,EACL,UAAU,EACV,QAAQ,EACR,SAAS,EACT,EAAE,EACF,GAAG,OACJ,EACD;IAEA,MAAM,cAAc,8MAAW;IAC/B,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,CAAC,CAAC;IACnB,MAAM,aAAa,WAAW,CAAC;IAE/B,MAAM,eAAe,IAAA,+HAAE,EACrB,cAAc;IACd,sEACA,0FACA,qCACA,sIAAS,EACT,mDACA,eAAe;IACf;QACE,gBAAgB,CAAC,YAAY,CAAC;QAC9B,sEAAsE;QACtE,gEAAgE;QAChE,SAAS;QACT,SAAS,aAAa,YAAY;IACpC,GACA;IAGF,MAAM,eAAe;QACnB,IAAI,UAAU,qBAAO,8OAAC,qLAAW;YAAC,WAAU;;;;;;QAC5C,IAAI,YAAY,qBAAO,8OAAC,2KAAK;YAAC,WAAU;;;;;;QACxC,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;YACZ,uBACC,8OAAC;gBACC,SAAS;gBACT,WAAW,IAAA,+HAAE,EACX,8FACA,WAAW,qBAAqB;0BAGjC;;;;;;0BAGL,8OAAC;gBAAI,WAAU;;oBACZ,0BACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAGL,8OAAC;wBACC,MAAM;wBACN,WAAW;wBACX,KAAK;wBACL,IAAI;wBACJ,gBAAc,WAAW,SAAS;wBAClC,oBACE,QAAQ,GAAG,QAAQ,MAAM,CAAC,GAAG,aAAa,GAAG,QAAQ,OAAO,CAAC,GAAG;wBAEjE,GAAG,KAAK;;;;;;oBAEV,CAAC,aAAa,YAAY,UAAU,mBACnC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;;;;;;;YAIN,uBACC,8OAAC;gBACC,IAAI,GAAG,QAAQ,MAAM,CAAC;gBACtB,WAAU;gBACV,MAAK;0BAEJ;;;;;;YAGJ,cAAc,CAAC,uBACd,8OAAC;gBACC,IAAI,GAAG,QAAQ,OAAO,CAAC;gBACvB,WAAU;0BAET;;;;;;;;;;;;AAKX;AAGF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/dropdown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Menu, MenuButton, MenuItems, MenuItem, Transition } from '@headlessui/react';\nimport { cn } from './utils';\nimport { ChevronDown, Check } from 'lucide-react';\nimport { Button } from './button';\n\nexport interface DropdownItem {\n  key: string;\n  label: string;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: () => void;\n  href?: string;\n  target?: string;\n  shortcut?: string;\n  danger?: boolean;\n  divider?: boolean;\n}\n\nexport interface DropdownProps {\n  items: DropdownItem[];\n  trigger?: React.ReactNode;\n  label?: string;\n  placeholder?: string;\n  align?: 'start' | 'end';\n  side?: 'bottom' | 'top';\n  className?: string;\n  menuClassName?: string;\n  disabled?: boolean;\n  loading?: boolean;\n}\n\nfunction Dropdown({\n  items,\n  trigger,\n  label,\n  placeholder = 'Select option',\n  align = 'start',\n  side = 'bottom',\n  className,\n  menuClassName,\n  disabled = false,\n  loading = false,\n}: DropdownProps) {\n  const getAlignmentClasses = () => {\n    const alignClasses = {\n      start: 'origin-top-left left-0',\n      end: 'origin-top-right right-0',\n    };\n    \n    const sideClasses = {\n      bottom: 'top-full mt-1',\n      top: 'bottom-full mb-1',\n    };\n    \n    return cn(alignClasses[align], sideClasses[side]);\n  };\n\n  const renderTrigger = () => {\n    if (trigger) return trigger;\n    \n    return (\n      <Button\n        variant=\"outline\"\n        className=\"justify-between\"\n        disabled={disabled || loading}\n      >\n        {label || placeholder}\n        <ChevronDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    );\n  };\n\n  return (\n    <Menu as=\"div\" className={cn('relative inline-block text-left', className)}>\n      <MenuButton as={React.Fragment}>\n        {renderTrigger()}\n      </MenuButton>\n\n      <Transition\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <MenuItems\n          className={cn(\n            'absolute z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md',\n            getAlignmentClasses(),\n            menuClassName\n          )}\n        >\n          {items.map((item) => {\n            if (item.divider) {\n              return (\n                <div\n                  key={item.key}\n                  className=\"my-1 h-px bg-border\"\n                />\n              );\n            }\n\n            return (\n              <MenuItem key={item.key} disabled={item.disabled}>\n                {({ active, disabled: itemDisabled }) => {\n                  const content = (\n                    <div\n                      className={cn(\n                        'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors',\n                        {\n                          'bg-accent text-accent-foreground': active && !itemDisabled,\n                          'text-muted-foreground cursor-not-allowed opacity-50': itemDisabled,\n                          'text-destructive focus:text-destructive': item.danger && !itemDisabled,\n                        }\n                      )}\n                      onClick={item.onClick}\n                    >\n                      {item.icon && (\n                        <span className=\"mr-2 h-4 w-4 flex-shrink-0\">\n                          {item.icon}\n                        </span>\n                      )}\n                      <span className=\"flex-1\">{item.label}</span>\n                      {item.shortcut && (\n                        <span className=\"ml-auto text-xs tracking-widest opacity-60\">\n                          {item.shortcut}\n                        </span>\n                      )}\n                    </div>\n                  );\n\n                  if (item.href) {\n                    return (\n                      <a\n                        href={item.href}\n                        target={item.target}\n                        className=\"block\"\n                      >\n                        {content}\n                      </a>\n                    );\n                  }\n\n                  return content;\n                }}\n              </MenuItem>\n            );\n          })}\n        </MenuItems>\n      </Transition>\n    </Menu>\n  );\n}\n\n// Action dropdown with common actions\nexport interface ActionDropdownProps {\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onDuplicate?: () => void;\n  onView?: () => void;\n  customActions?: DropdownItem[];\n  disabled?: boolean;\n  className?: string;\n}\n\nfunction ActionDropdown({\n  onEdit,\n  onDelete,\n  onDuplicate,\n  onView,\n  customActions = [],\n  disabled = false,\n  className,\n}: ActionDropdownProps) {\n  const defaultActions: DropdownItem[] = [\n    ...(onView ? [{\n      key: 'view',\n      label: 'View',\n      onClick: onView,\n    }] : []),\n    ...(onEdit ? [{\n      key: 'edit',\n      label: 'Edit',\n      onClick: onEdit,\n    }] : []),\n    ...(onDuplicate ? [{\n      key: 'duplicate',\n      label: 'Duplicate',\n      onClick: onDuplicate,\n    }] : []),\n    ...customActions,\n    ...(onDelete ? [\n      { key: 'divider-1', label: '', divider: true },\n      {\n        key: 'delete',\n        label: 'Delete',\n        onClick: onDelete,\n        danger: true,\n      }\n    ] : []),\n  ];\n\n  return (\n    <Dropdown\n      items={defaultActions}\n      trigger={\n        <Button variant=\"ghost\" size=\"icon\" disabled={disabled}>\n          <span className=\"sr-only\">Open menu</span>\n          <svg\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zM12 13a1 1 0 110-2 1 1 0 010 2zM12 20a1 1 0 110-2 1 1 0 010 2z\"\n            />\n          </svg>\n        </Button>\n      }\n      align=\"end\"\n      className={className}\n    />\n  );\n}\n\n// Select dropdown for form inputs\nexport interface SelectDropdownProps {\n  options: {\n    value: string;\n    label: string;\n    disabled?: boolean;\n  }[];\n  value?: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n  error?: boolean;\n}\n\nfunction SelectDropdown({\n  options,\n  value,\n  onChange,\n  placeholder = 'Select option',\n  disabled = false,\n  className,\n  error = false,\n}: SelectDropdownProps) {\n  const selectedOption = options.find(option => option.value === value);\n  \n  const items: DropdownItem[] = options.map(option => ({\n    key: option.value,\n    label: option.label,\n    disabled: option.disabled,\n    onClick: () => onChange?.(option.value),\n    icon: value === option.value ? <Check className=\"h-4 w-4\" /> : undefined,\n  }));\n\n  return (\n    <Dropdown\n      items={items}\n      trigger={\n        <Button\n          variant=\"outline\"\n          className={cn(\n            'w-full justify-between',\n            error && 'border-destructive',\n            className\n          )}\n          disabled={disabled}\n        >\n          {selectedOption ? selectedOption.label : placeholder}\n          <ChevronDown className=\"ml-2 h-4 w-4 opacity-50\" />\n        </Button>\n      }\n      align=\"start\"\n      menuClassName=\"w-full\"\n    />\n  );\n}\n\nexport { Dropdown, ActionDropdown, SelectDropdown };"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;;;;;;;;AA4BA,SAAS,SAAS,EAChB,KAAK,EACL,OAAO,EACP,KAAK,EACL,cAAc,eAAe,EAC7B,QAAQ,OAAO,EACf,OAAO,QAAQ,EACf,SAAS,EACT,aAAa,EACb,WAAW,KAAK,EAChB,UAAU,KAAK,EACD;IACd,MAAM,sBAAsB;QAC1B,MAAM,eAAe;YACnB,OAAO;YACP,KAAK;QACP;QAEA,MAAM,cAAc;YAClB,QAAQ;YACR,KAAK;QACP;QAEA,OAAO,IAAA,+HAAE,EAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,KAAK;IAClD;IAEA,MAAM,gBAAgB;QACpB,IAAI,SAAS,OAAO;QAEpB,qBACE,8OAAC,qIAAM;YACL,SAAQ;YACR,WAAU;YACV,UAAU,YAAY;;gBAErB,SAAS;8BACV,8OAAC,qLAAW;oBAAC,WAAU;;;;;;;;;;;;IAG7B;IAEA,qBACE,8OAAC,mLAAI;QAAC,IAAG;QAAM,WAAW,IAAA,+HAAE,EAAC,mCAAmC;;0BAC9D,8OAAC,yLAAU;gBAAC,IAAI,iNAAc;0BAC3B;;;;;;0BAGH,8OAAC,qMAAU;gBACT,OAAM;gBACN,WAAU;gBACV,SAAQ;gBACR,OAAM;gBACN,WAAU;gBACV,SAAQ;0BAER,cAAA,8OAAC,wLAAS;oBACR,WAAW,IAAA,+HAAE,EACX,iHACA,uBACA;8BAGD,MAAM,GAAG,CAAC,CAAC;wBACV,IAAI,KAAK,OAAO,EAAE;4BAChB,qBACE,8OAAC;gCAEC,WAAU;+BADL,KAAK,GAAG;;;;;wBAInB;wBAEA,qBACE,8OAAC,uLAAQ;4BAAgB,UAAU,KAAK,QAAQ;sCAC7C,CAAC,EAAE,MAAM,EAAE,UAAU,YAAY,EAAE;gCAClC,MAAM,wBACJ,8OAAC;oCACC,WAAW,IAAA,+HAAE,EACX,uHACA;wCACE,oCAAoC,UAAU,CAAC;wCAC/C,uDAAuD;wCACvD,2CAA2C,KAAK,MAAM,IAAI,CAAC;oCAC7D;oCAEF,SAAS,KAAK,OAAO;;wCAEpB,KAAK,IAAI,kBACR,8OAAC;4CAAK,WAAU;sDACb,KAAK,IAAI;;;;;;sDAGd,8OAAC;4CAAK,WAAU;sDAAU,KAAK,KAAK;;;;;;wCACnC,KAAK,QAAQ,kBACZ,8OAAC;4CAAK,WAAU;sDACb,KAAK,QAAQ;;;;;;;;;;;;gCAMtB,IAAI,KAAK,IAAI,EAAE;oCACb,qBACE,8OAAC;wCACC,MAAM,KAAK,IAAI;wCACf,QAAQ,KAAK,MAAM;wCACnB,WAAU;kDAET;;;;;;gCAGP;gCAEA,OAAO;4BACT;2BAzCa,KAAK,GAAG;;;;;oBA4C3B;;;;;;;;;;;;;;;;;AAKV;AAaA,SAAS,eAAe,EACtB,MAAM,EACN,QAAQ,EACR,WAAW,EACX,MAAM,EACN,gBAAgB,EAAE,EAClB,WAAW,KAAK,EAChB,SAAS,EACW;IACpB,MAAM,iBAAiC;WACjC,SAAS;YAAC;gBACZ,KAAK;gBACL,OAAO;gBACP,SAAS;YACX;SAAE,GAAG,EAAE;WACH,SAAS;YAAC;gBACZ,KAAK;gBACL,OAAO;gBACP,SAAS;YACX;SAAE,GAAG,EAAE;WACH,cAAc;YAAC;gBACjB,KAAK;gBACL,OAAO;gBACP,SAAS;YACX;SAAE,GAAG,EAAE;WACJ;WACC,WAAW;YACb;gBAAE,KAAK;gBAAa,OAAO;gBAAI,SAAS;YAAK;YAC7C;gBACE,KAAK;gBACL,OAAO;gBACP,SAAS;gBACT,QAAQ;YACV;SACD,GAAG,EAAE;KACP;IAED,qBACE,8OAAC;QACC,OAAO;QACP,uBACE,8OAAC,qIAAM;YAAC,SAAQ;YAAQ,MAAK;YAAO,UAAU;;8BAC5C,8OAAC;oBAAK,WAAU;8BAAU;;;;;;8BAC1B,8OAAC;oBACC,WAAU;oBACV,MAAK;oBACL,QAAO;oBACP,SAAQ;8BAER,cAAA,8OAAC;wBACC,eAAc;wBACd,gBAAe;wBACf,aAAa;wBACb,GAAE;;;;;;;;;;;;;;;;;QAKV,OAAM;QACN,WAAW;;;;;;AAGjB;AAiBA,SAAS,eAAe,EACtB,OAAO,EACP,KAAK,EACL,QAAQ,EACR,cAAc,eAAe,EAC7B,WAAW,KAAK,EAChB,SAAS,EACT,QAAQ,KAAK,EACO;IACpB,MAAM,iBAAiB,QAAQ,IAAI,CAAC,CAAA,SAAU,OAAO,KAAK,KAAK;IAE/D,MAAM,QAAwB,QAAQ,GAAG,CAAC,CAAA,SAAU,CAAC;YACnD,KAAK,OAAO,KAAK;YACjB,OAAO,OAAO,KAAK;YACnB,UAAU,OAAO,QAAQ;YACzB,SAAS,IAAM,WAAW,OAAO,KAAK;YACtC,MAAM,UAAU,OAAO,KAAK,iBAAG,8OAAC,2KAAK;gBAAC,WAAU;;;;;uBAAe;QACjE,CAAC;IAED,qBACE,8OAAC;QACC,OAAO;QACP,uBACE,8OAAC,qIAAM;YACL,SAAQ;YACR,WAAW,IAAA,+HAAE,EACX,0BACA,SAAS,sBACT;YAEF,UAAU;;gBAET,iBAAiB,eAAe,KAAK,GAAG;8BACzC,8OAAC,qLAAW;oBAAC,WAAU;;;;;;;;;;;;QAG3B,OAAM;QACN,eAAc;;;;;;AAGpB","debugId":null}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/menu/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\nimport { \n  Menu, \n  MenuGroup, \n  MenuItem, \n  MenuTreeNode, \n  ModifierGroup, \n  ModifierOption,\n  PricingStrategy,\n  ChannelVisibility,\n  MenuFilters,\n  DragItem,\n  DropResult \n} from './types';\n\n// Utility function for merging class names\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// Price calculation utilities\nexport function calculateItemPrice(\n  item: MenuItem,\n  channel?: string,\n  date?: Date,\n  location?: string\n): number {\n  let effectivePrice = item.basePrice;\n  \n  // Find applicable pricing strategies\n  const applicableStrategies = item.pricingStrategies\n    .filter(strategy => isPricingStrategyApplicable(strategy, channel, date, location))\n    .sort((a, b) => b.priority - a.priority); // Higher priority first\n  \n  // Apply the highest priority strategy\n  if (applicableStrategies.length > 0) {\n    const strategy = applicableStrategies[0];\n    const strategyPrice = strategy.prices.find(p => \n      (!p.validFrom || new Date(p.validFrom) <= (date || new Date())) &&\n      (!p.validTo || new Date(p.validTo) >= (date || new Date()))\n    );\n    \n    if (strategyPrice) {\n      effectivePrice = strategyPrice.amount;\n    }\n  }\n  \n  return effectivePrice;\n}\n\nexport function calculateModifierPrice(\n  option: ModifierOption,\n  channel?: string,\n  date?: Date,\n  location?: string\n): number {\n  let effectivePrice = option.price;\n  \n  const applicableStrategies = option.pricingStrategies\n    .filter(strategy => isPricingStrategyApplicable(strategy, channel, date, location))\n    .sort((a, b) => b.priority - a.priority);\n  \n  if (applicableStrategies.length > 0) {\n    const strategy = applicableStrategies[0];\n    const strategyPrice = strategy.prices.find(p => \n      (!p.validFrom || new Date(p.validFrom) <= (date || new Date())) &&\n      (!p.validTo || new Date(p.validTo) >= (date || new Date()))\n    );\n    \n    if (strategyPrice) {\n      effectivePrice = strategyPrice.amount;\n    }\n  }\n  \n  return effectivePrice;\n}\n\nfunction isPricingStrategyApplicable(\n  strategy: PricingStrategy,\n  channel?: string,\n  date?: Date,\n  location?: string\n): boolean {\n  const currentDate = date || new Date();\n  const currentDay = currentDate.getDay();\n  const currentTime = currentDate.getHours() * 60 + currentDate.getMinutes();\n  \n  switch (strategy.type) {\n    case 'base':\n      return true;\n      \n    case 'time_based':\n      if (strategy.conditions?.startTime && strategy.conditions?.endTime) {\n        const startTime = parseTimeString(strategy.conditions.startTime);\n        const endTime = parseTimeString(strategy.conditions.endTime);\n        return currentTime >= startTime && currentTime <= endTime;\n      }\n      return true;\n      \n    case 'day_of_week':\n      if (strategy.conditions?.daysOfWeek) {\n        return strategy.conditions.daysOfWeek.includes(currentDay);\n      }\n      return true;\n      \n    case 'location_based':\n      if (strategy.conditions?.locationIds && location) {\n        return strategy.conditions.locationIds.includes(location);\n      }\n      return true;\n      \n    case 'menu_specific':\n      if (strategy.conditions?.channelId && channel) {\n        return strategy.conditions.channelId === channel;\n      }\n      return true;\n      \n    default:\n      return true;\n  }\n}\n\nfunction parseTimeString(timeStr: string): number {\n  const [hours, minutes] = timeStr.split(':').map(Number);\n  return hours * 60 + minutes;\n}\n\n// Availability utilities\nexport function isItemAvailable(\n  item: MenuItem,\n  channel?: string,\n  date?: Date\n): boolean {\n  if (!item.isActive || !item.isAvailable) {\n    return false;\n  }\n  \n  const currentDate = date || new Date();\n  \n  // Check channel visibility\n  if (channel) {\n    const channelConfig = item.channelVisibility.find(cv => cv.channelId === channel);\n    if (channelConfig && !channelConfig.isVisible) {\n      return false;\n    }\n    \n    // Check time-based availability for channel\n    if (channelConfig && (channelConfig.availableFrom || channelConfig.availableTo)) {\n      const currentTime = formatTime(currentDate);\n      if (channelConfig.availableFrom && currentTime < channelConfig.availableFrom) {\n        return false;\n      }\n      if (channelConfig.availableTo && currentTime > channelConfig.availableTo) {\n        return false;\n      }\n    }\n    \n    // Check day-based availability for channel\n    if (channelConfig && channelConfig.daysOfWeek) {\n      const currentDay = currentDate.getDay();\n      if (!channelConfig.daysOfWeek.includes(currentDay)) {\n        return false;\n      }\n    }\n  }\n  \n  // Check inventory\n  if (item.trackInventory && item.stockQuantity !== undefined) {\n    return item.stockQuantity > 0;\n  }\n  \n  return true;\n}\n\nexport function isGroupAvailable(\n  group: MenuGroup,\n  channel?: string,\n  date?: Date\n): boolean {\n  if (!group.isActive) {\n    return false;\n  }\n  \n  const currentDate = date || new Date();\n  \n  // Check time-based availability\n  if (group.availableFrom || group.availableTo) {\n    const currentTime = formatTime(currentDate);\n    if (group.availableFrom && currentTime < group.availableFrom) {\n      return false;\n    }\n    if (group.availableTo && currentTime > group.availableTo) {\n      return false;\n    }\n  }\n  \n  // Check day-based availability\n  if (group.daysOfWeek) {\n    const currentDay = currentDate.getDay();\n    if (!group.daysOfWeek.includes(currentDay)) {\n      return false;\n    }\n  }\n  \n  // Check channel visibility\n  if (channel) {\n    const channelConfig = group.channelVisibility.find(cv => cv.channelId === channel);\n    if (channelConfig && !channelConfig.isVisible) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nexport function isMenuAvailable(\n  menu: Menu,\n  channel?: string,\n  date?: Date\n): boolean {\n  if (!menu.isActive) {\n    return false;\n  }\n  \n  const currentDate = date || new Date();\n  \n  // Check date range\n  if (menu.validFrom && currentDate < menu.validFrom) {\n    return false;\n  }\n  if (menu.validTo && currentDate > menu.validTo) {\n    return false;\n  }\n  \n  // Check time-based availability\n  if (menu.availableFrom || menu.availableTo) {\n    const currentTime = formatTime(currentDate);\n    if (menu.availableFrom && currentTime < menu.availableFrom) {\n      return false;\n    }\n    if (menu.availableTo && currentTime > menu.availableTo) {\n      return false;\n    }\n  }\n  \n  // Check day-based availability\n  if (menu.daysOfWeek) {\n    const currentDay = currentDate.getDay();\n    if (!menu.daysOfWeek.includes(currentDay)) {\n      return false;\n    }\n  }\n  \n  // Check channel visibility\n  if (channel) {\n    const channelConfig = menu.channelVisibility.find(cv => cv.channelId === channel);\n    if (channelConfig && !channelConfig.isVisible) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nfunction formatTime(date: Date): string {\n  return date.toTimeString().slice(0, 5); // \"HH:mm\"\n}\n\n// Tree structure utilities\nexport function buildMenuTree(menus: Menu[]): MenuTreeNode[] {\n  return menus.map(menu => ({\n    id: menu.id,\n    type: 'menu' as const,\n    name: menu.name,\n    description: menu.description,\n    isActive: menu.isActive,\n    sortOrder: menu.sortOrder,\n    children: buildGroupTree(menu.groups, menu.id),\n    data: menu\n  })).sort((a, b) => a.sortOrder - b.sortOrder);\n}\n\nfunction buildGroupTree(groups: MenuGroup[], parentId?: string): MenuTreeNode[] {\n  const rootGroups = groups.filter(group => group.parentGroupId === parentId);\n  \n  return rootGroups.map(group => ({\n    id: group.id,\n    type: 'group' as const,\n    name: group.name,\n    description: group.description,\n    isActive: group.isActive,\n    sortOrder: group.sortOrder,\n    parentId,\n    children: [\n      ...buildGroupTree(groups, group.id),\n      ...group.items.map(item => ({\n        id: item.id,\n        type: 'item' as const,\n        name: item.name,\n        description: item.description,\n        isActive: item.isActive,\n        sortOrder: item.sortOrder,\n        parentId: group.id,\n        children: [],\n        data: item\n      }))\n    ].sort((a, b) => a.sortOrder - b.sortOrder),\n    data: group\n  })).sort((a, b) => a.sortOrder - b.sortOrder);\n}\n\nexport function flattenMenuTree(nodes: MenuTreeNode[]): MenuTreeNode[] {\n  const result: MenuTreeNode[] = [];\n  \n  function flatten(nodes: MenuTreeNode[], depth = 0) {\n    nodes.forEach(node => {\n      result.push({ ...node, children: [] });\n      if (node.children.length > 0) {\n        flatten(node.children, depth + 1);\n      }\n    });\n  }\n  \n  flatten(nodes);\n  return result;\n}\n\nexport function findNodeInTree(\n  nodes: MenuTreeNode[], \n  id: string\n): MenuTreeNode | null {\n  for (const node of nodes) {\n    if (node.id === id) {\n      return node;\n    }\n    \n    const found = findNodeInTree(node.children, id);\n    if (found) {\n      return found;\n    }\n  }\n  \n  return null;\n}\n\nexport function getNodePath(\n  nodes: MenuTreeNode[], \n  id: string, \n  path: string[] = []\n): string[] | null {\n  for (const node of nodes) {\n    const currentPath = [...path, node.name];\n    \n    if (node.id === id) {\n      return currentPath;\n    }\n    \n    const foundPath = getNodePath(node.children, id, currentPath);\n    if (foundPath) {\n      return foundPath;\n    }\n  }\n  \n  return null;\n}\n\n// Search and filter utilities\nexport function filterMenuItems(\n  items: MenuItem[], \n  filters: MenuFilters,\n  channel?: string,\n  date?: Date\n): MenuItem[] {\n  return items.filter(item => {\n    // Search filter\n    if (filters.search) {\n      const searchTerm = filters.search.toLowerCase();\n      if (!item.name.toLowerCase().includes(searchTerm) &&\n          !item.description?.toLowerCase().includes(searchTerm) &&\n          !item.tags.some(tag => tag.toLowerCase().includes(searchTerm))) {\n        return false;\n      }\n    }\n    \n    // Menu/Group filter\n    if (filters.menuId && item.menuGroupId) {\n      // This would need to be expanded based on how you store menu relationships\n      // For now, assuming a simple check\n    }\n    \n    // Active filter\n    if (filters.isActive !== undefined && item.isActive !== filters.isActive) {\n      return false;\n    }\n    \n    // Availability filter\n    if (filters.isAvailable !== undefined) {\n      const available = isItemAvailable(item, channel, date);\n      if (available !== filters.isAvailable) {\n        return false;\n      }\n    }\n    \n    // Price range filter\n    if (filters.priceRange) {\n      const price = calculateItemPrice(item, channel, date);\n      if (price < filters.priceRange[0] || price > filters.priceRange[1]) {\n        return false;\n      }\n    }\n    \n    // Allergen filter\n    if (filters.allergens && filters.allergens.length > 0) {\n      const hasAllergen = filters.allergens.some(allergen => \n        item.allergens.includes(allergen)\n      );\n      if (hasAllergen) {\n        return false;\n      }\n    }\n    \n    // Dietary restrictions filter\n    if (filters.dietaryRestrictions && filters.dietaryRestrictions.length > 0) {\n      const hasRestriction = filters.dietaryRestrictions.every(restriction =>\n        item.dietaryRestrictions.includes(restriction)\n      );\n      if (!hasRestriction) {\n        return false;\n      }\n    }\n    \n    // Tags filter\n    if (filters.tags && filters.tags.length > 0) {\n      const hasTag = filters.tags.some(tag => item.tags.includes(tag));\n      if (!hasTag) {\n        return false;\n      }\n    }\n    \n    return true;\n  });\n}\n\n// Sorting utilities\nexport function sortMenuItems(\n  items: MenuItem[], \n  field: string, \n  direction: 'asc' | 'desc' = 'asc',\n  channel?: string,\n  date?: Date\n): MenuItem[] {\n  return [...items].sort((a, b) => {\n    let aValue: any;\n    let bValue: any;\n    \n    switch (field) {\n      case 'name':\n        aValue = a.name.toLowerCase();\n        bValue = b.name.toLowerCase();\n        break;\n      case 'basePrice':\n        aValue = calculateItemPrice(a, channel, date);\n        bValue = calculateItemPrice(b, channel, date);\n        break;\n      case 'sortOrder':\n        aValue = a.sortOrder;\n        bValue = b.sortOrder;\n        break;\n      case 'createdAt':\n        aValue = a.createdAt.getTime();\n        bValue = b.createdAt.getTime();\n        break;\n      case 'updatedAt':\n        aValue = a.updatedAt.getTime();\n        bValue = b.updatedAt.getTime();\n        break;\n      default:\n        aValue = a[field as keyof MenuItem];\n        bValue = b[field as keyof MenuItem];\n    }\n    \n    if (aValue < bValue) {\n      return direction === 'asc' ? -1 : 1;\n    }\n    if (aValue > bValue) {\n      return direction === 'asc' ? 1 : -1;\n    }\n    return 0;\n  });\n}\n\n// Validation utilities\nexport function validateModifierSelections(\n  group: ModifierGroup,\n  selectedOptions: { optionId: string; quantity: number }[]\n): { isValid: boolean; errors: string[] } {\n  const errors: string[] = [];\n  let isValid = true;\n  \n  const totalSelections = selectedOptions.reduce((sum, sel) => sum + sel.quantity, 0);\n  \n  // Check minimum selections\n  if (totalSelections < group.minSelections) {\n    errors.push(`Minimum ${group.minSelections} selection(s) required for ${group.name}`);\n    isValid = false;\n  }\n  \n  // Check maximum selections\n  if (group.maxSelections && totalSelections > group.maxSelections) {\n    errors.push(`Maximum ${group.maxSelections} selection(s) allowed for ${group.name}`);\n    isValid = false;\n  }\n  \n  // Check individual option max quantities\n  selectedOptions.forEach(selection => {\n    const option = group.options.find(opt => opt.id === selection.optionId);\n    if (option && option.maxQuantity && selection.quantity > option.maxQuantity) {\n      errors.push(`Maximum ${option.maxQuantity} of ${option.name} allowed`);\n      isValid = false;\n    }\n  });\n  \n  // Check if required and no selections\n  if (group.isRequired && totalSelections === 0) {\n    errors.push(`${group.name} is required`);\n    isValid = false;\n  }\n  \n  return { isValid, errors };\n}\n\n// Drag and drop utilities\nexport function canDropItem(\n  dragItem: DragItem,\n  targetId: string,\n  position: 'before' | 'after' | 'inside',\n  targetType: 'menu' | 'group' | 'item'\n): boolean {\n  // Prevent dropping on self\n  if (dragItem.id === targetId) {\n    return false;\n  }\n  \n  // Business rules for what can be dropped where\n  switch (dragItem.type) {\n    case 'menu':\n      // Menus can only be reordered with other menus\n      return targetType === 'menu' && position !== 'inside';\n      \n    case 'group':\n      // Groups can be moved to menus or other groups\n      if (targetType === 'menu' && position === 'inside') return true;\n      if (targetType === 'group' && position !== 'inside') return true;\n      return false;\n      \n    case 'item':\n      // Items can be moved to groups or reordered with other items\n      if (targetType === 'group' && position === 'inside') return true;\n      if (targetType === 'item' && position !== 'inside') return true;\n      return false;\n      \n    default:\n      return false;\n  }\n}\n\nexport function calculateDropResult(\n  dragItem: DragItem,\n  targetId: string,\n  position: 'before' | 'after' | 'inside'\n): DropResult {\n  return {\n    draggedId: dragItem.id,\n    targetId,\n    position,\n    type: position === 'inside' ? 'move' : 'reorder'\n  };\n}\n\n// Format utilities\nexport function formatPrice(\n  amount: number, \n  currency = 'USD',\n  locale = 'en-US'\n): string {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits: 2,\n  }).format(amount);\n}\n\nexport function formatPrepTime(minutes: number): string {\n  if (minutes < 60) {\n    return `${minutes}m`;\n  }\n  \n  const hours = Math.floor(minutes / 60);\n  const remainingMinutes = minutes % 60;\n  \n  if (remainingMinutes === 0) {\n    return `${hours}h`;\n  }\n  \n  return `${hours}h ${remainingMinutes}m`;\n}\n\nexport function formatStockStatus(\n  quantity?: number,\n  threshold?: number\n): { status: 'in_stock' | 'low_stock' | 'out_of_stock'; label: string; variant: 'default' | 'warning' | 'destructive' } {\n  if (quantity === undefined) {\n    return { status: 'in_stock', label: 'Not tracked', variant: 'default' };\n  }\n  \n  if (quantity === 0) {\n    return { status: 'out_of_stock', label: 'Out of stock', variant: 'destructive' };\n  }\n  \n  if (threshold && quantity <= threshold) {\n    return { status: 'low_stock', label: `Low stock (${quantity})`, variant: 'warning' };\n  }\n  \n  return { status: 'in_stock', label: `In stock (${quantity})`, variant: 'default' };\n}\n\n// Helper function to generate unique IDs (you might want to use a more robust solution)\nexport function generateId(): string {\n  return Math.random().toString(36).substr(2, 9);\n}\n\n// Deep clone utility for form state management\nexport function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') return obj;\n  if (obj instanceof Date) return new Date(obj.getTime()) as any;\n  if (obj instanceof Array) return obj.map(item => deepClone(item)) as any;\n  if (typeof obj === 'object') {\n    const clonedObj: any = {};\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        clonedObj[key] = deepClone(obj[key]);\n      }\n    }\n    return clonedObj;\n  }\n  return obj;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1360, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/menu/menu-tree-navigator.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useMemo } from 'react';\nimport { \n  ChevronRight, \n  ChevronDown, \n  Menu as MenuIcon, \n  FolderOpen, \n  Folder, \n  FileText,\n  Plus,\n  MoreHorizontal,\n  Eye,\n  EyeOff,\n  Edit,\n  Trash2,\n  GripVertical\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Dropdown } from '@/components/ui/dropdown';\nimport { cn } from '@/lib/menu/utils';\nimport { MenuTreeNode, Menu, MenuGroup, MenuItem, DragItem } from '@/lib/menu/types';\n\ninterface MenuTreeNavigatorProps {\n  data: MenuTreeNode[];\n  selectedId?: string;\n  expandedIds?: string[];\n  onSelect?: (node: MenuTreeNode) => void;\n  onExpand?: (id: string, expanded: boolean) => void;\n  onCreate?: (type: 'menu' | 'group' | 'item', parentId?: string) => void;\n  onEdit?: (node: MenuTreeNode) => void;\n  onDelete?: (node: MenuTreeNode) => void;\n  onToggleVisibility?: (node: MenuTreeNode) => void;\n  onDragStart?: (node: MenuTreeNode) => void;\n  onDragOver?: (node: MenuTreeNode, position: 'before' | 'after' | 'inside') => void;\n  onDrop?: (dragNode: MenuTreeNode, targetNode: MenuTreeNode, position: 'before' | 'after' | 'inside') => void;\n  className?: string;\n  searchable?: boolean;\n  draggable?: boolean;\n  showActions?: boolean;\n}\n\nexport function MenuTreeNavigator({\n  data,\n  selectedId,\n  expandedIds = [],\n  onSelect,\n  onExpand,\n  onCreate,\n  onEdit,\n  onDelete,\n  onToggleVisibility,\n  onDragStart,\n  onDragOver,\n  onDrop,\n  className,\n  searchable = true,\n  draggable = false,\n  showActions = true,\n}: MenuTreeNavigatorProps) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [draggedNode, setDraggedNode] = useState<MenuTreeNode | null>(null);\n  const [dragOverNode, setDragOverNode] = useState<{ node: MenuTreeNode; position: 'before' | 'after' | 'inside' } | null>(null);\n\n  // Filter nodes based on search term\n  const filteredData = useMemo(() => {\n    if (!searchTerm) return data;\n    \n    const filterNodes = (nodes: MenuTreeNode[]): MenuTreeNode[] => {\n      return nodes.reduce((acc, node) => {\n        const matchesSearch = node.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                            node.description?.toLowerCase().includes(searchTerm.toLowerCase());\n        \n        const filteredChildren = filterNodes(node.children);\n        \n        if (matchesSearch || filteredChildren.length > 0) {\n          acc.push({\n            ...node,\n            children: filteredChildren\n          });\n        }\n        \n        return acc;\n      }, [] as MenuTreeNode[]);\n    };\n    \n    return filterNodes(data);\n  }, [data, searchTerm]);\n\n  const handleExpand = useCallback((id: string) => {\n    const isExpanded = expandedIds.includes(id);\n    onExpand?.(id, !isExpanded);\n  }, [expandedIds, onExpand]);\n\n  const handleDragStart = useCallback((e: React.DragEvent, node: MenuTreeNode) => {\n    if (!draggable) return;\n    \n    setDraggedNode(node);\n    onDragStart?.(node);\n    \n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('text/plain', node.id);\n  }, [draggable, onDragStart]);\n\n  const handleDragOver = useCallback((e: React.DragEvent, node: MenuTreeNode, position: 'before' | 'after' | 'inside') => {\n    if (!draggable || !draggedNode) return;\n    \n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    \n    setDragOverNode({ node, position });\n    onDragOver?.(node, position);\n  }, [draggable, draggedNode, onDragOver]);\n\n  const handleDrop = useCallback((e: React.DragEvent, node: MenuTreeNode, position: 'before' | 'after' | 'inside') => {\n    if (!draggable || !draggedNode) return;\n    \n    e.preventDefault();\n    \n    setDragOverNode(null);\n    onDrop?.(draggedNode, node, position);\n    setDraggedNode(null);\n  }, [draggable, draggedNode, onDrop]);\n\n  const getNodeIcon = (node: MenuTreeNode, isExpanded: boolean) => {\n    switch (node.type) {\n      case 'menu':\n        return <MenuIcon className=\"h-4 w-4\" />;\n      case 'group':\n        return isExpanded ? <FolderOpen className=\"h-4 w-4\" /> : <Folder className=\"h-4 w-4\" />;\n      case 'item':\n        return <FileText className=\"h-4 w-4\" />;\n      default:\n        return <FileText className=\"h-4 w-4\" />;\n    }\n  };\n\n  const renderNode = (node: MenuTreeNode, depth = 0) => {\n    const isExpanded = expandedIds.includes(node.id);\n    const isSelected = selectedId === node.id;\n    const hasChildren = node.children.length > 0;\n    const isDraggedOver = dragOverNode?.node.id === node.id;\n\n    return (\n      <div key={node.id} className={cn(\"select-none\", isDraggedOver && \"opacity-50\")}>\n        <div\n          className={cn(\n            \"flex items-center group hover:bg-gray-50 rounded px-2 py-1 cursor-pointer\",\n            isSelected && \"bg-blue-50 border-r-2 border-blue-500\",\n            isDraggedOver && \"bg-blue-100\"\n          )}\n          style={{ paddingLeft: `${depth * 16 + 8}px` }}\n          onClick={() => onSelect?.(node)}\n          draggable={draggable}\n          onDragStart={(e) => handleDragStart(e, node)}\n          onDragOver={(e) => handleDragOver(e, node, 'inside')}\n          onDrop={(e) => handleDrop(e, node, 'inside')}\n        >\n          {/* Drag handle */}\n          {draggable && showActions && (\n            <GripVertical className=\"h-3 w-3 text-gray-400 mr-1 opacity-0 group-hover:opacity-100\" />\n          )}\n\n          {/* Expand/collapse button */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"h-4 w-4 p-0 hover:bg-transparent\"\n            onClick={(e) => {\n              e.stopPropagation();\n              handleExpand(node.id);\n            }}\n            disabled={!hasChildren}\n          >\n            {hasChildren ? (\n              isExpanded ? (\n                <ChevronDown className=\"h-3 w-3\" />\n              ) : (\n                <ChevronRight className=\"h-3 w-3\" />\n              )\n            ) : (\n              <div className=\"h-3 w-3\" />\n            )}\n          </Button>\n\n          {/* Node icon */}\n          <div className=\"flex items-center text-gray-500 mr-2\">\n            {getNodeIcon(node, isExpanded)}\n          </div>\n\n          {/* Node name and info */}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"flex items-center\">\n              <span className={cn(\n                \"text-sm truncate\",\n                !node.isActive && \"text-gray-400 line-through\"\n              )}>\n                {node.name}\n              </span>\n              {!node.isActive && (\n                <EyeOff className=\"h-3 w-3 text-gray-400 ml-1\" />\n              )}\n            </div>\n            \n            {/* Item-specific info */}\n            {node.type === 'item' && (\n              <div className=\"flex items-center space-x-1 mt-1\">\n                {(node.data as MenuItem).basePrice && (\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    ${(node.data as MenuItem).basePrice.toFixed(2)}\n                  </Badge>\n                )}\n                {!(node.data as MenuItem).isAvailable && (\n                  <Badge variant=\"destructive\" className=\"text-xs\">\n                    Unavailable\n                  </Badge>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Actions dropdown */}\n          {showActions && (\n            <div className=\"opacity-0 group-hover:opacity-100\">\n              <Dropdown\n                trigger={\n                  <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n                    <MoreHorizontal className=\"h-3 w-3\" />\n                  </Button>\n                }\n                items={[\n                  {\n                    label: 'Edit',\n                    icon: <Edit className=\"h-3 w-3\" />,\n                    onClick: () => onEdit?.(node),\n                  },\n                  {\n                    label: node.isActive ? 'Hide' : 'Show',\n                    icon: node.isActive ? <EyeOff className=\"h-3 w-3\" /> : <Eye className=\"h-3 w-3\" />,\n                    onClick: () => onToggleVisibility?.(node),\n                  },\n                  { type: 'separator' },\n                  ...(node.type !== 'item' ? [\n                    {\n                      label: `Add ${node.type === 'menu' ? 'Group' : 'Item'}`,\n                      icon: <Plus className=\"h-3 w-3\" />,\n                      onClick: () => onCreate?.(node.type === 'menu' ? 'group' : 'item', node.id),\n                    },\n                  ] : []),\n                  { type: 'separator' },\n                  {\n                    label: 'Delete',\n                    icon: <Trash2 className=\"h-3 w-3\" />,\n                    onClick: () => onDelete?.(node),\n                    className: 'text-red-600',\n                  },\n                ]}\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Drop zones for before/after positioning */}\n        {draggable && draggedNode && draggedNode.id !== node.id && (\n          <>\n            <div\n              className=\"h-1 bg-blue-500 opacity-0 hover:opacity-100\"\n              style={{ marginLeft: `${depth * 16 + 8}px` }}\n              onDragOver={(e) => handleDragOver(e, node, 'before')}\n              onDrop={(e) => handleDrop(e, node, 'before')}\n            />\n          </>\n        )}\n\n        {/* Children */}\n        {isExpanded && hasChildren && (\n          <div className=\"ml-2\">\n            {node.children.map((child) => renderNode(child, depth + 1))}\n          </div>\n        )}\n\n        {/* Drop zone after */}\n        {draggable && draggedNode && draggedNode.id !== node.id && (\n          <div\n            className=\"h-1 bg-blue-500 opacity-0 hover:opacity-100\"\n            style={{ marginLeft: `${depth * 16 + 8}px` }}\n            onDragOver={(e) => handleDragOver(e, node, 'after')}\n            onDrop={(e) => handleDrop(e, node, 'after')}\n          />\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className={cn(\"bg-white border rounded-lg\", className)}>\n      {/* Header */}\n      <div className=\"p-4 border-b\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h3 className=\"font-semibold text-lg\">Menu Structure</h3>\n          {showActions && onCreate && (\n            <Button\n              size=\"sm\"\n              onClick={() => onCreate('menu')}\n              className=\"h-8\"\n            >\n              <Plus className=\"h-3 w-3 mr-1\" />\n              Menu\n            </Button>\n          )}\n        </div>\n\n        {/* Search */}\n        {searchable && (\n          <Input\n            placeholder=\"Search menus...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"h-8\"\n          />\n        )}\n      </div>\n\n      {/* Tree */}\n      <div className=\"p-2 max-h-96 overflow-y-auto\">\n        {filteredData.length === 0 ? (\n          <div className=\"text-center py-8 text-gray-500\">\n            {searchTerm ? 'No matching items found' : 'No menus created yet'}\n          </div>\n        ) : (\n          <div className=\"space-y-1\">\n            {filteredData.map((node) => renderNode(node))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1872, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface SkeletonProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'circular' | 'text' | 'card';\n  width?: string | number;\n  height?: string | number;\n  lines?: number; // For text variant\n  animate?: boolean;\n}\n\nfunction Skeleton({\n  className,\n  variant = 'default',\n  width,\n  height,\n  lines = 1,\n  animate = true,\n  style,\n  ...props\n}: SkeletonProps) {\n  const baseClasses = cn(\n    'bg-muted',\n    animate && 'animate-pulse',\n    {\n      'rounded-md': variant === 'default' || variant === 'card',\n      'rounded-full': variant === 'circular',\n      'rounded': variant === 'text',\n    },\n    className\n  );\n\n  const inlineStyles = {\n    width: width,\n    height: height,\n    ...style,\n  };\n\n  // For text variant with multiple lines\n  if (variant === 'text' && lines > 1) {\n    return (\n      <div className=\"space-y-2\" {...props}>\n        {Array.from({ length: lines }, (_, i) => (\n          <div\n            key={i}\n            className={cn(\n              baseClasses,\n              i === lines - 1 ? 'w-3/4' : 'w-full' // Last line is shorter\n            )}\n            style={{\n              height: height || '1rem',\n              width: i === lines - 1 ? '75%' : width || '100%',\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Default height based on variant\n  const getDefaultHeight = () => {\n    if (height) return height;\n    switch (variant) {\n      case 'text':\n        return '1rem';\n      case 'circular':\n        return '2.5rem';\n      case 'card':\n        return '8rem';\n      default:\n        return '1.25rem';\n    }\n  };\n\n  // Default width based on variant\n  const getDefaultWidth = () => {\n    if (width) return width;\n    switch (variant) {\n      case 'circular':\n        return '2.5rem';\n      default:\n        return '100%';\n    }\n  };\n\n  const defaultHeight = getDefaultHeight();\n  const defaultWidth = getDefaultWidth();\n\n  return (\n    <div\n      className={baseClasses}\n      style={{\n        ...inlineStyles,\n        height: inlineStyles.height || defaultHeight,\n        width: inlineStyles.width || defaultWidth,\n      }}\n      {...props}\n    />\n  );\n}\n\n// Predefined skeleton patterns for common use cases\nexport function SkeletonCard({ className, ...props }: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      <Skeleton variant=\"card\" height=\"12rem\" />\n      <div className=\"space-y-2\">\n        <Skeleton height=\"1.25rem\" />\n        <Skeleton height=\"1rem\" width=\"80%\" />\n      </div>\n    </div>\n  );\n}\n\nexport function SkeletonAvatar({ \n  className, \n  size = 'md',\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { size?: 'sm' | 'md' | 'lg' }) {\n  const sizeMap = {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem',\n  };\n  \n  return (\n    <Skeleton\n      variant=\"circular\"\n      width={sizeMap[size]}\n      height={sizeMap[size]}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonText({ \n  lines = 3,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <Skeleton\n      variant=\"text\"\n      lines={lines}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { rows?: number; columns?: number }) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex space-x-4\">\n        {Array.from({ length: columns }, (_, i) => (\n          <Skeleton key={`header-${i}`} height=\"1.5rem\" className=\"flex-1\" />\n        ))}\n      </div>\n      {/* Rows */}\n      {Array.from({ length: rows }, (_, rowIndex) => (\n        <div key={`row-${rowIndex}`} className=\"flex space-x-4\">\n          {Array.from({ length: columns }, (_, colIndex) => (\n            <Skeleton key={`cell-${rowIndex}-${colIndex}`} height=\"1.25rem\" className=\"flex-1\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport { Skeleton };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2091, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/data-table.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n  PaginationState,\n} from '@tanstack/react-table';\nimport { cn } from './utils';\nimport { Button } from './button';\nimport { Input } from './input';\nimport { Skeleton } from './skeleton';\nimport {\n  ChevronLeft,\n  ChevronRight,\n  ChevronsLeft,\n  ChevronsRight,\n  ArrowUpDown,\n  ArrowUp,\n  ArrowDown,\n  Search,\n  Filter,\n  Download,\n  Settings,\n} from 'lucide-react';\n\nexport interface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n  loading?: boolean;\n  searchable?: boolean;\n  searchPlaceholder?: string;\n  filterable?: boolean;\n  exportable?: boolean;\n  selectable?: boolean;\n  pagination?: boolean;\n  pageSize?: number;\n  className?: string;\n  onRowClick?: (row: TData) => void;\n  onExport?: () => void;\n  toolbar?: React.ReactNode;\n}\n\nfunction DataTable<TData, TValue>({\n  columns,\n  data,\n  loading = false,\n  searchable = true,\n  searchPlaceholder = 'Search...',\n  filterable = false,\n  exportable = false,\n  selectable = false,\n  pagination = true,\n  pageSize = 10,\n  className,\n  onRowClick,\n  onExport,\n  toolbar,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n  const [globalFilter, setGlobalFilter] = React.useState('');\n  const [paginationState, setPaginationState] = React.useState<PaginationState>({\n    pageIndex: 0,\n    pageSize,\n  });\n\n  const table = useReactTable({\n    data,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    onGlobalFilterChange: setGlobalFilter,\n    onPaginationChange: setPaginationState,\n    globalFilterFn: 'includesString',\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n      globalFilter,\n      pagination: paginationState,\n    },\n  });\n\n  const getSortIcon = (isSorted: false | 'asc' | 'desc') => {\n    if (isSorted === 'asc') return <ArrowUp className=\"h-4 w-4\" />;\n    if (isSorted === 'desc') return <ArrowDown className=\"h-4 w-4\" />;\n    return <ArrowUpDown className=\"h-4 w-4\" />;\n  };\n\n  return (\n    <div className={cn('space-y-4', className)}>\n      {/* Toolbar */}\n      {(searchable || filterable || exportable || toolbar) && (\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            {searchable && (\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n                <Input\n                  placeholder={searchPlaceholder}\n                  value={globalFilter}\n                  onChange={(e) => setGlobalFilter(e.target.value)}\n                  className=\"pl-9 w-[250px]\"\n                />\n              </div>\n            )}\n            {filterable && (\n              <Button variant=\"outline\" size=\"sm\">\n                <Filter className=\"mr-2 h-4 w-4\" />\n                Filter\n              </Button>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            {toolbar}\n            {exportable && (\n              <Button variant=\"outline\" size=\"sm\" onClick={onExport}>\n                <Download className=\"mr-2 h-4 w-4\" />\n                Export\n              </Button>\n            )}\n            <Button variant=\"outline\" size=\"sm\">\n              <Settings className=\"mr-2 h-4 w-4\" />\n              Columns\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Table */}\n      <div className=\"rounded-md border\">\n        <table className=\"w-full\">\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id} className=\"border-b\">\n                {headerGroup.headers.map((header) => (\n                  <th\n                    key={header.id}\n                    className=\"h-12 px-4 text-left align-middle font-medium text-muted-foreground\"\n                  >\n                    {header.isPlaceholder ? null : (\n                      <div\n                        className={cn(\n                          'flex items-center space-x-2',\n                          header.column.getCanSort() && 'cursor-pointer select-none hover:text-foreground'\n                        )}\n                        onClick={header.column.getToggleSortingHandler()}\n                      >\n                        <span>\n                          {flexRender(header.column.columnDef.header, header.getContext())}\n                        </span>\n                        {header.column.getCanSort() && (\n                          <span className=\"text-muted-foreground\">\n                            {getSortIcon(header.column.getIsSorted())}\n                          </span>\n                        )}\n                      </div>\n                    )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {loading ? (\n              // Loading skeleton\n              Array.from({ length: pageSize }, (_, index) => (\n                <tr key={index}>\n                  {columns.map((_, columnIndex) => (\n                    <td key={columnIndex} className=\"p-4\">\n                      <Skeleton height=\"1.25rem\" />\n                    </td>\n                  ))}\n                </tr>\n              ))\n            ) : table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <tr\n                  key={row.id}\n                  className={cn(\n                    'border-b transition-colors hover:bg-muted/50',\n                    row.getIsSelected() && 'bg-muted',\n                    onRowClick && 'cursor-pointer'\n                  )}\n                  onClick={() => onRowClick?.(row.original)}\n                  data-state={row.getIsSelected() && 'selected'}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <td key={cell.id} className=\"p-4 align-middle\">\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={columns.length} className=\"h-24 text-center\">\n                  No results.\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Pagination */}\n      {pagination && (\n        <div className=\"flex items-center justify-between px-2\">\n          <div className=\"flex-1 text-sm text-muted-foreground\">\n            {selectable && (\n              <>\n                {table.getFilteredSelectedRowModel().rows.length} of{' '}\n                {table.getFilteredRowModel().rows.length} row(s) selected.\n              </>\n            )}\n          </div>\n          <div className=\"flex items-center space-x-6 lg:space-x-8\">\n            <div className=\"flex items-center space-x-2\">\n              <p className=\"text-sm font-medium\">Rows per page</p>\n              <select\n                value={table.getState().pagination.pageSize}\n                onChange={(e) => {\n                  table.setPageSize(Number(e.target.value));\n                }}\n                className=\"h-8 w-[70px] rounded border border-input bg-background px-2 text-sm\"\n              >\n                {[10, 20, 30, 40, 50].map((size) => (\n                  <option key={size} value={size}>\n                    {size}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"flex w-[100px] items-center justify-center text-sm font-medium\">\n              Page {table.getState().pagination.pageIndex + 1} of{' '}\n              {table.getPageCount()}\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                className=\"hidden h-8 w-8 p-0 lg:flex\"\n                onClick={() => table.setPageIndex(0)}\n                disabled={!table.getCanPreviousPage()}\n              >\n                <span className=\"sr-only\">Go to first page</span>\n                <ChevronsLeft className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"h-8 w-8 p-0\"\n                onClick={() => table.previousPage()}\n                disabled={!table.getCanPreviousPage()}\n              >\n                <span className=\"sr-only\">Go to previous page</span>\n                <ChevronLeft className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"h-8 w-8 p-0\"\n                onClick={() => table.nextPage()}\n                disabled={!table.getCanNextPage()}\n              >\n                <span className=\"sr-only\">Go to next page</span>\n                <ChevronRight className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"hidden h-8 w-8 p-0 lg:flex\"\n                onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n                disabled={!table.getCanNextPage()}\n              >\n                <span className=\"sr-only\">Go to last page</span>\n                <ChevronsRight className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport { DataTable };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2639, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/menu/menu-items-table.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useMemo } from 'react';\nimport { ColumnDef } from '@tanstack/react-table';\nimport { \n  Edit,\n  Copy,\n  Trash2,\n  Eye,\n  EyeOff,\n  DollarSign,\n  Clock,\n  Tag,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  MoreHorizontal,\n  Plus\n} from 'lucide-react';\nimport { DataTable } from '@/components/ui/data-table';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Dropdown } from '@/components/ui/dropdown';\nimport { MenuItem, MenuFilters, MENU_SORT_OPTIONS } from '@/lib/menu/types';\nimport { \n  formatPrice, \n  formatPrepTime, \n  formatStockStatus,\n  calculateItemPrice,\n  isItemAvailable \n} from '@/lib/menu/utils';\nimport { cn } from '@/lib/menu/utils';\n\ninterface MenuItemsTableProps {\n  data: MenuItem[];\n  loading?: boolean;\n  selectedIds?: string[];\n  filters?: MenuFilters;\n  onItemClick?: (item: MenuItem) => void;\n  onEdit?: (item: MenuItem) => void;\n  onCopy?: (item: MenuItem) => void;\n  onDelete?: (item: MenuItem) => void;\n  onToggleVisibility?: (item: MenuItem) => void;\n  onSelectionChange?: (selectedIds: string[]) => void;\n  onFiltersChange?: (filters: MenuFilters) => void;\n  onCreate?: () => void;\n  className?: string;\n  channel?: string;\n  showBulkActions?: boolean;\n}\n\nexport function MenuItemsTable({\n  data,\n  loading = false,\n  selectedIds = [],\n  filters = {},\n  onItemClick,\n  onEdit,\n  onCopy,\n  onDelete,\n  onToggleVisibility,\n  onSelectionChange,\n  onFiltersChange,\n  onCreate,\n  className,\n  channel,\n  showBulkActions = true,\n}: MenuItemsTableProps) {\n  const [sortField, setSortField] = useState('name');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n\n  // Calculate derived data for each item\n  const enhancedData = useMemo(() => {\n    return data.map(item => ({\n      ...item,\n      effectivePrice: calculateItemPrice(item, channel),\n      available: isItemAvailable(item, channel),\n      stockStatus: formatStockStatus(item.stockQuantity, item.lowStockThreshold),\n    }));\n  }, [data, channel]);\n\n  // Table columns\n  const columns: ColumnDef<MenuItem & { effectivePrice: number; available: boolean; stockStatus: any }>[] = [\n    {\n      id: 'select',\n      header: ({ table }) => (\n        <input\n          type=\"checkbox\"\n          checked={table.getIsAllPageRowsSelected()}\n          onChange={table.getToggleAllPageRowsSelectedHandler()}\n          className=\"rounded border-gray-300\"\n        />\n      ),\n      cell: ({ row }) => (\n        <input\n          type=\"checkbox\"\n          checked={row.getIsSelected()}\n          onChange={row.getToggleSelectedHandler()}\n          className=\"rounded border-gray-300\"\n        />\n      ),\n      enableSorting: false,\n      size: 40,\n    },\n    {\n      accessorKey: 'name',\n      header: 'Item',\n      cell: ({ row }) => {\n        const item = row.original;\n        return (\n          <div className=\"flex items-start space-x-3\">\n            {/* Image placeholder */}\n            <div className=\"w-12 h-12 bg-gray-100 rounded border flex items-center justify-center flex-shrink-0\">\n              {item.media.length > 0 ? (\n                <img\n                  src={item.media[0].url}\n                  alt={item.media[0].alt}\n                  className=\"w-full h-full object-cover rounded\"\n                />\n              ) : (\n                <Tag className=\"h-5 w-5 text-gray-400\" />\n              )}\n            </div>\n            \n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center space-x-2\">\n                <span \n                  className={cn(\n                    \"font-medium truncate cursor-pointer hover:text-blue-600\",\n                    !item.isActive && \"text-gray-400 line-through\"\n                  )}\n                  onClick={() => onItemClick?.(item)}\n                >\n                  {item.name}\n                </span>\n                {!item.isActive && <EyeOff className=\"h-3 w-3 text-gray-400\" />}\n              </div>\n              \n              {item.description && (\n                <p className=\"text-sm text-gray-500 truncate mt-1\">\n                  {item.description}\n                </p>\n              )}\n              \n              {/* Tags */}\n              {item.tags.length > 0 && (\n                <div className=\"flex flex-wrap gap-1 mt-2\">\n                  {item.tags.slice(0, 3).map((tag) => (\n                    <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\n                      {tag}\n                    </Badge>\n                  ))}\n                  {item.tags.length > 3 && (\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      +{item.tags.length - 3}\n                    </Badge>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        );\n      },\n    },\n    {\n      accessorKey: 'effectivePrice',\n      header: 'Price',\n      cell: ({ row }) => {\n        const item = row.original;\n        const showStrategyPrice = item.effectivePrice !== item.basePrice;\n        \n        return (\n          <div className=\"text-right\">\n            <div className=\"font-medium\">\n              {formatPrice(item.effectivePrice)}\n            </div>\n            {showStrategyPrice && (\n              <div className=\"text-xs text-gray-500 line-through\">\n                {formatPrice(item.basePrice)}\n              </div>\n            )}\n          </div>\n        );\n      },\n    },\n    {\n      accessorKey: 'available',\n      header: 'Status',\n      cell: ({ row }) => {\n        const item = row.original;\n        \n        return (\n          <div className=\"flex flex-col space-y-1\">\n            {/* Availability Status */}\n            <Badge\n              variant={item.available ? 'default' : 'destructive'}\n              className=\"w-fit\"\n            >\n              {item.available ? (\n                <>\n                  <CheckCircle className=\"h-3 w-3 mr-1\" />\n                  Available\n                </>\n              ) : (\n                <>\n                  <XCircle className=\"h-3 w-3 mr-1\" />\n                  Unavailable\n                </>\n              )}\n            </Badge>\n            \n            {/* Stock Status */}\n            {item.trackInventory && (\n              <Badge\n                variant={item.stockStatus.variant}\n                className=\"w-fit text-xs\"\n              >\n                {item.stockStatus.label}\n              </Badge>\n            )}\n          </div>\n        );\n      },\n    },\n    {\n      accessorKey: 'preparationTime',\n      header: 'Prep Time',\n      cell: ({ row }) => {\n        const prepTime = row.original.preparationTime;\n        if (!prepTime) return <span className=\"text-gray-400\">—</span>;\n        \n        return (\n          <div className=\"flex items-center text-sm\">\n            <Clock className=\"h-3 w-3 mr-1\" />\n            {formatPrepTime(prepTime)}\n          </div>\n        );\n      },\n    },\n    {\n      accessorKey: 'modifierGroups',\n      header: 'Modifiers',\n      cell: ({ row }) => {\n        const modifierCount = row.original.modifierGroups.length;\n        if (modifierCount === 0) return <span className=\"text-gray-400\">None</span>;\n        \n        return (\n          <Badge variant=\"outline\" className=\"text-xs\">\n            {modifierCount} group{modifierCount !== 1 ? 's' : ''}\n          </Badge>\n        );\n      },\n    },\n    {\n      accessorKey: 'allergens',\n      header: 'Allergens',\n      cell: ({ row }) => {\n        const allergens = row.original.allergens;\n        if (allergens.length === 0) return <span className=\"text-gray-400\">None</span>;\n        \n        return (\n          <div className=\"flex items-center\">\n            <AlertTriangle className=\"h-3 w-3 text-orange-500 mr-1\" />\n            <span className=\"text-xs\">{allergens.length} allergen{allergens.length !== 1 ? 's' : ''}</span>\n          </div>\n        );\n      },\n    },\n    {\n      id: 'actions',\n      header: 'Actions',\n      cell: ({ row }) => {\n        const item = row.original;\n        \n        return (\n          <Dropdown\n            trigger={\n              <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\n                <MoreHorizontal className=\"h-4 w-4\" />\n              </Button>\n            }\n            items={[\n              {\n                label: 'Edit',\n                icon: <Edit className=\"h-4 w-4\" />,\n                onClick: () => onEdit?.(item),\n              },\n              {\n                label: 'Duplicate',\n                icon: <Copy className=\"h-4 w-4\" />,\n                onClick: () => onCopy?.(item),\n              },\n              {\n                label: item.isActive ? 'Hide' : 'Show',\n                icon: item.isActive ? <EyeOff className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />,\n                onClick: () => onToggleVisibility?.(item),\n              },\n              { type: 'separator' },\n              {\n                label: 'Delete',\n                icon: <Trash2 className=\"h-4 w-4\" />,\n                onClick: () => onDelete?.(item),\n                className: 'text-red-600',\n              },\n            ]}\n          />\n        );\n      },\n      enableSorting: false,\n      size: 60,\n    },\n  ];\n\n  // Handle selection changes\n  const handleSelectionChange = useCallback((selection: any) => {\n    const selectedRowIds = Object.keys(selection);\n    const selectedItemIds = selectedRowIds.map(index => enhancedData[parseInt(index)]?.id).filter(Boolean);\n    onSelectionChange?.(selectedItemIds);\n  }, [enhancedData, onSelectionChange]);\n\n  // Bulk actions\n  const bulkActions = useMemo(() => {\n    if (!showBulkActions || selectedIds.length === 0) return null;\n    \n    return (\n      <div className=\"flex items-center space-x-2 px-4 py-2 bg-blue-50 border-b\">\n        <span className=\"text-sm font-medium\">\n          {selectedIds.length} item{selectedIds.length !== 1 ? 's' : ''} selected\n        </span>\n        \n        <div className=\"flex items-center space-x-1\">\n          <Button size=\"sm\" variant=\"outline\">\n            <Eye className=\"h-3 w-3 mr-1\" />\n            Show\n          </Button>\n          <Button size=\"sm\" variant=\"outline\">\n            <EyeOff className=\"h-3 w-3 mr-1\" />\n            Hide\n          </Button>\n          <Button size=\"sm\" variant=\"outline\">\n            <DollarSign className=\"h-3 w-3 mr-1\" />\n            Update Prices\n          </Button>\n          <Button size=\"sm\" variant=\"outline\" className=\"text-red-600\">\n            <Trash2 className=\"h-3 w-3 mr-1\" />\n            Delete\n          </Button>\n        </div>\n      </div>\n    );\n  }, [showBulkActions, selectedIds.length]);\n\n  // Custom toolbar\n  const toolbar = useMemo(() => (\n    <div className=\"flex items-center space-x-2\">\n      {onCreate && (\n        <Button size=\"sm\" onClick={onCreate}>\n          <Plus className=\"h-3 w-3 mr-1\" />\n          Add Item\n        </Button>\n      )}\n    </div>\n  ), [onCreate]);\n\n  return (\n    <div className={cn(\"bg-white border rounded-lg\", className)}>\n      {bulkActions}\n      \n      <DataTable\n        columns={columns}\n        data={enhancedData}\n        loading={loading}\n        searchable\n        searchPlaceholder=\"Search menu items...\"\n        filterable\n        exportable\n        selectable\n        pagination\n        pageSize={20}\n        onRowClick={onItemClick}\n        toolbar={toolbar}\n        className=\"border-none\"\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3299, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/switch.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { cn } from './utils';\n\ninterface SwitchProps {\n  checked?: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n  disabled?: boolean;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Switch = React.forwardRef<HTMLButtonElement, SwitchProps>(\n  ({ checked = false, onCheckedChange, disabled = false, className, size = 'md', ...props }, ref) => {\n    const sizeClasses = {\n      sm: 'h-4 w-7',\n      md: 'h-5 w-9',\n      lg: 'h-6 w-11'\n    };\n    \n    const thumbSizeClasses = {\n      sm: 'h-3 w-3',\n      md: 'h-4 w-4', \n      lg: 'h-5 w-5'\n    };\n    \n    const translateClasses = {\n      sm: checked ? 'translate-x-3' : 'translate-x-0.5',\n      md: checked ? 'translate-x-4' : 'translate-x-0.5',\n      lg: checked ? 'translate-x-5' : 'translate-x-0.5'\n    };\n\n    return (\n      <button\n        type=\"button\"\n        role=\"switch\"\n        aria-checked={checked}\n        disabled={disabled}\n        onClick={() => onCheckedChange?.(!checked)}\n        className={cn(\n          'peer inline-flex shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors',\n          'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2',\n          'disabled:cursor-not-allowed disabled:opacity-50',\n          checked ? 'bg-blue-600' : 'bg-gray-200',\n          sizeClasses[size],\n          className\n        )}\n        ref={ref}\n        {...props}\n      >\n        <span\n          className={cn(\n            'pointer-events-none block rounded-full bg-white shadow-lg ring-0 transition-transform',\n            thumbSizeClasses[size],\n            translateClasses[size]\n          )}\n        />\n      </button>\n    );\n  }\n);\n\nSwitch.displayName = 'Switch';\n\nexport { Switch };"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAaA,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,UAAU,KAAK,EAAE,eAAe,EAAE,WAAW,KAAK,EAAE,SAAS,EAAE,OAAO,IAAI,EAAE,GAAG,OAAO,EAAE;IACzF,MAAM,cAAc;QAClB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,MAAM,mBAAmB;QACvB,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IAEA,MAAM,mBAAmB;QACvB,IAAI,UAAU,kBAAkB;QAChC,IAAI,UAAU,kBAAkB;QAChC,IAAI,UAAU,kBAAkB;IAClC;IAEA,qBACE,8OAAC;QACC,MAAK;QACL,MAAK;QACL,gBAAc;QACd,UAAU;QACV,SAAS,IAAM,kBAAkB,CAAC;QAClC,WAAW,IAAA,+HAAE,EACX,oHACA,2GACA,mDACA,UAAU,gBAAgB,eAC1B,WAAW,CAAC,KAAK,EACjB;QAEF,KAAK;QACJ,GAAG,KAAK;kBAET,cAAA,8OAAC;YACC,WAAW,IAAA,+HAAE,EACX,yFACA,gBAAgB,CAAC,KAAK,EACtB,gBAAgB,CAAC,KAAK;;;;;;;;;;;AAKhC;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3354, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Tab, TabGroup, TabList, TabPanel, TabPanels } from '@headlessui/react';\nimport { cn } from './utils';\n\nexport interface TabItem {\n  key: string;\n  label: string;\n  content: React.ReactNode;\n  disabled?: boolean;\n  badge?: string | number;\n  icon?: React.ReactNode;\n}\n\nexport interface TabsProps {\n  items: TabItem[];\n  defaultTab?: string;\n  selectedTab?: string;\n  onTabChange?: (tabKey: string) => void;\n  variant?: 'default' | 'pills' | 'underline' | 'minimal';\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  tabListClassName?: string;\n  tabPanelClassName?: string;\n  orientation?: 'horizontal' | 'vertical';\n}\n\nfunction Tabs({\n  items,\n  defaultTab,\n  selectedTab,\n  onTabChange,\n  variant = 'default',\n  size = 'md',\n  className,\n  tabListClassName,\n  tabPanelClassName,\n  orientation = 'horizontal',\n}: TabsProps) {\n  const [internalSelectedIndex, setInternalSelectedIndex] = React.useState(() => {\n    const initialTab = selectedTab || defaultTab || items[0]?.key;\n    return items.findIndex(item => item.key === initialTab) || 0;\n  });\n\n  const selectedIndex = React.useMemo(() => {\n    if (selectedTab) {\n      const index = items.findIndex(item => item.key === selectedTab);\n      return index >= 0 ? index : 0;\n    }\n    return internalSelectedIndex;\n  }, [selectedTab, items, internalSelectedIndex]);\n\n  const handleChange = (index: number) => {\n    const selectedItem = items[index];\n    if (selectedItem && !selectedItem.disabled) {\n      setInternalSelectedIndex(index);\n      onTabChange?.(selectedItem.key);\n    }\n  };\n\n  const getTabVariantClasses = (selected: boolean, disabled: boolean) => {\n    const baseClasses = cn(\n      'relative inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-all',\n      'focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      {\n        'opacity-50 cursor-not-allowed': disabled,\n        'cursor-pointer': !disabled,\n      }\n    );\n\n    const sizeClasses = {\n      sm: 'px-3 py-1.5 text-xs',\n      md: 'px-4 py-2 text-sm',\n      lg: 'px-6 py-3 text-base',\n    };\n\n    const variantClasses = {\n      default: selected\n        ? 'bg-background text-foreground shadow-sm border border-border rounded-md'\n        : 'text-muted-foreground hover:text-foreground hover:bg-muted rounded-md',\n      pills: selected\n        ? 'bg-primary text-primary-foreground rounded-full'\n        : 'text-muted-foreground hover:text-foreground hover:bg-muted rounded-full',\n      underline: selected\n        ? 'text-foreground border-b-2 border-primary'\n        : 'text-muted-foreground hover:text-foreground border-b-2 border-transparent',\n      minimal: selected\n        ? 'text-primary'\n        : 'text-muted-foreground hover:text-foreground',\n    };\n\n    return cn(baseClasses, sizeClasses[size], variantClasses[variant]);\n  };\n\n  const getTabListClasses = () => {\n    const baseClasses = 'flex';\n    \n    const orientationClasses = {\n      horizontal: 'flex-row',\n      vertical: 'flex-col',\n    };\n\n    const variantClasses = {\n      default: 'bg-muted p-1 rounded-lg',\n      pills: 'space-x-1',\n      underline: 'border-b border-border',\n      minimal: 'space-x-6',\n    };\n\n    const spacingClasses = {\n      horizontal: {\n        default: '',\n        pills: 'space-x-1',\n        underline: 'space-x-6',\n        minimal: 'space-x-6',\n      },\n      vertical: {\n        default: '',\n        pills: 'space-y-1',\n        underline: 'space-y-2',\n        minimal: 'space-y-2',\n      },\n    };\n\n    return cn(\n      baseClasses,\n      orientationClasses[orientation],\n      variantClasses[variant],\n      spacingClasses[orientation][variant]\n    );\n  };\n\n  return (\n    <div className={cn('w-full', className)}>\n      <TabGroup\n        selectedIndex={selectedIndex}\n        onChange={handleChange}\n        vertical={orientation === 'vertical'}\n      >\n        <TabList className={cn(getTabListClasses(), tabListClassName)}>\n          {items.map((item, _index) => (\n            <Tab\n              key={item.key}\n              disabled={item.disabled}\n              className={({ selected }) =>\n                getTabVariantClasses(selected, !!item.disabled)\n              }\n            >\n              <div className=\"flex items-center space-x-2\">\n                {item.icon && (\n                  <span className=\"flex-shrink-0\">{item.icon}</span>\n                )}\n                <span>{item.label}</span>\n                {item.badge && (\n                  <span className=\"ml-2 bg-muted text-muted-foreground rounded-full px-2 py-0.5 text-xs font-medium\">\n                    {item.badge}\n                  </span>\n                )}\n              </div>\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels className={cn('mt-4', tabPanelClassName)}>\n          {items.map((item) => (\n            <TabPanel\n              key={item.key}\n              className=\"focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 rounded-md\"\n            >\n              {item.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </TabGroup>\n    </div>\n  );\n}\n\n// Simplified tabs component for basic use cases\nexport interface SimpleTabsProps {\n  tabs: {\n    label: string;\n    content: React.ReactNode;\n    disabled?: boolean;\n  }[];\n  defaultIndex?: number;\n  className?: string;\n}\n\nfunction SimpleTabs({ tabs, defaultIndex = 0, className }: SimpleTabsProps) {\n  const tabItems: TabItem[] = tabs.map((tab, index) => ({\n    key: index.toString(),\n    label: tab.label,\n    content: tab.content,\n    disabled: tab.disabled,\n  }));\n\n  return (\n    <Tabs\n      items={tabItems}\n      defaultTab={defaultIndex.toString()}\n      className={className}\n    />\n  );\n}\n\n// Controlled tabs component\nexport interface ControlledTabsProps {\n  tabs: TabItem[];\n  activeTab: string;\n  onTabChange: (tabKey: string) => void;\n  variant?: 'default' | 'pills' | 'underline' | 'minimal';\n  className?: string;\n}\n\nfunction ControlledTabs({\n  tabs,\n  activeTab,\n  onTabChange,\n  variant = 'default',\n  className,\n}: ControlledTabsProps) {\n  return (\n    <Tabs\n      items={tabs}\n      selectedTab={activeTab}\n      onTabChange={onTabChange}\n      variant={variant}\n      className={className}\n    />\n  );\n}\n\nexport { Tabs, SimpleTabs, ControlledTabs };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3555, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'outlined' | 'elevated';\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', padding = 'md', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg bg-card text-card-foreground',\n          {\n            'border border-border': variant === 'default' || variant === 'outlined',\n            'shadow-sm': variant === 'default',\n            'shadow-md': variant === 'elevated',\n            'p-0': padding === 'none',\n            'p-4': padding === 'sm',\n            'p-6': padding === 'md',\n            'p-8': padding === 'lg',\n          },\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\nCard.displayName = 'Card';\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n}\n\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, divider = false, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex flex-col space-y-1.5 p-6',\n        divider && 'border-b border-border',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, padding = 'md', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        {\n          'p-0': padding === 'none',\n          'p-4': padding === 'sm',\n          'p-6': padding === 'md',\n          'p-8': padding === 'lg',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardContent.displayName = 'CardContent';\n\nexport interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n  justify?: 'start' | 'center' | 'end' | 'between';\n}\n\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, divider = false, justify = 'start', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex items-center p-6 pt-0',\n        {\n          'border-t border-border pt-6': divider,\n          'justify-start': justify === 'start',\n          'justify-center': justify === 'center',\n          'justify-end': justify === 'end',\n          'justify-between': justify === 'between',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = 'CardFooter';\n\n// Specialized card variants for common use cases\nexport interface ActionCardProps extends CardProps {\n  title: string;\n  description?: string;\n  action: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\nfunction ActionCard({\n  title,\n  description,\n  action,\n  icon,\n  className,\n  ...props\n}: ActionCardProps) {\n  return (\n    <Card className={cn('transition-all hover:shadow-md', className)} {...props}>\n      <CardHeader>\n        <div className=\"flex items-center space-x-4\">\n          {icon && (\n            <div className=\"flex-shrink-0 p-2 rounded-lg bg-primary/10 text-primary\">\n              {icon}\n            </div>\n          )}\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg\">{title}</CardTitle>\n            {description && (\n              <CardDescription>{description}</CardDescription>\n            )}\n          </div>\n          <div className=\"flex-shrink-0\">{action}</div>\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nexport interface MetricCardProps extends CardProps {\n  label: string;\n  value: string | number;\n  change?: {\n    value: number;\n    type: 'increase' | 'decrease';\n    period?: string;\n  };\n  icon?: React.ReactNode;\n  loading?: boolean;\n}\n\nfunction MetricCard({\n  label,\n  value,\n  change,\n  icon,\n  loading = false,\n  className,\n  ...props\n}: MetricCardProps) {\n  return (\n    <Card className={className} {...props}>\n      <CardContent>\n        <div className=\"flex items-center justify-between space-y-0 pb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{label}</p>\n          {icon && <div className=\"text-muted-foreground\">{icon}</div>}\n        </div>\n        <div>\n          {loading ? (\n            <div className=\"h-8 w-24 bg-muted rounded animate-pulse\" />\n          ) : (\n            <div className=\"text-2xl font-bold\">{value}</div>\n          )}\n          {change && !loading && (\n            <p\n              className={cn(\n                'text-xs',\n                change.type === 'increase'\n                  ? 'text-green-600'\n                  : 'text-destructive'\n              )}\n            >\n              {change.type === 'increase' ? '+' : '-'}\n              {Math.abs(change.value)}%\n              {change.period && ` from ${change.period}`}\n            </p>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  ActionCard,\n  MetricCard,\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3808, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/menu/modifier-group-editor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { \n  Plus, \n  Minus, \n  Edit, \n  Trash2, \n  GripVertical,\n  ChevronDown,\n  ChevronRight\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Switch } from '@/components/ui/switch';\nimport { Card } from '@/components/ui/card';\nimport { ModifierGroup, ModifierOption, CreateModifierGroup, CreateModifierOption } from '@/lib/menu/types';\nimport { formatPrice } from '@/lib/menu/utils';\n\ninterface ModifierGroupEditorProps {\n  modifierGroups: ModifierGroup[];\n  onChange: (groups: ModifierGroup[]) => void;\n  className?: string;\n}\n\nexport function ModifierGroupEditor({\n  modifierGroups,\n  onChange,\n  className,\n}: ModifierGroupEditorProps) {\n  const [expandedGroups, setExpandedGroups] = useState<string[]>([]);\n  const [editingGroup, setEditingGroup] = useState<string | null>(null);\n  const [editingOption, setEditingOption] = useState<string | null>(null);\n\n  // Toggle group expansion\n  const toggleGroup = useCallback((groupId: string) => {\n    setExpandedGroups(prev => \n      prev.includes(groupId) \n        ? prev.filter(id => id !== groupId)\n        : [...prev, groupId]\n    );\n  }, []);\n\n  // Add new modifier group\n  const addGroup = useCallback(() => {\n    const newGroup: ModifierGroup = {\n      id: `temp-group-${Date.now()}`,\n      name: 'New Modifier Group',\n      description: '',\n      isRequired: false,\n      minSelections: 0,\n      maxSelections: 1,\n      sortOrder: modifierGroups.length,\n      displayType: 'checkbox',\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      options: [],\n    };\n    \n    onChange([...modifierGroups, newGroup]);\n    setExpandedGroups(prev => [...prev, newGroup.id]);\n    setEditingGroup(newGroup.id);\n  }, [modifierGroups, onChange]);\n\n  // Update modifier group\n  const updateGroup = useCallback((groupId: string, updates: Partial<ModifierGroup>) => {\n    const updatedGroups = modifierGroups.map(group =>\n      group.id === groupId ? { ...group, ...updates, updatedAt: new Date() } : group\n    );\n    onChange(updatedGroups);\n  }, [modifierGroups, onChange]);\n\n  // Delete modifier group\n  const deleteGroup = useCallback((groupId: string) => {\n    if (window.confirm('Are you sure you want to delete this modifier group?')) {\n      onChange(modifierGroups.filter(group => group.id !== groupId));\n      setExpandedGroups(prev => prev.filter(id => id !== groupId));\n    }\n  }, [modifierGroups, onChange]);\n\n  // Add modifier option\n  const addOption = useCallback((groupId: string) => {\n    const group = modifierGroups.find(g => g.id === groupId);\n    if (!group) return;\n\n    const newOption: ModifierOption = {\n      id: `temp-option-${Date.now()}`,\n      name: 'New Option',\n      description: '',\n      price: 0,\n      sortOrder: group.options.length,\n      isDefault: false,\n      isActive: true,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      pricingStrategies: [],\n      allergens: [],\n      media: [],\n    };\n\n    updateGroup(groupId, {\n      options: [...group.options, newOption],\n    });\n\n    setEditingOption(newOption.id);\n  }, [modifierGroups, updateGroup]);\n\n  // Update modifier option\n  const updateOption = useCallback((groupId: string, optionId: string, updates: Partial<ModifierOption>) => {\n    const group = modifierGroups.find(g => g.id === groupId);\n    if (!group) return;\n\n    const updatedOptions = group.options.map(option =>\n      option.id === optionId ? { ...option, ...updates, updatedAt: new Date() } : option\n    );\n\n    updateGroup(groupId, { options: updatedOptions });\n  }, [modifierGroups, updateGroup]);\n\n  // Delete modifier option\n  const deleteOption = useCallback((groupId: string, optionId: string) => {\n    if (window.confirm('Are you sure you want to delete this modifier option?')) {\n      const group = modifierGroups.find(g => g.id === groupId);\n      if (!group) return;\n\n      updateGroup(groupId, {\n        options: group.options.filter(option => option.id !== optionId),\n      });\n    }\n  }, [modifierGroups, updateGroup]);\n\n  // Reorder groups\n  const reorderGroups = useCallback((fromIndex: number, toIndex: number) => {\n    const newGroups = [...modifierGroups];\n    const [movedGroup] = newGroups.splice(fromIndex, 1);\n    newGroups.splice(toIndex, 0, movedGroup);\n    \n    // Update sort orders\n    newGroups.forEach((group, index) => {\n      group.sortOrder = index;\n    });\n    \n    onChange(newGroups);\n  }, [modifierGroups, onChange]);\n\n  return (\n    <div className={className}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-lg font-semibold\">Modifier Groups</h3>\n        <Button size=\"sm\" onClick={addGroup}>\n          <Plus className=\"h-4 w-4 mr-2\" />\n          Add Group\n        </Button>\n      </div>\n\n      {modifierGroups.length === 0 ? (\n        <div className=\"text-center py-8 text-gray-500 border-2 border-dashed border-gray-300 rounded-lg\">\n          <p className=\"mb-2\">No modifier groups added yet</p>\n          <Button variant=\"outline\" onClick={addGroup}>\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add Your First Group\n          </Button>\n        </div>\n      ) : (\n        <div className=\"space-y-4\">\n          {modifierGroups.map((group, groupIndex) => (\n            <Card key={group.id} className=\"p-4\">\n              {/* Group Header */}\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-2 flex-1\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-6 w-6 p-0\"\n                    onClick={() => toggleGroup(group.id)}\n                  >\n                    {expandedGroups.includes(group.id) ? (\n                      <ChevronDown className=\"h-4 w-4\" />\n                    ) : (\n                      <ChevronRight className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                  \n                  <GripVertical className=\"h-4 w-4 text-gray-400 cursor-move\" />\n                  \n                  {editingGroup === group.id ? (\n                    <Input\n                      value={group.name}\n                      onChange={(e) => updateGroup(group.id, { name: e.target.value })}\n                      onBlur={() => setEditingGroup(null)}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') setEditingGroup(null);\n                      }}\n                      className=\"h-7 text-sm font-medium\"\n                      autoFocus\n                    />\n                  ) : (\n                    <h4 \n                      className=\"font-medium cursor-pointer hover:text-blue-600\"\n                      onClick={() => setEditingGroup(group.id)}\n                    >\n                      {group.name}\n                    </h4>\n                  )}\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    {group.isRequired && (\n                      <Badge variant=\"default\" className=\"text-xs\">Required</Badge>\n                    )}\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {group.options.length} option{group.options.length !== 1 ? 's' : ''}\n                    </Badge>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-1\">\n                  <Switch\n                    size=\"sm\"\n                    checked={group.isActive}\n                    onCheckedChange={(checked) => updateGroup(group.id, { isActive: checked })}\n                  />\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-7 w-7 p-0\"\n                    onClick={() => deleteGroup(group.id)}\n                  >\n                    <Trash2 className=\"h-3 w-3 text-red-600\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Group Details (when expanded) */}\n              {expandedGroups.includes(group.id) && (\n                <div className=\"space-y-4 border-t pt-4\">\n                  {/* Group Settings */}\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-medium mb-1\">Description</label>\n                      <Input\n                        value={group.description || ''}\n                        onChange={(e) => updateGroup(group.id, { description: e.target.value })}\n                        placeholder=\"Optional description\"\n                        className=\"h-8 text-sm\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium mb-1\">Display Type</label>\n                      <select\n                        value={group.displayType}\n                        onChange={(e) => updateGroup(group.id, { displayType: e.target.value as any })}\n                        className=\"w-full h-8 px-2 text-sm border border-gray-300 rounded-md\"\n                      >\n                        <option value=\"radio\">Radio Buttons</option>\n                        <option value=\"checkbox\">Checkboxes</option>\n                        <option value=\"dropdown\">Dropdown</option>\n                        <option value=\"quantity\">Quantity</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-3 gap-4\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        size=\"sm\"\n                        checked={group.isRequired}\n                        onCheckedChange={(checked) => updateGroup(group.id, { isRequired: checked })}\n                      />\n                      <label className=\"text-sm\">Required</label>\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium mb-1\">Min Selections</label>\n                      <Input\n                        type=\"number\"\n                        min=\"0\"\n                        value={group.minSelections}\n                        onChange={(e) => updateGroup(group.id, { minSelections: parseInt(e.target.value) || 0 })}\n                        className=\"h-8 text-sm\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium mb-1\">Max Selections</label>\n                      <Input\n                        type=\"number\"\n                        min=\"0\"\n                        value={group.maxSelections || ''}\n                        onChange={(e) => updateGroup(group.id, { maxSelections: parseInt(e.target.value) || undefined })}\n                        placeholder=\"Unlimited\"\n                        className=\"h-8 text-sm\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Options */}\n                  <div>\n                    <div className=\"flex items-center justify-between mb-3\">\n                      <h5 className=\"font-medium\">Options</h5>\n                      <Button size=\"sm\" onClick={() => addOption(group.id)}>\n                        <Plus className=\"h-3 w-3 mr-1\" />\n                        Add Option\n                      </Button>\n                    </div>\n                    \n                    {group.options.length === 0 ? (\n                      <div className=\"text-center py-4 text-gray-500 border border-dashed border-gray-200 rounded\">\n                        No options added yet\n                      </div>\n                    ) : (\n                      <div className=\"space-y-2\">\n                        {group.options.map((option, optionIndex) => (\n                          <div\n                            key={option.id}\n                            className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded border\"\n                          >\n                            <GripVertical className=\"h-4 w-4 text-gray-400 cursor-move\" />\n                            \n                            <div className=\"flex-1 grid grid-cols-3 gap-3\">\n                              <div>\n                                {editingOption === option.id ? (\n                                  <Input\n                                    value={option.name}\n                                    onChange={(e) => updateOption(group.id, option.id, { name: e.target.value })}\n                                    onBlur={() => setEditingOption(null)}\n                                    onKeyDown={(e) => {\n                                      if (e.key === 'Enter') setEditingOption(null);\n                                    }}\n                                    className=\"h-7 text-sm\"\n                                    autoFocus\n                                  />\n                                ) : (\n                                  <div\n                                    className=\"text-sm font-medium cursor-pointer hover:text-blue-600\"\n                                    onClick={() => setEditingOption(option.id)}\n                                  >\n                                    {option.name}\n                                  </div>\n                                )}\n                              </div>\n                              \n                              <div className=\"relative\">\n                                <span className=\"absolute left-2 top-1/2 transform -translate-y-1/2 text-xs text-gray-500\">$</span>\n                                <Input\n                                  type=\"number\"\n                                  step=\"0.01\"\n                                  min=\"0\"\n                                  value={option.price}\n                                  onChange={(e) => updateOption(group.id, option.id, { price: parseFloat(e.target.value) || 0 })}\n                                  className=\"h-7 text-sm pl-6\"\n                                  placeholder=\"0.00\"\n                                />\n                              </div>\n                              \n                              <Input\n                                value={option.description || ''}\n                                onChange={(e) => updateOption(group.id, option.id, { description: e.target.value })}\n                                placeholder=\"Optional description\"\n                                className=\"h-7 text-sm\"\n                              />\n                            </div>\n                            \n                            <div className=\"flex items-center space-x-2\">\n                              <div className=\"flex items-center space-x-1\">\n                                <input\n                                  type=\"checkbox\"\n                                  checked={option.isDefault}\n                                  onChange={(e) => updateOption(group.id, option.id, { isDefault: e.target.checked })}\n                                  className=\"rounded text-xs\"\n                                />\n                                <label className=\"text-xs text-gray-600\">Default</label>\n                              </div>\n                              \n                              <Switch\n                                size=\"sm\"\n                                checked={option.isActive}\n                                onCheckedChange={(checked) => updateOption(group.id, option.id, { isActive: checked })}\n                              />\n                              \n                              <Button\n                                variant=\"ghost\"\n                                size=\"sm\"\n                                className=\"h-7 w-7 p-0\"\n                                onClick={() => deleteOption(group.id, option.id)}\n                              >\n                                <Trash2 className=\"h-3 w-3 text-red-600\" />\n                              </Button>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4637, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/menu/pricing-strategy-editor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { \n  Plus, \n  Trash2, \n  Clock, \n  Calendar, \n  MapPin, \n  Target,\n  DollarSign,\n  ChevronDown,\n  ChevronRight\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Switch } from '@/components/ui/switch';\nimport { Card } from '@/components/ui/card';\nimport { PricingStrategy, Price } from '@/lib/menu/types';\nimport { formatPrice } from '@/lib/menu/utils';\n\ninterface PricingStrategyEditorProps {\n  strategies: PricingStrategy[];\n  onChange: (strategies: PricingStrategy[]) => void;\n  className?: string;\n}\n\nexport function PricingStrategyEditor({\n  strategies,\n  onChange,\n  className,\n}: PricingStrategyEditorProps) {\n  const [expandedStrategies, setExpandedStrategies] = useState<string[]>([]);\n  const [editingStrategy, setEditingStrategy] = useState<string | null>(null);\n\n  // Toggle strategy expansion\n  const toggleStrategy = useCallback((strategyId: string) => {\n    setExpandedStrategies(prev => \n      prev.includes(strategyId) \n        ? prev.filter(id => id !== strategyId)\n        : [...prev, strategyId]\n    );\n  }, []);\n\n  // Add new pricing strategy\n  const addStrategy = useCallback(() => {\n    const newStrategy: PricingStrategy = {\n      id: `temp-strategy-${Date.now()}`,\n      name: 'New Pricing Strategy',\n      type: 'time_based',\n      priority: strategies.length,\n      conditions: {},\n      prices: [{\n        id: `temp-price-${Date.now()}`,\n        amount: 0,\n        currency: 'USD',\n      }],\n    };\n    \n    onChange([...strategies, newStrategy]);\n    setExpandedStrategies(prev => [...prev, newStrategy.id]);\n    setEditingStrategy(newStrategy.id);\n  }, [strategies, onChange]);\n\n  // Update pricing strategy\n  const updateStrategy = useCallback((strategyId: string, updates: Partial<PricingStrategy>) => {\n    const updatedStrategies = strategies.map(strategy =>\n      strategy.id === strategyId ? { ...strategy, ...updates } : strategy\n    );\n    onChange(updatedStrategies);\n  }, [strategies, onChange]);\n\n  // Delete pricing strategy\n  const deleteStrategy = useCallback((strategyId: string) => {\n    if (window.confirm('Are you sure you want to delete this pricing strategy?')) {\n      onChange(strategies.filter(strategy => strategy.id !== strategyId));\n      setExpandedStrategies(prev => prev.filter(id => id !== strategyId));\n    }\n  }, [strategies, onChange]);\n\n  // Update price within a strategy\n  const updatePrice = useCallback((strategyId: string, priceId: string, updates: Partial<Price>) => {\n    const strategy = strategies.find(s => s.id === strategyId);\n    if (!strategy) return;\n\n    const updatedPrices = strategy.prices.map(price =>\n      price.id === priceId ? { ...price, ...updates } : price\n    );\n\n    updateStrategy(strategyId, { prices: updatedPrices });\n  }, [strategies, updateStrategy]);\n\n  // Add price to strategy\n  const addPrice = useCallback((strategyId: string) => {\n    const strategy = strategies.find(s => s.id === strategyId);\n    if (!strategy) return;\n\n    const newPrice: Price = {\n      id: `temp-price-${Date.now()}`,\n      amount: 0,\n      currency: 'USD',\n    };\n\n    updateStrategy(strategyId, {\n      prices: [...strategy.prices, newPrice],\n    });\n  }, [strategies, updateStrategy]);\n\n  // Delete price from strategy\n  const deletePrice = useCallback((strategyId: string, priceId: string) => {\n    const strategy = strategies.find(s => s.id === strategyId);\n    if (!strategy || strategy.prices.length <= 1) return; // Keep at least one price\n\n    updateStrategy(strategyId, {\n      prices: strategy.prices.filter(price => price.id !== priceId),\n    });\n  }, [strategies, updateStrategy]);\n\n  // Update strategy conditions based on type\n  const updateConditions = useCallback((strategyId: string, field: string, value: any) => {\n    const strategy = strategies.find(s => s.id === strategyId);\n    if (!strategy) return;\n\n    const newConditions = { ...strategy.conditions, [field]: value };\n    updateStrategy(strategyId, { conditions: newConditions });\n  }, [strategies, updateStrategy]);\n\n  // Get strategy type icon\n  const getStrategyIcon = (type: string) => {\n    switch (type) {\n      case 'time_based':\n        return <Clock className=\"h-4 w-4\" />;\n      case 'day_of_week':\n        return <Calendar className=\"h-4 w-4\" />;\n      case 'location_based':\n        return <MapPin className=\"h-4 w-4\" />;\n      case 'menu_specific':\n        return <Target className=\"h-4 w-4\" />;\n      default:\n        return <DollarSign className=\"h-4 w-4\" />;\n    }\n  };\n\n  // Render conditions based on strategy type\n  const renderConditions = (strategy: PricingStrategy) => {\n    switch (strategy.type) {\n      case 'time_based':\n        return (\n          <div className=\"grid grid-cols-2 gap-3\">\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">Start Time</label>\n              <Input\n                type=\"time\"\n                value={strategy.conditions?.startTime || ''}\n                onChange={(e) => updateConditions(strategy.id, 'startTime', e.target.value)}\n                className=\"h-8 text-sm\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium mb-1\">End Time</label>\n              <Input\n                type=\"time\"\n                value={strategy.conditions?.endTime || ''}\n                onChange={(e) => updateConditions(strategy.id, 'endTime', e.target.value)}\n                className=\"h-8 text-sm\"\n              />\n            </div>\n          </div>\n        );\n\n      case 'day_of_week':\n        return (\n          <div>\n            <label className=\"block text-sm font-medium mb-2\">Days of Week</label>\n            <div className=\"grid grid-cols-4 gap-2\">\n              {['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'].map((day, index) => (\n                <div key={day} className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id={`${strategy.id}-day-${index}`}\n                    checked={strategy.conditions?.daysOfWeek?.includes(index) || false}\n                    onChange={(e) => {\n                      const currentDays = strategy.conditions?.daysOfWeek || [];\n                      const newDays = e.target.checked\n                        ? [...currentDays, index]\n                        : currentDays.filter(d => d !== index);\n                      updateConditions(strategy.id, 'daysOfWeek', newDays);\n                    }}\n                    className=\"rounded text-xs\"\n                  />\n                  <label htmlFor={`${strategy.id}-day-${index}`} className=\"text-xs\">\n                    {day.slice(0, 3)}\n                  </label>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n\n      case 'location_based':\n        return (\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Location IDs</label>\n            <Input\n              value={strategy.conditions?.locationIds?.join(', ') || ''}\n              onChange={(e) => {\n                const locations = e.target.value.split(',').map(id => id.trim()).filter(Boolean);\n                updateConditions(strategy.id, 'locationIds', locations);\n              }}\n              placeholder=\"Enter location IDs separated by commas\"\n              className=\"h-8 text-sm\"\n            />\n          </div>\n        );\n\n      case 'menu_specific':\n        return (\n          <div>\n            <label className=\"block text-sm font-medium mb-1\">Channel ID</label>\n            <select\n              value={strategy.conditions?.channelId || ''}\n              onChange={(e) => updateConditions(strategy.id, 'channelId', e.target.value)}\n              className=\"w-full h-8 px-2 text-sm border border-gray-300 rounded-md\"\n            >\n              <option value=\"\">Select channel</option>\n              <option value=\"dine-in\">Dine In</option>\n              <option value=\"takeout\">Takeout</option>\n              <option value=\"delivery\">Delivery</option>\n              <option value=\"online\">Online</option>\n            </select>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"flex items-center justify-between mb-4\">\n        <div>\n          <h3 className=\"text-sm font-semibold\">Pricing Strategies</h3>\n          <p className=\"text-xs text-gray-500\">Different prices for different conditions</p>\n        </div>\n        <Button size=\"sm\" onClick={addStrategy}>\n          <Plus className=\"h-3 w-3 mr-1\" />\n          Add Strategy\n        </Button>\n      </div>\n\n      {strategies.length === 0 ? (\n        <div className=\"text-center py-6 text-gray-500 border border-dashed border-gray-300 rounded-lg\">\n          <p className=\"text-sm mb-2\">No pricing strategies configured</p>\n          <p className=\"text-xs text-gray-400 mb-3\">Add strategies for time-based, location-based, or channel-specific pricing</p>\n          <Button size=\"sm\" variant=\"outline\" onClick={addStrategy}>\n            <Plus className=\"h-3 w-3 mr-1\" />\n            Add Strategy\n          </Button>\n        </div>\n      ) : (\n        <div className=\"space-y-3\">\n          {strategies.map((strategy, index) => (\n            <Card key={strategy.id} className=\"p-3\">\n              {/* Strategy Header */}\n              <div className=\"flex items-center justify-between mb-2\">\n                <div className=\"flex items-center space-x-2 flex-1\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-5 w-5 p-0\"\n                    onClick={() => toggleStrategy(strategy.id)}\n                  >\n                    {expandedStrategies.includes(strategy.id) ? (\n                      <ChevronDown className=\"h-3 w-3\" />\n                    ) : (\n                      <ChevronRight className=\"h-3 w-3\" />\n                    )}\n                  </Button>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    {getStrategyIcon(strategy.type)}\n                    \n                    {editingStrategy === strategy.id ? (\n                      <Input\n                        value={strategy.name}\n                        onChange={(e) => updateStrategy(strategy.id, { name: e.target.value })}\n                        onBlur={() => setEditingStrategy(null)}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter') setEditingStrategy(null);\n                        }}\n                        className=\"h-6 text-sm font-medium\"\n                        autoFocus\n                      />\n                    ) : (\n                      <span \n                        className=\"text-sm font-medium cursor-pointer hover:text-blue-600\"\n                        onClick={() => setEditingStrategy(strategy.id)}\n                      >\n                        {strategy.name}\n                      </span>\n                    )}\n                  </div>\n                  \n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    Priority: {strategy.priority}\n                  </Badge>\n                  \n                  <Badge variant=\"outline\" className=\"text-xs capitalize\">\n                    {strategy.type.replace('_', ' ')}\n                  </Badge>\n                </div>\n                \n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"text-sm font-medium\">\n                    {formatPrice(strategy.prices[0]?.amount || 0)}\n                  </div>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-6 w-6 p-0\"\n                    onClick={() => deleteStrategy(strategy.id)}\n                  >\n                    <Trash2 className=\"h-3 w-3 text-red-600\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Strategy Details (when expanded) */}\n              {expandedStrategies.includes(strategy.id) && (\n                <div className=\"space-y-4 border-t pt-3\">\n                  {/* Strategy Settings */}\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    <div>\n                      <label className=\"block text-sm font-medium mb-1\">Strategy Type</label>\n                      <select\n                        value={strategy.type}\n                        onChange={(e) => updateStrategy(strategy.id, { \n                          type: e.target.value as any,\n                          conditions: {} // Reset conditions when type changes\n                        })}\n                        className=\"w-full h-8 px-2 text-sm border border-gray-300 rounded-md\"\n                      >\n                        <option value=\"base\">Base Price</option>\n                        <option value=\"time_based\">Time Based</option>\n                        <option value=\"day_of_week\">Day of Week</option>\n                        <option value=\"location_based\">Location Based</option>\n                        <option value=\"menu_specific\">Menu/Channel Specific</option>\n                      </select>\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-medium mb-1\">Priority</label>\n                      <Input\n                        type=\"number\"\n                        min=\"0\"\n                        value={strategy.priority}\n                        onChange={(e) => updateStrategy(strategy.id, { priority: parseInt(e.target.value) || 0 })}\n                        className=\"h-8 text-sm\"\n                      />\n                    </div>\n                  </div>\n\n                  {/* Conditions */}\n                  {strategy.type !== 'base' && (\n                    <div>\n                      <h5 className=\"text-sm font-medium mb-2\">Conditions</h5>\n                      {renderConditions(strategy)}\n                    </div>\n                  )}\n\n                  {/* Prices */}\n                  <div>\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h5 className=\"text-sm font-medium\">Prices</h5>\n                      <Button size=\"sm\" onClick={() => addPrice(strategy.id)}>\n                        <Plus className=\"h-3 w-3 mr-1\" />\n                        Add Price\n                      </Button>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      {strategy.prices.map((price, priceIndex) => (\n                        <div\n                          key={price.id}\n                          className=\"flex items-center space-x-3 p-2 bg-gray-50 rounded border\"\n                        >\n                          <div className=\"flex-1 grid grid-cols-4 gap-2\">\n                            <div className=\"relative\">\n                              <span className=\"absolute left-2 top-1/2 transform -translate-y-1/2 text-xs text-gray-500\">$</span>\n                              <Input\n                                type=\"number\"\n                                step=\"0.01\"\n                                min=\"0\"\n                                value={price.amount}\n                                onChange={(e) => updatePrice(strategy.id, price.id, { amount: parseFloat(e.target.value) || 0 })}\n                                className=\"h-7 text-sm pl-6\"\n                                placeholder=\"0.00\"\n                              />\n                            </div>\n                            \n                            <Input\n                              type=\"date\"\n                              value={price.validFrom ? price.validFrom.toISOString().split('T')[0] : ''}\n                              onChange={(e) => updatePrice(strategy.id, price.id, { \n                                validFrom: e.target.value ? new Date(e.target.value) : undefined \n                              })}\n                              className=\"h-7 text-sm\"\n                              placeholder=\"Valid from\"\n                            />\n                            \n                            <Input\n                              type=\"date\"\n                              value={price.validTo ? price.validTo.toISOString().split('T')[0] : ''}\n                              onChange={(e) => updatePrice(strategy.id, price.id, { \n                                validTo: e.target.value ? new Date(e.target.value) : undefined \n                              })}\n                              className=\"h-7 text-sm\"\n                              placeholder=\"Valid to\"\n                            />\n                            \n                            <select\n                              value={price.currency}\n                              onChange={(e) => updatePrice(strategy.id, price.id, { currency: e.target.value })}\n                              className=\"h-7 px-2 text-sm border border-gray-300 rounded-md\"\n                            >\n                              <option value=\"USD\">USD</option>\n                              <option value=\"EUR\">EUR</option>\n                              <option value=\"GBP\">GBP</option>\n                            </select>\n                          </div>\n                          \n                          {strategy.prices.length > 1 && (\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"h-7 w-7 p-0\"\n                              onClick={() => deletePrice(strategy.id, price.id)}\n                            >\n                              <Trash2 className=\"h-3 w-3 text-red-600\" />\n                            </Button>\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </Card>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5642, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/menu/channel-visibility-editor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport { \n  Eye, \n  EyeOff, \n  Clock,\n  Calendar,\n  Settings\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Switch } from '@/components/ui/switch';\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { ChannelVisibility, SalesChannel } from '@/lib/menu/types';\n\ninterface ChannelVisibilityEditorProps {\n  channelVisibility: ChannelVisibility[];\n  availableChannels: SalesChannel[];\n  onChange: (visibility: ChannelVisibility[]) => void;\n  className?: string;\n}\n\nexport function ChannelVisibilityEditor({\n  channelVisibility,\n  availableChannels,\n  onChange,\n  className,\n}: ChannelVisibilityEditorProps) {\n  const [showAdvanced, setShowAdvanced] = useState<string[]>([]);\n\n  // Toggle advanced settings for a channel\n  const toggleAdvanced = useCallback((channelId: string) => {\n    setShowAdvanced(prev => \n      prev.includes(channelId) \n        ? prev.filter(id => id !== channelId)\n        : [...prev, channelId]\n    );\n  }, []);\n\n  // Get or create channel visibility settings\n  const getChannelSettings = useCallback((channelId: string): ChannelVisibility => {\n    const existing = channelVisibility.find(cv => cv.channelId === channelId);\n    if (existing) return existing;\n    \n    return {\n      channelId,\n      isVisible: true,\n    };\n  }, [channelVisibility]);\n\n  // Update channel visibility\n  const updateChannelVisibility = useCallback((channelId: string, updates: Partial<ChannelVisibility>) => {\n    const existing = channelVisibility.find(cv => cv.channelId === channelId);\n    \n    if (existing) {\n      // Update existing\n      const updated = channelVisibility.map(cv =>\n        cv.channelId === channelId ? { ...cv, ...updates } : cv\n      );\n      onChange(updated);\n    } else {\n      // Create new\n      const newVisibility: ChannelVisibility = {\n        channelId,\n        isVisible: true,\n        ...updates,\n      };\n      onChange([...channelVisibility, newVisibility]);\n    }\n  }, [channelVisibility, onChange]);\n\n  // Toggle day of week\n  const toggleDayOfWeek = useCallback((channelId: string, day: number) => {\n    const settings = getChannelSettings(channelId);\n    const currentDays = settings.daysOfWeek || [];\n    \n    const newDays = currentDays.includes(day)\n      ? currentDays.filter(d => d !== day)\n      : [...currentDays, day].sort();\n    \n    updateChannelVisibility(channelId, { \n      daysOfWeek: newDays.length > 0 ? newDays : undefined \n    });\n  }, [getChannelSettings, updateChannelVisibility]);\n\n  const daysOfWeek = [\n    { label: 'Sun', value: 0 },\n    { label: 'Mon', value: 1 },\n    { label: 'Tue', value: 2 },\n    { label: 'Wed', value: 3 },\n    { label: 'Thu', value: 4 },\n    { label: 'Fri', value: 5 },\n    { label: 'Sat', value: 6 },\n  ];\n\n  return (\n    <div className={className}>\n      <div className=\"mb-4\">\n        <h3 className=\"text-sm font-semibold mb-1\">Channel Visibility</h3>\n        <p className=\"text-xs text-gray-500\">\n          Control which sales channels can see and order this item\n        </p>\n      </div>\n\n      <div className=\"space-y-3\">\n        {availableChannels.map((channel) => {\n          const settings = getChannelSettings(channel.id);\n          const hasAdvancedSettings = settings.availableFrom || \n                                     settings.availableTo || \n                                     (settings.daysOfWeek && settings.daysOfWeek.length > 0);\n          \n          return (\n            <Card key={channel.id} className=\"p-4\">\n              {/* Channel Header */}\n              <div className=\"flex items-center justify-between mb-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    {settings.isVisible ? (\n                      <Eye className=\"h-4 w-4 text-green-600\" />\n                    ) : (\n                      <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                    )}\n                    <span className=\"font-medium\">{channel.name}</span>\n                  </div>\n                  \n                  <Badge variant=\"outline\" className=\"text-xs capitalize\">\n                    {channel.type.replace('_', ' ')}\n                  </Badge>\n                  \n                  {hasAdvancedSettings && (\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      Custom Schedule\n                    </Badge>\n                  )}\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    size=\"sm\"\n                    checked={settings.isVisible}\n                    onCheckedChange={(checked) => \n                      updateChannelVisibility(channel.id, { isVisible: checked })\n                    }\n                  />\n                  \n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-7 w-7 p-0\"\n                    onClick={() => toggleAdvanced(channel.id)}\n                  >\n                    <Settings className=\"h-3 w-3\" />\n                  </Button>\n                </div>\n              </div>\n\n              {/* Advanced Settings */}\n              {showAdvanced.includes(channel.id) && (\n                <div className=\"space-y-4 border-t pt-3\">\n                  {/* Time Availability */}\n                  <div>\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Clock className=\"h-4 w-4\" />\n                      <h4 className=\"text-sm font-medium\">Time Availability</h4>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"block text-xs font-medium mb-1 text-gray-600\">\n                          Available From\n                        </label>\n                        <Input\n                          type=\"time\"\n                          value={settings.availableFrom || ''}\n                          onChange={(e) => updateChannelVisibility(channel.id, { \n                            availableFrom: e.target.value || undefined \n                          })}\n                          className=\"h-8 text-sm\"\n                        />\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-xs font-medium mb-1 text-gray-600\">\n                          Available To\n                        </label>\n                        <Input\n                          type=\"time\"\n                          value={settings.availableTo || ''}\n                          onChange={(e) => updateChannelVisibility(channel.id, { \n                            availableTo: e.target.value || undefined \n                          })}\n                          className=\"h-8 text-sm\"\n                        />\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Leave empty for all-day availability\n                    </p>\n                  </div>\n\n                  {/* Day Availability */}\n                  <div>\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      <Calendar className=\"h-4 w-4\" />\n                      <h4 className=\"text-sm font-medium\">Day Availability</h4>\n                    </div>\n                    \n                    <div className=\"flex flex-wrap gap-2\">\n                      {daysOfWeek.map((day) => {\n                        const isSelected = settings.daysOfWeek?.includes(day.value);\n                        const allDaysSelected = !settings.daysOfWeek || settings.daysOfWeek.length === 0;\n                        \n                        return (\n                          <Button\n                            key={day.value}\n                            size=\"sm\"\n                            variant={isSelected || allDaysSelected ? 'default' : 'outline'}\n                            className=\"h-8 px-3 text-xs\"\n                            onClick={() => toggleDayOfWeek(channel.id, day.value)}\n                          >\n                            {day.label}\n                          </Button>\n                        );\n                      })}\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between mt-2\">\n                      <p className=\"text-xs text-gray-500\">\n                        {!settings.daysOfWeek || settings.daysOfWeek.length === 0\n                          ? 'Available all days'\n                          : `Available ${settings.daysOfWeek.length} day${settings.daysOfWeek.length !== 1 ? 's' : ''} per week`\n                        }\n                      </p>\n                      \n                      {settings.daysOfWeek && settings.daysOfWeek.length > 0 && (\n                        <Button\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"h-6 text-xs\"\n                          onClick={() => updateChannelVisibility(channel.id, { daysOfWeek: undefined })}\n                        >\n                          Clear\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Quick Actions */}\n                  <div className=\"flex space-x-2 pt-2 border-t\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"text-xs\"\n                      onClick={() => {\n                        updateChannelVisibility(channel.id, {\n                          availableFrom: '06:00',\n                          availableTo: '22:00',\n                          daysOfWeek: [1, 2, 3, 4, 5], // Mon-Fri\n                        });\n                      }}\n                    >\n                      Business Hours\n                    </Button>\n                    \n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"text-xs\"\n                      onClick={() => {\n                        updateChannelVisibility(channel.id, {\n                          availableFrom: '17:00',\n                          availableTo: '23:00',\n                          daysOfWeek: undefined,\n                        });\n                      }}\n                    >\n                      Dinner Only\n                    </Button>\n                    \n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      className=\"text-xs\"\n                      onClick={() => {\n                        updateChannelVisibility(channel.id, {\n                          availableFrom: undefined,\n                          availableTo: undefined,\n                          daysOfWeek: [5, 6], // Fri-Sat\n                        });\n                      }}\n                    >\n                      Weekends\n                    </Button>\n                    \n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      className=\"text-xs text-red-600\"\n                      onClick={() => {\n                        updateChannelVisibility(channel.id, {\n                          availableFrom: undefined,\n                          availableTo: undefined,\n                          daysOfWeek: undefined,\n                        });\n                      }}\n                    >\n                      Reset\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </Card>\n          );\n        })}\n      </div>\n      \n      {availableChannels.length === 0 && (\n        <div className=\"text-center py-6 text-gray-500 border border-dashed border-gray-300 rounded-lg\">\n          <p className=\"text-sm\">No sales channels configured</p>\n          <p className=\"text-xs text-gray-400\">Set up your sales channels to control visibility</p>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6233, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/menu/menu-item-editor.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { \n  X, \n  Save, \n  Upload, \n  Plus, \n  Minus, \n  Info,\n  DollarSign,\n  Clock,\n  Package,\n  Tag,\n  AlertTriangle,\n  Camera\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Switch } from '@/components/ui/switch';\nimport { Tabs } from '@/components/ui/tabs';\nimport { Card } from '@/components/ui/card';\nimport { \n  MenuItem, \n  CreateMenuItem, \n  UpdateMenuItem, \n  ModifierGroup,\n  SalesChannel,\n  Allergen\n} from '@/lib/menu/types';\nimport { formatPrice, deepClone } from '@/lib/menu/utils';\nimport { ModifierGroupEditor } from './modifier-group-editor';\nimport { PricingStrategyEditor } from './pricing-strategy-editor';\nimport { ChannelVisibilityEditor } from './channel-visibility-editor';\n\ninterface MenuItemEditorProps {\n  item?: MenuItem;\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (data: CreateMenuItem | UpdateMenuItem) => Promise<void>;\n  availableChannels?: SalesChannel[];\n  availableAllergens?: Allergen[];\n  availableGroups?: { id: string; name: string; menuId: string }[];\n  loading?: boolean;\n  className?: string;\n}\n\nexport function MenuItemEditor({\n  item,\n  isOpen,\n  onClose,\n  onSave,\n  availableChannels = [],\n  availableAllergens = [],\n  availableGroups = [],\n  loading = false,\n  className,\n}: MenuItemEditorProps) {\n  const [formData, setFormData] = useState<CreateMenuItem | UpdateMenuItem>({\n    name: '',\n    description: '',\n    basePrice: 0,\n    sortOrder: 0,\n    isActive: true,\n    isAvailable: true,\n    pricingStrategies: [],\n    tags: [],\n    allergens: [],\n    dietaryRestrictions: [],\n    media: [],\n    channelVisibility: [],\n  });\n\n  const [activeTab, setActiveTab] = useState('basic');\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isDirty, setIsDirty] = useState(false);\n\n  // Initialize form data when item changes\n  useEffect(() => {\n    if (item) {\n      setFormData(deepClone(item));\n    } else {\n      setFormData({\n        name: '',\n        description: '',\n        basePrice: 0,\n        sortOrder: 0,\n        isActive: true,\n        isAvailable: true,\n        pricingStrategies: [],\n        tags: [],\n        allergens: [],\n        dietaryRestrictions: [],\n        media: [],\n        channelVisibility: [],\n      });\n    }\n    setIsDirty(false);\n    setErrors({});\n  }, [item]);\n\n  // Handle form field changes\n  const handleChange = useCallback((field: string, value: any) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setIsDirty(true);\n    \n    // Clear field error when user starts typing\n    if (errors[field]) {\n      setErrors(prev => {\n        const newErrors = { ...prev };\n        delete newErrors[field];\n        return newErrors;\n      });\n    }\n  }, [errors]);\n\n  // Validation\n  const validate = useCallback(() => {\n    const newErrors: Record<string, string> = {};\n    \n    if (!formData.name?.trim()) {\n      newErrors.name = 'Name is required';\n    }\n    \n    if (!formData.basePrice || formData.basePrice <= 0) {\n      newErrors.basePrice = 'Price must be greater than 0';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [formData]);\n\n  // Handle save\n  const handleSave = useCallback(async () => {\n    if (!validate()) return;\n    \n    try {\n      await onSave(formData);\n      setIsDirty(false);\n    } catch (error) {\n      console.error('Failed to save item:', error);\n    }\n  }, [formData, validate, onSave]);\n\n  // Handle close with confirmation\n  const handleClose = useCallback(() => {\n    if (isDirty) {\n      const confirmed = window.confirm('You have unsaved changes. Are you sure you want to close?');\n      if (!confirmed) return;\n    }\n    onClose();\n  }, [isDirty, onClose]);\n\n  // Tag management\n  const addTag = useCallback((tag: string) => {\n    if (tag.trim() && !formData.tags?.includes(tag.trim())) {\n      handleChange('tags', [...(formData.tags || []), tag.trim()]);\n    }\n  }, [formData.tags, handleChange]);\n\n  const removeTag = useCallback((tagToRemove: string) => {\n    handleChange('tags', formData.tags?.filter(tag => tag !== tagToRemove) || []);\n  }, [formData.tags, handleChange]);\n\n  // Allergen management\n  const toggleAllergen = useCallback((allergenId: string) => {\n    const allergens = formData.allergens || [];\n    if (allergens.includes(allergenId)) {\n      handleChange('allergens', allergens.filter(id => id !== allergenId));\n    } else {\n      handleChange('allergens', [...allergens, allergenId]);\n    }\n  }, [formData.allergens, handleChange]);\n\n  // Dietary restrictions management\n  const toggleDietaryRestriction = useCallback((restriction: string) => {\n    const restrictions = formData.dietaryRestrictions || [];\n    if (restrictions.includes(restriction)) {\n      handleChange('dietaryRestrictions', restrictions.filter(r => r !== restriction));\n    } else {\n      handleChange('dietaryRestrictions', [...restrictions, restriction]);\n    }\n  }, [formData.dietaryRestrictions, handleChange]);\n\n  if (!isOpen) return null;\n\n  const tabs = [\n    { id: 'basic', label: 'Basic Info', icon: <Info className=\"h-4 w-4\" /> },\n    { id: 'pricing', label: 'Pricing', icon: <DollarSign className=\"h-4 w-4\" /> },\n    { id: 'availability', label: 'Availability', icon: <Clock className=\"h-4 w-4\" /> },\n    { id: 'inventory', label: 'Inventory', icon: <Package className=\"h-4 w-4\" /> },\n    { id: 'modifiers', label: 'Modifiers', icon: <Plus className=\"h-4 w-4\" /> },\n    { id: 'allergens', label: 'Allergens', icon: <AlertTriangle className=\"h-4 w-4\" /> },\n    { id: 'media', label: 'Media', icon: <Camera className=\"h-4 w-4\" /> },\n  ];\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black/50\" \n        onClick={handleClose}\n      />\n      \n      {/* Panel */}\n      <div className=\"absolute right-0 top-0 h-full w-full max-w-2xl bg-white shadow-xl flex flex-col\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between px-6 py-4 border-b\">\n          <div>\n            <h2 className=\"text-xl font-semibold\">\n              {item ? 'Edit Menu Item' : 'Create Menu Item'}\n            </h2>\n            {item && (\n              <p className=\"text-sm text-gray-500 mt-1\">\n                ID: {item.id}\n              </p>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            {isDirty && (\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                Unsaved changes\n              </Badge>\n            )}\n            <Button\n              onClick={handleSave}\n              disabled={loading}\n              size=\"sm\"\n            >\n              <Save className=\"h-4 w-4 mr-2\" />\n              Save\n            </Button>\n            <Button\n              onClick={handleClose}\n              variant=\"ghost\"\n              size=\"sm\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 flex flex-col overflow-hidden\">\n          {/* Tabs */}\n          <Tabs\n            value={activeTab}\n            onValueChange={setActiveTab}\n            tabs={tabs}\n            className=\"border-b\"\n          />\n\n          {/* Tab Content */}\n          <div className=\"flex-1 overflow-y-auto p-6\">\n            {activeTab === 'basic' && (\n              <div className=\"space-y-6\">\n                {/* Name */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Item Name *\n                  </label>\n                  <Input\n                    value={formData.name || ''}\n                    onChange={(e) => handleChange('name', e.target.value)}\n                    placeholder=\"Enter item name\"\n                    error={errors.name}\n                  />\n                </div>\n\n                {/* Description */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Description\n                  </label>\n                  <textarea\n                    value={formData.description || ''}\n                    onChange={(e) => handleChange('description', e.target.value)}\n                    placeholder=\"Enter item description\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                    rows={3}\n                  />\n                </div>\n\n                {/* Short Description */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Short Description\n                  </label>\n                  <Input\n                    value={formData.shortDescription || ''}\n                    onChange={(e) => handleChange('shortDescription', e.target.value)}\n                    placeholder=\"Brief description for POS/receipts\"\n                  />\n                </div>\n\n                {/* SKU and Barcode */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">\n                      SKU\n                    </label>\n                    <Input\n                      value={formData.sku || ''}\n                      onChange={(e) => handleChange('sku', e.target.value)}\n                      placeholder=\"Product SKU\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium mb-2\">\n                      Barcode\n                    </label>\n                    <Input\n                      value={formData.barcode || ''}\n                      onChange={(e) => handleChange('barcode', e.target.value)}\n                      placeholder=\"Barcode\"\n                    />\n                  </div>\n                </div>\n\n                {/* Menu Group */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Menu Group\n                  </label>\n                  <select\n                    value={formData.menuGroupId || ''}\n                    onChange={(e) => handleChange('menuGroupId', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">Select a group</option>\n                    {availableGroups.map((group) => (\n                      <option key={group.id} value={group.id}>\n                        {group.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                {/* Tags */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Tags\n                  </label>\n                  <div className=\"flex flex-wrap gap-2 mb-2\">\n                    {formData.tags?.map((tag) => (\n                      <Badge\n                        key={tag}\n                        variant=\"secondary\"\n                        className=\"px-2 py-1\"\n                      >\n                        {tag}\n                        <button\n                          onClick={() => removeTag(tag)}\n                          className=\"ml-1 text-gray-500 hover:text-gray-700\"\n                        >\n                          <X className=\"h-3 w-3\" />\n                        </button>\n                      </Badge>\n                    ))}\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Input\n                      placeholder=\"Add tag\"\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                          addTag(e.currentTarget.value);\n                          e.currentTarget.value = '';\n                        }\n                      }}\n                    />\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => {\n                        const input = document.querySelector('input[placeholder=\"Add tag\"]') as HTMLInputElement;\n                        if (input?.value) {\n                          addTag(input.value);\n                          input.value = '';\n                        }\n                      }}\n                    >\n                      <Plus className=\"h-3 w-3\" />\n                    </Button>\n                  </div>\n                </div>\n\n                {/* Status toggles */}\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <label className=\"text-sm font-medium\">Active</label>\n                    <Switch\n                      checked={formData.isActive}\n                      onCheckedChange={(checked) => handleChange('isActive', checked)}\n                    />\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <label className=\"text-sm font-medium\">Available</label>\n                    <Switch\n                      checked={formData.isAvailable}\n                      onCheckedChange={(checked) => handleChange('isAvailable', checked)}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'pricing' && (\n              <div className=\"space-y-6\">\n                {/* Base Price */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Base Price *\n                  </label>\n                  <div className=\"relative\">\n                    <DollarSign className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                    <Input\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"0\"\n                      value={formData.basePrice || ''}\n                      onChange={(e) => handleChange('basePrice', parseFloat(e.target.value) || 0)}\n                      placeholder=\"0.00\"\n                      className=\"pl-10\"\n                      error={errors.basePrice}\n                    />\n                  </div>\n                </div>\n\n                {/* Pricing Strategies */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Pricing Strategies\n                  </label>\n                  <PricingStrategyEditor\n                    strategies={formData.pricingStrategies || []}\n                    onChange={(strategies) => handleChange('pricingStrategies', strategies)}\n                  />\n                </div>\n\n                {/* Preparation Time */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Preparation Time (minutes)\n                  </label>\n                  <div className=\"relative\">\n                    <Clock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                    <Input\n                      type=\"number\"\n                      min=\"0\"\n                      value={formData.preparationTime || ''}\n                      onChange={(e) => handleChange('preparationTime', parseInt(e.target.value) || undefined)}\n                      placeholder=\"15\"\n                      className=\"pl-10\"\n                    />\n                  </div>\n                </div>\n\n                {/* Cooking Instructions */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Cooking Instructions\n                  </label>\n                  <textarea\n                    value={formData.cookingInstructions || ''}\n                    onChange={(e) => handleChange('cookingInstructions', e.target.value)}\n                    placeholder=\"Special cooking instructions\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                    rows={3}\n                  />\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'availability' && (\n              <div className=\"space-y-6\">\n                <ChannelVisibilityEditor\n                  channelVisibility={formData.channelVisibility || []}\n                  availableChannels={availableChannels}\n                  onChange={(visibility) => handleChange('channelVisibility', visibility)}\n                />\n              </div>\n            )}\n\n            {activeTab === 'inventory' && (\n              <div className=\"space-y-6\">\n                {/* Track Inventory Toggle */}\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium\">Track Inventory</label>\n                    <p className=\"text-xs text-gray-500\">Monitor stock levels for this item</p>\n                  </div>\n                  <Switch\n                    checked={formData.trackInventory}\n                    onCheckedChange={(checked) => handleChange('trackInventory', checked)}\n                  />\n                </div>\n\n                {formData.trackInventory && (\n                  <>\n                    {/* Stock Quantity */}\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">\n                        Current Stock\n                      </label>\n                      <Input\n                        type=\"number\"\n                        min=\"0\"\n                        value={formData.stockQuantity || ''}\n                        onChange={(e) => handleChange('stockQuantity', parseInt(e.target.value) || undefined)}\n                        placeholder=\"0\"\n                      />\n                    </div>\n\n                    {/* Low Stock Threshold */}\n                    <div>\n                      <label className=\"block text-sm font-medium mb-2\">\n                        Low Stock Threshold\n                      </label>\n                      <Input\n                        type=\"number\"\n                        min=\"0\"\n                        value={formData.lowStockThreshold || ''}\n                        onChange={(e) => handleChange('lowStockThreshold', parseInt(e.target.value) || undefined)}\n                        placeholder=\"5\"\n                      />\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        Get notified when stock falls below this level\n                      </p>\n                    </div>\n                  </>\n                )}\n              </div>\n            )}\n\n            {activeTab === 'modifiers' && (\n              <div className=\"space-y-6\">\n                <ModifierGroupEditor\n                  modifierGroups={item?.modifierGroups || []}\n                  onChange={(groups) => {\n                    // This would update the item's modifier groups\n                    // For now, just log as this requires more complex state management\n                    console.log('Modifier groups updated:', groups);\n                  }}\n                />\n              </div>\n            )}\n\n            {activeTab === 'allergens' && (\n              <div className=\"space-y-6\">\n                {/* Allergens */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-3\">\n                    Allergens\n                  </label>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {availableAllergens.map((allergen) => (\n                      <div\n                        key={allergen.id}\n                        className=\"flex items-center space-x-2\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          id={`allergen-${allergen.id}`}\n                          checked={formData.allergens?.includes(allergen.id) || false}\n                          onChange={() => toggleAllergen(allergen.id)}\n                          className=\"rounded border-gray-300\"\n                        />\n                        <label\n                          htmlFor={`allergen-${allergen.id}`}\n                          className=\"text-sm cursor-pointer\"\n                        >\n                          {allergen.name}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Dietary Restrictions */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-3\">\n                    Dietary Restrictions\n                  </label>\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    {['vegetarian', 'vegan', 'gluten-free', 'dairy-free', 'nut-free', 'keto', 'halal', 'kosher'].map((restriction) => (\n                      <div\n                        key={restriction}\n                        className=\"flex items-center space-x-2\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          id={`restriction-${restriction}`}\n                          checked={formData.dietaryRestrictions?.includes(restriction) || false}\n                          onChange={() => toggleDietaryRestriction(restriction)}\n                          className=\"rounded border-gray-300\"\n                        />\n                        <label\n                          htmlFor={`restriction-${restriction}`}\n                          className=\"text-sm cursor-pointer capitalize\"\n                        >\n                          {restriction.replace('-', ' ')}\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Spice Level */}\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">\n                    Spice Level\n                  </label>\n                  <select\n                    value={formData.spiceLevel || ''}\n                    onChange={(e) => handleChange('spiceLevel', e.target.value || undefined)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"\">Not specified</option>\n                    <option value=\"none\">No spice</option>\n                    <option value=\"mild\">Mild</option>\n                    <option value=\"medium\">Medium</option>\n                    <option value=\"hot\">Hot</option>\n                    <option value=\"very_hot\">Very Hot</option>\n                  </select>\n                </div>\n              </div>\n            )}\n\n            {activeTab === 'media' && (\n              <div className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium mb-3\">\n                    Item Images\n                  </label>\n                  \n                  {/* Image Upload Area */}\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                    <Upload className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                      Upload Images\n                    </h3>\n                    <p className=\"text-gray-500 mb-4\">\n                      Drag and drop images here, or click to select files\n                    </p>\n                    <Button variant=\"outline\">\n                      <Upload className=\"h-4 w-4 mr-2\" />\n                      Choose Files\n                    </Button>\n                  </div>\n\n                  {/* Existing Images */}\n                  {formData.media && formData.media.length > 0 && (\n                    <div className=\"grid grid-cols-3 gap-4 mt-4\">\n                      {formData.media.map((media, index) => (\n                        <div key={index} className=\"relative\">\n                          <img\n                            src={media.url}\n                            alt={media.alt}\n                            className=\"w-full h-24 object-cover rounded border\"\n                          />\n                          <Button\n                            size=\"sm\"\n                            variant=\"destructive\"\n                            className=\"absolute top-1 right-1 h-6 w-6 p-0\"\n                            onClick={() => {\n                              const newMedia = [...formData.media];\n                              newMedia.splice(index, 1);\n                              handleChange('media', newMedia);\n                            }}\n                          >\n                            <X className=\"h-3 w-3\" />\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7617, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/menu/data.ts"],"sourcesContent":["import { \n  Menu, \n  MenuGroup, \n  MenuItem, \n  ModifierGroup,\n  ModifierOption,\n  SalesChannel,\n  Allergen,\n  MenuResponse,\n  MenuItemResponse,\n  MenuFilters,\n  CreateMenu,\n  CreateMenuGroup,\n  CreateMenuItem,\n  CreateModifierGroup,\n  CreateModifierOption,\n  UpdateMenu,\n  UpdateMenuGroup,\n  UpdateMenuItem,\n  UpdateModifierGroup,\n  UpdateModifierOption\n} from './types';\n\n// Mock data for development - replace with actual API calls\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\n// Sample data\nconst sampleAllergens: Allergen[] = [\n  { id: '1', name: 'Gluten', description: 'Contains gluten', severity: 'moderate' },\n  { id: '2', name: 'Dairy', description: 'Contains dairy products', severity: 'moderate' },\n  { id: '3', name: 'Nuts', description: 'Contains tree nuts', severity: 'severe' },\n  { id: '4', name: 'Shellfish', description: 'Contains shellfish', severity: 'severe' },\n  { id: '5', name: 'Eggs', description: 'Contains eggs', severity: 'mild' },\n];\n\nconst sampleChannels: SalesChannel[] = [\n  { id: 'dine-in', name: 'Dine In', type: 'dine_in', isActive: true },\n  { id: 'takeout', name: 'Takeout', type: 'takeout', isActive: true },\n  { id: 'delivery', name: 'Delivery', type: 'delivery', isActive: true },\n  { id: 'online', name: 'Online Ordering', type: 'online', isActive: true },\n];\n\nlet mockMenus: Menu[] = [\n  {\n    id: '1',\n    name: 'Main Menu',\n    description: 'Our signature dishes and classics',\n    type: 'main',\n    sortOrder: 1,\n    isActive: true,\n    createdAt: new Date('2024-01-01'),\n    updatedAt: new Date('2024-01-15'),\n    media: [],\n    channelVisibility: [\n      { channelId: 'dine-in', isVisible: true },\n      { channelId: 'takeout', isVisible: true },\n    ],\n    locationIds: [],\n    groups: [\n      {\n        id: 'group-1',\n        name: 'Appetizers',\n        description: 'Start your meal right',\n        sortOrder: 1,\n        isActive: true,\n        createdAt: new Date('2024-01-01'),\n        updatedAt: new Date('2024-01-10'),\n        media: [],\n        channelVisibility: [],\n        menuId: '1',\n        items: [\n          {\n            id: 'item-1',\n            name: 'Buffalo Wings',\n            description: 'Crispy wings tossed in our signature buffalo sauce',\n            basePrice: 12.99,\n            sortOrder: 1,\n            isActive: true,\n            isAvailable: true,\n            createdAt: new Date('2024-01-01'),\n            updatedAt: new Date('2024-01-05'),\n            pricingStrategies: [],\n            tags: ['spicy', 'popular'],\n            allergens: [],\n            dietaryRestrictions: [],\n            media: [],\n            channelVisibility: [],\n            modifierGroups: [\n              {\n                id: 'mod-group-1',\n                name: 'Sauce Options',\n                description: 'Choose your sauce',\n                isRequired: true,\n                minSelections: 1,\n                maxSelections: 1,\n                sortOrder: 1,\n                displayType: 'radio',\n                isActive: true,\n                createdAt: new Date('2024-01-01'),\n                updatedAt: new Date('2024-01-01'),\n                options: [\n                  {\n                    id: 'mod-opt-1',\n                    name: 'Buffalo',\n                    description: 'Classic buffalo sauce',\n                    price: 0,\n                    sortOrder: 1,\n                    isDefault: true,\n                    isActive: true,\n                    createdAt: new Date('2024-01-01'),\n                    updatedAt: new Date('2024-01-01'),\n                    pricingStrategies: [],\n                    allergens: [],\n                    media: [],\n                  },\n                  {\n                    id: 'mod-opt-2',\n                    name: 'BBQ',\n                    description: 'Sweet and smoky BBQ sauce',\n                    price: 0,\n                    sortOrder: 2,\n                    isDefault: false,\n                    isActive: true,\n                    createdAt: new Date('2024-01-01'),\n                    updatedAt: new Date('2024-01-01'),\n                    pricingStrategies: [],\n                    allergens: [],\n                    media: [],\n                  }\n                ]\n              }\n            ]\n          }\n        ],\n        subGroups: []\n      }\n    ]\n  }\n];\n\n// API Functions\n\nexport async function getMenus(params?: {\n  page?: number;\n  limit?: number;\n  search?: string;\n  isActive?: boolean;\n}): Promise<MenuResponse> {\n  await delay(100);\n  \n  let filtered = [...mockMenus];\n  \n  // Apply filters\n  if (params?.search) {\n    const search = params.search.toLowerCase();\n    filtered = filtered.filter(menu => \n      menu.name.toLowerCase().includes(search) ||\n      menu.description?.toLowerCase().includes(search)\n    );\n  }\n  \n  if (params?.isActive !== undefined) {\n    filtered = filtered.filter(menu => menu.isActive === params.isActive);\n  }\n  \n  // Pagination\n  const page = params?.page || 1;\n  const limit = params?.limit || 10;\n  const start = (page - 1) * limit;\n  const end = start + limit;\n  \n  return {\n    data: filtered.slice(start, end),\n    total: filtered.length,\n    page,\n    limit,\n  };\n}\n\nexport async function getMenu(id: string): Promise<Menu | null> {\n  await delay(100);\n  return mockMenus.find(menu => menu.id === id) || null;\n}\n\nexport async function createMenu(data: CreateMenu): Promise<Menu> {\n  await delay(200);\n  \n  const newMenu: Menu = {\n    ...data,\n    id: `menu-${Date.now()}`,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    groups: [],\n  };\n  \n  mockMenus.push(newMenu);\n  return newMenu;\n}\n\nexport async function updateMenu(id: string, data: UpdateMenu): Promise<Menu | null> {\n  await delay(200);\n  \n  const index = mockMenus.findIndex(menu => menu.id === id);\n  if (index === -1) return null;\n  \n  mockMenus[index] = {\n    ...mockMenus[index],\n    ...data,\n    updatedAt: new Date(),\n  };\n  \n  return mockMenus[index];\n}\n\nexport async function deleteMenu(id: string): Promise<boolean> {\n  await delay(200);\n  \n  const index = mockMenus.findIndex(menu => menu.id === id);\n  if (index === -1) return false;\n  \n  mockMenus.splice(index, 1);\n  return true;\n}\n\n// Menu Groups\nexport async function getMenuGroups(menuId: string): Promise<MenuGroup[]> {\n  await delay(100);\n  \n  const menu = mockMenus.find(m => m.id === menuId);\n  return menu?.groups || [];\n}\n\nexport async function getMenuGroup(id: string): Promise<MenuGroup | null> {\n  await delay(100);\n  \n  for (const menu of mockMenus) {\n    const group = findGroupRecursive(menu.groups, id);\n    if (group) return group;\n  }\n  \n  return null;\n}\n\nfunction findGroupRecursive(groups: MenuGroup[], id: string): MenuGroup | null {\n  for (const group of groups) {\n    if (group.id === id) return group;\n    \n    const found = findGroupRecursive(group.subGroups, id);\n    if (found) return found;\n  }\n  return null;\n}\n\nexport async function createMenuGroup(data: CreateMenuGroup): Promise<MenuGroup> {\n  await delay(200);\n  \n  const newGroup: MenuGroup = {\n    ...data,\n    id: `group-${Date.now()}`,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    items: [],\n    subGroups: [],\n  };\n  \n  // Add to appropriate menu\n  const menu = mockMenus.find(m => m.id === data.menuId);\n  if (menu) {\n    if (data.parentGroupId) {\n      const parentGroup = findGroupRecursive(menu.groups, data.parentGroupId);\n      if (parentGroup) {\n        parentGroup.subGroups.push(newGroup);\n      }\n    } else {\n      menu.groups.push(newGroup);\n    }\n  }\n  \n  return newGroup;\n}\n\nexport async function updateMenuGroup(id: string, data: UpdateMenuGroup): Promise<MenuGroup | null> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    const group = findGroupRecursive(menu.groups, id);\n    if (group) {\n      Object.assign(group, {\n        ...data,\n        updatedAt: new Date(),\n      });\n      return group;\n    }\n  }\n  \n  return null;\n}\n\nexport async function deleteMenuGroup(id: string): Promise<boolean> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    if (removeGroupRecursive(menu.groups, id)) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\nfunction removeGroupRecursive(groups: MenuGroup[], id: string): boolean {\n  const index = groups.findIndex(group => group.id === id);\n  if (index !== -1) {\n    groups.splice(index, 1);\n    return true;\n  }\n  \n  for (const group of groups) {\n    if (removeGroupRecursive(group.subGroups, id)) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\n// Menu Items\nexport async function getMenuItems(params?: {\n  page?: number;\n  limit?: number;\n  menuId?: string;\n  groupId?: string;\n  filters?: MenuFilters;\n}): Promise<MenuItemResponse> {\n  await delay(100);\n  \n  let items: MenuItem[] = [];\n  \n  // Collect all items\n  for (const menu of mockMenus) {\n    if (params?.menuId && menu.id !== params.menuId) continue;\n    \n    collectItemsRecursive(menu.groups, items, params?.groupId);\n  }\n  \n  // Apply filters\n  if (params?.filters) {\n    items = applyMenuItemFilters(items, params.filters);\n  }\n  \n  // Pagination\n  const page = params?.page || 1;\n  const limit = params?.limit || 20;\n  const start = (page - 1) * limit;\n  const end = start + limit;\n  \n  return {\n    data: items.slice(start, end),\n    total: items.length,\n    page,\n    limit,\n  };\n}\n\nfunction collectItemsRecursive(\n  groups: MenuGroup[], \n  items: MenuItem[], \n  targetGroupId?: string\n): void {\n  for (const group of groups) {\n    if (!targetGroupId || group.id === targetGroupId) {\n      items.push(...group.items);\n    }\n    \n    if (!targetGroupId) {\n      collectItemsRecursive(group.subGroups, items);\n    }\n  }\n}\n\nfunction applyMenuItemFilters(items: MenuItem[], filters: MenuFilters): MenuItem[] {\n  return items.filter(item => {\n    if (filters.search) {\n      const search = filters.search.toLowerCase();\n      if (!item.name.toLowerCase().includes(search) &&\n          !item.description?.toLowerCase().includes(search)) {\n        return false;\n      }\n    }\n    \n    if (filters.isActive !== undefined && item.isActive !== filters.isActive) {\n      return false;\n    }\n    \n    if (filters.isAvailable !== undefined && item.isAvailable !== filters.isAvailable) {\n      return false;\n    }\n    \n    if (filters.priceRange) {\n      if (item.basePrice < filters.priceRange[0] || item.basePrice > filters.priceRange[1]) {\n        return false;\n      }\n    }\n    \n    if (filters.allergens?.length) {\n      const hasAllergen = filters.allergens.some(allergen => \n        item.allergens.includes(allergen)\n      );\n      if (hasAllergen) return false;\n    }\n    \n    if (filters.tags?.length) {\n      const hasTag = filters.tags.some(tag => item.tags.includes(tag));\n      if (!hasTag) return false;\n    }\n    \n    return true;\n  });\n}\n\nexport async function getMenuItem(id: string): Promise<MenuItem | null> {\n  await delay(100);\n  \n  for (const menu of mockMenus) {\n    const item = findItemRecursive(menu.groups, id);\n    if (item) return item;\n  }\n  \n  return null;\n}\n\nfunction findItemRecursive(groups: MenuGroup[], id: string): MenuItem | null {\n  for (const group of groups) {\n    const item = group.items.find(item => item.id === id);\n    if (item) return item;\n    \n    const found = findItemRecursive(group.subGroups, id);\n    if (found) return found;\n  }\n  return null;\n}\n\nexport async function createMenuItem(data: CreateMenuItem): Promise<MenuItem> {\n  await delay(200);\n  \n  const newItem: MenuItem = {\n    ...data,\n    id: `item-${Date.now()}`,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    modifierGroups: [],\n  };\n  \n  // Add to appropriate group\n  if (data.menuGroupId) {\n    for (const menu of mockMenus) {\n      const group = findGroupRecursive(menu.groups, data.menuGroupId);\n      if (group) {\n        group.items.push(newItem);\n        break;\n      }\n    }\n  }\n  \n  return newItem;\n}\n\nexport async function updateMenuItem(id: string, data: UpdateMenuItem): Promise<MenuItem | null> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    const item = findItemRecursive(menu.groups, id);\n    if (item) {\n      Object.assign(item, {\n        ...data,\n        updatedAt: new Date(),\n      });\n      return item;\n    }\n  }\n  \n  return null;\n}\n\nexport async function deleteMenuItem(id: string): Promise<boolean> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    if (removeItemRecursive(menu.groups, id)) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\nfunction removeItemRecursive(groups: MenuGroup[], id: string): boolean {\n  for (const group of groups) {\n    const index = group.items.findIndex(item => item.id === id);\n    if (index !== -1) {\n      group.items.splice(index, 1);\n      return true;\n    }\n    \n    if (removeItemRecursive(group.subGroups, id)) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\n// Modifier Groups\nexport async function getModifierGroups(itemId: string): Promise<ModifierGroup[]> {\n  await delay(100);\n  \n  const item = await getMenuItem(itemId);\n  return item?.modifierGroups || [];\n}\n\nexport async function createModifierGroup(\n  itemId: string, \n  data: CreateModifierGroup\n): Promise<ModifierGroup> {\n  await delay(200);\n  \n  const newGroup: ModifierGroup = {\n    ...data,\n    id: `mod-group-${Date.now()}`,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    options: [],\n  };\n  \n  // Add to item\n  const item = await getMenuItem(itemId);\n  if (item) {\n    item.modifierGroups.push(newGroup);\n  }\n  \n  return newGroup;\n}\n\nexport async function updateModifierGroup(\n  id: string, \n  data: UpdateModifierGroup\n): Promise<ModifierGroup | null> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    const group = findModifierGroupRecursive(menu.groups, id);\n    if (group) {\n      Object.assign(group, {\n        ...data,\n        updatedAt: new Date(),\n      });\n      return group;\n    }\n  }\n  \n  return null;\n}\n\nfunction findModifierGroupRecursive(\n  menuGroups: MenuGroup[], \n  id: string\n): ModifierGroup | null {\n  for (const group of menuGroups) {\n    for (const item of group.items) {\n      const modGroup = item.modifierGroups.find(mg => mg.id === id);\n      if (modGroup) return modGroup;\n    }\n    \n    const found = findModifierGroupRecursive(group.subGroups, id);\n    if (found) return found;\n  }\n  return null;\n}\n\nexport async function deleteModifierGroup(id: string): Promise<boolean> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    if (removeModifierGroupRecursive(menu.groups, id)) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\nfunction removeModifierGroupRecursive(menuGroups: MenuGroup[], id: string): boolean {\n  for (const group of menuGroups) {\n    for (const item of group.items) {\n      const index = item.modifierGroups.findIndex(mg => mg.id === id);\n      if (index !== -1) {\n        item.modifierGroups.splice(index, 1);\n        return true;\n      }\n    }\n    \n    if (removeModifierGroupRecursive(group.subGroups, id)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Modifier Options\nexport async function createModifierOption(\n  groupId: string,\n  data: CreateModifierOption\n): Promise<ModifierOption> {\n  await delay(200);\n  \n  const newOption: ModifierOption = {\n    ...data,\n    id: `mod-opt-${Date.now()}`,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n  \n  // Add to group\n  const group = await getModifierGroup(groupId);\n  if (group) {\n    group.options.push(newOption);\n  }\n  \n  return newOption;\n}\n\nexport async function getModifierGroup(id: string): Promise<ModifierGroup | null> {\n  await delay(100);\n  \n  for (const menu of mockMenus) {\n    const group = findModifierGroupRecursive(menu.groups, id);\n    if (group) return group;\n  }\n  \n  return null;\n}\n\nexport async function updateModifierOption(\n  id: string,\n  data: UpdateModifierOption\n): Promise<ModifierOption | null> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    const option = findModifierOptionRecursive(menu.groups, id);\n    if (option) {\n      Object.assign(option, {\n        ...data,\n        updatedAt: new Date(),\n      });\n      return option;\n    }\n  }\n  \n  return null;\n}\n\nfunction findModifierOptionRecursive(\n  menuGroups: MenuGroup[], \n  id: string\n): ModifierOption | null {\n  for (const group of menuGroups) {\n    for (const item of group.items) {\n      for (const modGroup of item.modifierGroups) {\n        const option = modGroup.options.find(opt => opt.id === id);\n        if (option) return option;\n      }\n    }\n    \n    const found = findModifierOptionRecursive(group.subGroups, id);\n    if (found) return found;\n  }\n  return null;\n}\n\nexport async function deleteModifierOption(id: string): Promise<boolean> {\n  await delay(200);\n  \n  for (const menu of mockMenus) {\n    if (removeModifierOptionRecursive(menu.groups, id)) {\n      return true;\n    }\n  }\n  \n  return false;\n}\n\nfunction removeModifierOptionRecursive(menuGroups: MenuGroup[], id: string): boolean {\n  for (const group of menuGroups) {\n    for (const item of group.items) {\n      for (const modGroup of item.modifierGroups) {\n        const index = modGroup.options.findIndex(opt => opt.id === id);\n        if (index !== -1) {\n          modGroup.options.splice(index, 1);\n          return true;\n        }\n      }\n    }\n    \n    if (removeModifierOptionRecursive(group.subGroups, id)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// Utility functions\nexport async function getSalesChannels(): Promise<SalesChannel[]> {\n  await delay(50);\n  return [...sampleChannels];\n}\n\nexport async function getAllergens(): Promise<Allergen[]> {\n  await delay(50);\n  return [...sampleAllergens];\n}\n\nexport async function reorderItems(\n  groupId: string, \n  itemIds: string[]\n): Promise<boolean> {\n  await delay(200);\n  \n  const group = await getMenuGroup(groupId);\n  if (!group) return false;\n  \n  // Update sort orders based on new position\n  group.items.sort((a, b) => {\n    const aIndex = itemIds.indexOf(a.id);\n    const bIndex = itemIds.indexOf(b.id);\n    return aIndex - bIndex;\n  });\n  \n  group.items.forEach((item, index) => {\n    item.sortOrder = index + 1;\n    item.updatedAt = new Date();\n  });\n  \n  return true;\n}\n\nexport async function reorderGroups(\n  menuId: string, \n  groupIds: string[]\n): Promise<boolean> {\n  await delay(200);\n  \n  const menu = await getMenu(menuId);\n  if (!menu) return false;\n  \n  // Update sort orders based on new position\n  menu.groups.sort((a, b) => {\n    const aIndex = groupIds.indexOf(a.id);\n    const bIndex = groupIds.indexOf(b.id);\n    return aIndex - bIndex;\n  });\n  \n  menu.groups.forEach((group, index) => {\n    group.sortOrder = index + 1;\n    group.updatedAt = new Date();\n  });\n  \n  return true;\n}\n\nexport async function moveItem(\n  itemId: string, \n  targetGroupId: string\n): Promise<boolean> {\n  await delay(200);\n  \n  // Find and remove item from current location\n  let item: MenuItem | null = null;\n  for (const menu of mockMenus) {\n    if (removeItemRecursive(menu.groups, itemId)) {\n      item = await getMenuItem(itemId);\n      break;\n    }\n  }\n  \n  if (!item) return false;\n  \n  // Add to new group\n  const targetGroup = await getMenuGroup(targetGroupId);\n  if (!targetGroup) return false;\n  \n  item.menuGroupId = targetGroupId;\n  item.updatedAt = new Date();\n  targetGroup.items.push(item);\n  \n  return true;\n}\n\n// Bulk operations\nexport async function bulkUpdateItems(\n  itemIds: string[],\n  updates: Partial<UpdateMenuItem>\n): Promise<MenuItem[]> {\n  await delay(300);\n  \n  const updatedItems: MenuItem[] = [];\n  \n  for (const itemId of itemIds) {\n    const item = await updateMenuItem(itemId, updates);\n    if (item) {\n      updatedItems.push(item);\n    }\n  }\n  \n  return updatedItems;\n}\n\nexport async function bulkDeleteItems(itemIds: string[]): Promise<boolean> {\n  await delay(300);\n  \n  let allDeleted = true;\n  \n  for (const itemId of itemIds) {\n    const deleted = await deleteMenuItem(itemId);\n    if (!deleted) {\n      allDeleted = false;\n    }\n  }\n  \n  return allDeleted;\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 8359, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/menu/menu-management-client.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useEffect, useMemo, useTransition } from 'react';\nimport { \n  Plus, \n  RefreshCw, \n  Filter, \n  Search,\n  Settings,\n  Download,\n  Upload\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert } from '@/components/ui/alert';\nimport { MenuTreeNavigator } from './menu-tree-navigator';\nimport { MenuItemsTable } from './menu-items-table';\nimport { MenuItemEditor } from './menu-item-editor';\nimport { \n  Menu, \n  MenuItem, \n  MenuGroup,\n  MenuTreeNode, \n  SalesChannel, \n  Allergen, \n  MenuFilters,\n  CreateMenuItem,\n  UpdateMenuItem\n} from '@/lib/menu/types';\nimport { \n  buildMenuTree, \n  filterMenuItems, \n  isItemAvailable \n} from '@/lib/menu/utils';\nimport {\n  getMenuItems,\n  getMenus,\n  createMenuItem as createMenuItemData,\n  updateMenuItem as updateMenuItemData,\n  deleteMenuItem as deleteMenuItemData,\n  bulkUpdateItems,\n  bulkDeleteItems,\n} from '@/lib/menu/data';\n\ninterface MenuManagementClientProps {\n  initialMenus: Menu[];\n  availableChannels: SalesChannel[];\n  availableAllergens: Allergen[];\n}\n\nexport function MenuManagementClient({\n  initialMenus,\n  availableChannels,\n  availableAllergens,\n}: MenuManagementClientProps) {\n  // State\n  const [menus, setMenus] = useState<Menu[]>(initialMenus);\n  const [menuItems, setMenuItems] = useState<MenuItem[]>([]);\n  const [selectedNode, setSelectedNode] = useState<MenuTreeNode | null>(null);\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\n  const [expandedNodes, setExpandedNodes] = useState<string[]>(\n    initialMenus.map(menu => menu.id)\n  );\n  const [filters, setFilters] = useState<MenuFilters>({});\n  const [currentChannel, setCurrentChannel] = useState<string>('dine-in');\n  const [showItemEditor, setShowItemEditor] = useState(false);\n  const [editingItem, setEditingItem] = useState<MenuItem | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isPending, startTransition] = useTransition();\n\n  // Build tree structure\n  const menuTree = useMemo(() => buildMenuTree(menus), [menus]);\n\n  // Get available menu groups for dropdown\n  const availableGroups = useMemo(() => {\n    const groups: { id: string; name: string; menuId: string }[] = [];\n    \n    const collectGroups = (menuGroups: MenuGroup[], menuId: string) => {\n      menuGroups.forEach(group => {\n        groups.push({ id: group.id, name: group.name, menuId });\n        collectGroups(group.subGroups, menuId);\n      });\n    };\n    \n    menus.forEach(menu => {\n      collectGroups(menu.groups, menu.id);\n    });\n    \n    return groups;\n  }, [menus]);\n\n  // Fetch menu items based on current selection and filters\n  const fetchMenuItems = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const params: any = {\n        page: 1,\n        limit: 100,\n        filters,\n      };\n      \n      if (selectedNode) {\n        if (selectedNode.type === 'menu') {\n          params.menuId = selectedNode.id;\n        } else if (selectedNode.type === 'group') {\n          params.groupId = selectedNode.id;\n        }\n      }\n      \n      const result = await getMenuItems(params);\n      setMenuItems(result.data);\n    } catch (error) {\n      console.error('Failed to fetch menu items:', error);\n      setError('Failed to load menu items. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedNode, filters]);\n\n  // Fetch menu items when selection or filters change\n  useEffect(() => {\n    fetchMenuItems();\n  }, [fetchMenuItems]);\n\n  // Handle node selection in tree\n  const handleNodeSelect = useCallback((node: MenuTreeNode) => {\n    setSelectedNode(node);\n    setSelectedItems([]);\n  }, []);\n\n  // Handle node expansion in tree\n  const handleNodeExpand = useCallback((id: string, expanded: boolean) => {\n    setExpandedNodes(prev => \n      expanded \n        ? [...prev, id]\n        : prev.filter(nodeId => nodeId !== id)\n    );\n  }, []);\n\n  // Handle creating new items\n  const handleCreateItem = useCallback(() => {\n    setEditingItem(null);\n    setShowItemEditor(true);\n  }, []);\n\n  // Handle editing item\n  const handleEditItem = useCallback((item: MenuItem) => {\n    setEditingItem(item);\n    setShowItemEditor(true);\n  }, []);\n\n  // Handle item click\n  const handleItemClick = useCallback((item: MenuItem) => {\n    handleEditItem(item);\n  }, [handleEditItem]);\n\n  // Handle copying item\n  const handleCopyItem = useCallback((item: MenuItem) => {\n    const copiedItem = {\n      ...item,\n      name: `${item.name} (Copy)`,\n      id: undefined, // Will be generated\n      createdAt: undefined,\n      updatedAt: undefined,\n    };\n    setEditingItem(copiedItem as any);\n    setShowItemEditor(true);\n  }, []);\n\n  // Handle deleting item\n  const handleDeleteItem = useCallback(async (item: MenuItem) => {\n    if (!window.confirm(`Are you sure you want to delete \"${item.name}\"?`)) {\n      return;\n    }\n\n    try {\n      await deleteMenuItemData(item.id);\n      await fetchMenuItems();\n    } catch (error) {\n      console.error('Failed to delete item:', error);\n      setError('Failed to delete item. Please try again.');\n    }\n  }, [fetchMenuItems]);\n\n  // Handle toggling item visibility\n  const handleToggleItemVisibility = useCallback(async (item: MenuItem) => {\n    try {\n      await updateMenuItemData(item.id, { isActive: !item.isActive });\n      await fetchMenuItems();\n    } catch (error) {\n      console.error('Failed to update item visibility:', error);\n      setError('Failed to update item visibility. Please try again.');\n    }\n  }, [fetchMenuItems]);\n\n  // Handle saving item\n  const handleSaveItem = useCallback(async (data: CreateMenuItem | UpdateMenuItem) => {\n    try {\n      if (editingItem) {\n        // Update existing item\n        await updateMenuItemData(editingItem.id, data as UpdateMenuItem);\n      } else {\n        // Create new item\n        await createMenuItemData(data as CreateMenuItem);\n      }\n      \n      setShowItemEditor(false);\n      setEditingItem(null);\n      await fetchMenuItems();\n    } catch (error) {\n      console.error('Failed to save item:', error);\n      throw new Error('Failed to save item. Please try again.');\n    }\n  }, [editingItem, fetchMenuItems]);\n\n  // Handle selection change\n  const handleSelectionChange = useCallback((selectedIds: string[]) => {\n    setSelectedItems(selectedIds);\n  }, []);\n\n  // Handle bulk actions\n  const handleBulkShow = useCallback(async () => {\n    if (selectedItems.length === 0) return;\n    \n    try {\n      await bulkUpdateItems(selectedItems, { isActive: true });\n      await fetchMenuItems();\n      setSelectedItems([]);\n    } catch (error) {\n      console.error('Failed to bulk update items:', error);\n      setError('Failed to update items. Please try again.');\n    }\n  }, [selectedItems, fetchMenuItems]);\n\n  const handleBulkHide = useCallback(async () => {\n    if (selectedItems.length === 0) return;\n    \n    try {\n      await bulkUpdateItems(selectedItems, { isActive: false });\n      await fetchMenuItems();\n      setSelectedItems([]);\n    } catch (error) {\n      console.error('Failed to bulk update items:', error);\n      setError('Failed to update items. Please try again.');\n    }\n  }, [selectedItems, fetchMenuItems]);\n\n  const handleBulkDelete = useCallback(async () => {\n    if (selectedItems.length === 0) return;\n    \n    const confirmed = window.confirm(\n      `Are you sure you want to delete ${selectedItems.length} item${selectedItems.length !== 1 ? 's' : ''}?`\n    );\n    \n    if (!confirmed) return;\n    \n    try {\n      await bulkDeleteItems(selectedItems);\n      await fetchMenuItems();\n      setSelectedItems([]);\n    } catch (error) {\n      console.error('Failed to bulk delete items:', error);\n      setError('Failed to delete items. Please try again.');\n    }\n  }, [selectedItems, fetchMenuItems]);\n\n  // Handle refresh\n  const handleRefresh = useCallback(async () => {\n    setLoading(true);\n    try {\n      const [menusResult] = await Promise.all([\n        getMenus({ page: 1, limit: 50 }),\n        fetchMenuItems(),\n      ]);\n      setMenus(menusResult.data);\n    } catch (error) {\n      console.error('Failed to refresh data:', error);\n      setError('Failed to refresh data. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchMenuItems]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Error Alert */}\n      {error && (\n        <Alert variant=\"destructive\">\n          <div className=\"flex items-center justify-between\">\n            <span>{error}</span>\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              onClick={() => setError(null)}\n            >\n              Dismiss\n            </Button>\n          </div>\n        </Alert>\n      )}\n\n      {/* Top Controls */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          {/* Channel Selector */}\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium\">Channel:</label>\n            <select\n              value={currentChannel}\n              onChange={(e) => setCurrentChannel(e.target.value)}\n              className=\"px-3 py-1 border border-gray-300 rounded-md text-sm\"\n            >\n              {availableChannels.map((channel) => (\n                <option key={channel.id} value={channel.id}>\n                  {channel.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          {/* Active Filters */}\n          {Object.keys(filters).length > 0 && (\n            <div className=\"flex items-center space-x-2\">\n              <Badge variant=\"secondary\">\n                {Object.keys(filters).length} filter{Object.keys(filters).length !== 1 ? 's' : ''}\n              </Badge>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => setFilters({})}\n              >\n                Clear\n              </Button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex items-center space-x-2\">\n          {/* Bulk Actions */}\n          {selectedItems.length > 0 && (\n            <>\n              <Badge variant=\"secondary\">\n                {selectedItems.length} selected\n              </Badge>\n              <Button size=\"sm\" variant=\"outline\" onClick={handleBulkShow}>\n                Show\n              </Button>\n              <Button size=\"sm\" variant=\"outline\" onClick={handleBulkHide}>\n                Hide\n              </Button>\n              <Button \n                size=\"sm\" \n                variant=\"outline\" \n                className=\"text-red-600\"\n                onClick={handleBulkDelete}\n              >\n                Delete\n              </Button>\n            </>\n          )}\n\n          <Button size=\"sm\" variant=\"outline\" onClick={handleRefresh}>\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Refresh\n          </Button>\n\n          <Button size=\"sm\" onClick={handleCreateItem}>\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add Item\n          </Button>\n        </div>\n      </div>\n\n      {/* Main Layout */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Tree Navigator */}\n        <div className=\"lg:col-span-1\">\n          <MenuTreeNavigator\n            data={menuTree}\n            selectedId={selectedNode?.id}\n            expandedIds={expandedNodes}\n            onSelect={handleNodeSelect}\n            onExpand={handleNodeExpand}\n            searchable\n            showActions\n            className=\"sticky top-6\"\n          />\n        </div>\n\n        {/* Items Table */}\n        <div className=\"lg:col-span-3\">\n          <MenuItemsTable\n            data={menuItems}\n            loading={loading}\n            selectedIds={selectedItems}\n            filters={filters}\n            onItemClick={handleItemClick}\n            onEdit={handleEditItem}\n            onCopy={handleCopyItem}\n            onDelete={handleDeleteItem}\n            onToggleVisibility={handleToggleItemVisibility}\n            onSelectionChange={handleSelectionChange}\n            onFiltersChange={setFilters}\n            onCreate={handleCreateItem}\n            channel={currentChannel}\n            showBulkActions\n          />\n        </div>\n      </div>\n\n      {/* Item Editor */}\n      <MenuItemEditor\n        item={editingItem}\n        isOpen={showItemEditor}\n        onClose={() => {\n          setShowItemEditor(false);\n          setEditingItem(null);\n        }}\n        onSave={handleSaveItem}\n        availableChannels={availableChannels}\n        availableAllergens={availableAllergens}\n        availableGroups={availableGroups}\n        loading={isPending}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}