{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/orders/types.ts"],"sourcesContent":["// Order Management Types\n\nexport enum OrderStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  PREPARING = 'preparing',\n  READY = 'ready',\n  COMPLETED = 'completed',\n  DELIVERED = 'delivered',\n  CANCELLED = 'cancelled',\n  REFUNDED = 'refunded'\n}\n\nexport enum OrderType {\n  DINE_IN = 'dine_in',\n  TAKEOUT = 'takeout',\n  DELIVERY = 'delivery',\n  PICKUP = 'pickup',\n  CATERING = 'catering'\n}\n\nexport enum PaymentStatus {\n  PENDING = 'pending',\n  PROCESSING = 'processing',\n  COMPLETED = 'completed',\n  FAILED = 'failed',\n  REFUNDED = 'refunded',\n  PARTIALLY_REFUNDED = 'partially_refunded'\n}\n\nexport enum PaymentMethod {\n  CASH = 'cash',\n  CREDIT_CARD = 'credit_card',\n  DEBIT_CARD = 'debit_card',\n  DIGITAL_WALLET = 'digital_wallet',\n  GIFT_CARD = 'gift_card',\n  LOYALTY_POINTS = 'loyalty_points',\n  CHECK = 'check',\n  OTHER = 'other'\n}\n\nexport interface OrderItem {\n  id: string;\n  menuItemId: string;\n  menuItemName: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n  modifiers: OrderModifier[];\n  specialInstructions?: string;\n  status: 'pending' | 'preparing' | 'ready' | 'served';\n  prepTime?: number;\n  station?: string;\n}\n\nexport interface OrderModifier {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n}\n\nexport interface Order {\n  id: string;\n  orderNumber: string;\n  status: OrderStatus;\n  type: OrderType;\n  customerId?: string;\n  customerName?: string;\n  customerPhone?: string;\n  customerEmail?: string;\n  tableNumber?: string;\n  items: OrderItem[];\n  subtotal: number;\n  tax: number;\n  tip: number;\n  discount: number;\n  total: number;\n  paymentStatus: PaymentStatus;\n  paymentMethod?: PaymentMethod;\n  paymentDetails?: PaymentDetails;\n  notes?: string;\n  createdAt: string;\n  updatedAt: string;\n  confirmedAt?: string;\n  prepStartedAt?: string;\n  readyAt?: string;\n  completedAt?: string;\n  deliveredAt?: string;\n  cancelledAt?: string;\n  refundedAt?: string;\n  estimatedReadyTime?: string;\n  assignedStaff?: StaffMember[];\n  deliveryInfo?: DeliveryInfo;\n  timeline: OrderTimelineEvent[];\n  posOrderId?: string;\n  posPaymentId?: string;\n  source: 'pos' | 'online' | 'phone' | 'kiosk' | 'third_party';\n  thirdPartyProvider?: string;\n}\n\nexport interface PaymentDetails {\n  transactionId: string;\n  lastFourDigits?: string;\n  cardBrand?: string;\n  authorizationCode?: string;\n  processorResponse?: string;\n  amount: number;\n  tip?: number;\n  fee?: number;\n  refundAmount?: number;\n  refundReason?: string;\n}\n\nexport interface DeliveryInfo {\n  address: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  instructions?: string;\n  driverId?: string;\n  driverName?: string;\n  estimatedDeliveryTime?: string;\n  actualDeliveryTime?: string;\n  deliveryFee: number;\n  distance?: number;\n}\n\nexport interface StaffMember {\n  id: string;\n  name: string;\n  role: 'server' | 'chef' | 'bartender' | 'host' | 'manager' | 'driver';\n  assignedAt: string;\n}\n\nexport interface OrderTimelineEvent {\n  id: string;\n  timestamp: string;\n  event: string;\n  description: string;\n  user?: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface OrderFilters {\n  status?: OrderStatus[];\n  type?: OrderType[];\n  paymentStatus?: PaymentStatus[];\n  dateRange?: {\n    start: string;\n    end: string;\n  };\n  customerId?: string;\n  tableNumber?: string;\n  searchTerm?: string;\n  minAmount?: number;\n  maxAmount?: number;\n  source?: string[];\n  assignedStaff?: string[];\n}\n\nexport interface OrderStats {\n  totalOrders: number;\n  totalRevenue: number;\n  averageOrderValue: number;\n  ordersByStatus: Record<OrderStatus, number>;\n  ordersByType: Record<OrderType, number>;\n  todayOrders: number;\n  todayRevenue: number;\n  pendingOrders: number;\n  preparingOrders: number;\n  readyOrders: number;\n  completedOrders: number;\n  cancelledOrders: number;\n  refundedAmount: number;\n  averagePrepTime: number;\n  peakHours: {\n    hour: number;\n    orders: number;\n  }[];\n}\n\nexport interface RefundRequest {\n  orderId: string;\n  amount: number;\n  reason: string;\n  items?: string[]; // Item IDs to refund\n  refundMethod: 'original' | 'cash' | 'store_credit';\n  notes?: string;\n}\n\nexport interface OrderUpdate {\n  status?: OrderStatus;\n  paymentStatus?: PaymentStatus;\n  items?: Partial<OrderItem>[];\n  notes?: string;\n  estimatedReadyTime?: string;\n  assignedStaff?: StaffMember[];\n  deliveryInfo?: Partial<DeliveryInfo>;\n}\n\nexport interface CreateOrder {\n  type: OrderType;\n  customerId?: string;\n  customerName?: string;\n  customerPhone?: string;\n  customerEmail?: string;\n  tableNumber?: string;\n  items: {\n    menuItemId: string;\n    quantity: number;\n    modifiers?: {\n      id: string;\n      quantity: number;\n    }[];\n    specialInstructions?: string;\n  }[];\n  paymentMethod?: PaymentMethod;\n  notes?: string;\n  scheduledFor?: string;\n  deliveryInfo?: Omit<DeliveryInfo, 'driverId' | 'driverName' | 'actualDeliveryTime'>;\n}\n\nexport interface OrderListItem {\n  id: string;\n  orderNumber: string;\n  status: OrderStatus;\n  type: OrderType;\n  customerName?: string;\n  tableNumber?: string;\n  total: number;\n  itemCount: number;\n  createdAt: string;\n  estimatedReadyTime?: string;\n  paymentStatus: PaymentStatus;\n  source: string;\n}\n\nexport interface OrderSummary {\n  date: string;\n  orderCount: number;\n  revenue: number;\n  averageOrderValue: number;\n  topItems: {\n    itemId: string;\n    itemName: string;\n    quantity: number;\n    revenue: number;\n  }[];\n  hourlyDistribution: {\n    hour: number;\n    orders: number;\n    revenue: number;\n  }[];\n}\n\n// Action types for order management\nexport type OrderAction = \n  | { type: 'UPDATE_STATUS'; orderId: string; status: OrderStatus }\n  | { type: 'UPDATE_PAYMENT'; orderId: string; paymentStatus: PaymentStatus; paymentDetails?: PaymentDetails }\n  | { type: 'ADD_ITEM'; orderId: string; item: Omit<OrderItem, 'id'> }\n  | { type: 'REMOVE_ITEM'; orderId: string; itemId: string }\n  | { type: 'UPDATE_ITEM'; orderId: string; itemId: string; updates: Partial<OrderItem> }\n  | { type: 'ASSIGN_STAFF'; orderId: string; staff: StaffMember }\n  | { type: 'REMOVE_STAFF'; orderId: string; staffId: string }\n  | { type: 'UPDATE_DELIVERY'; orderId: string; deliveryInfo: Partial<DeliveryInfo> }\n  | { type: 'ADD_TIMELINE_EVENT'; orderId: string; event: Omit<OrderTimelineEvent, 'id' | 'timestamp'> }\n  | { type: 'PROCESS_REFUND'; orderId: string; refundRequest: RefundRequest }\n  | { type: 'CANCEL_ORDER'; orderId: string; reason: string };"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;;;AAElB,IAAA,AAAK,qCAAA;;;;;;;;;WAAA;;AAWL,IAAA,AAAK,mCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,uCAAA;;;;;;;WAAA;;AASL,IAAA,AAAK,uCAAA;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/orders/data.ts"],"sourcesContent":["// Order data layer with mock data\nimport {\n  Order,\n  OrderStatus,\n  OrderType,\n  PaymentStatus,\n  PaymentMethod,\n  OrderFilters,\n  OrderStats,\n  OrderListItem,\n  CreateOrder,\n  OrderUpdate,\n  RefundRequest,\n  OrderSummary,\n  OrderTimelineEvent\n} from './types';\n\n// Mock data generation\nconst generateMockOrders = (count: number = 100): Order[] => {\n  const orders: Order[] = [];\n  const now = new Date();\n  \n  const customerNames = [\n    'John Smith', 'Emma Johnson', 'Michael Brown', 'Sarah Davis',\n    'Robert Wilson', 'Lisa Anderson', 'David Martinez', 'Jennifer Taylor',\n    'Chris Lee', 'Amanda White', 'James Harris', 'Maria Garcia'\n  ];\n  \n  const menuItems = [\n    { id: 'item-1', name: 'Classic Burger', price: 12.99, station: 'grill' },\n    { id: 'item-2', name: 'Caesar Salad', price: 9.99, station: 'cold' },\n    { id: 'item-3', name: 'Margherita Pizza', price: 14.99, station: 'oven' },\n    { id: 'item-4', name: 'Grilled Salmon', price: 22.99, station: 'grill' },\n    { id: 'item-5', name: 'Chicken Alfredo', price: 16.99, station: 'saute' },\n    { id: 'item-6', name: 'Ribeye Steak', price: 32.99, station: 'grill' },\n    { id: 'item-7', name: 'Fish Tacos', price: 13.99, station: 'fryer' },\n    { id: 'item-8', name: 'Veggie Wrap', price: 10.99, station: 'cold' }\n  ];\n\n  const statuses = Object.values(OrderStatus);\n  const types = Object.values(OrderType);\n  const paymentMethods = Object.values(PaymentMethod);\n  \n  for (let i = 0; i < count; i++) {\n    const createdAt = new Date(now.getTime() - Math.random() * 7 * 24 * 60 * 60 * 1000);\n    const status = statuses[Math.floor(Math.random() * statuses.length)];\n    const type = types[Math.floor(Math.random() * types.length)];\n    const customerName = customerNames[Math.floor(Math.random() * customerNames.length)];\n    \n    // Generate items\n    const itemCount = Math.floor(Math.random() * 4) + 1;\n    const items = [];\n    let subtotal = 0;\n    \n    for (let j = 0; j < itemCount; j++) {\n      const menuItem = menuItems[Math.floor(Math.random() * menuItems.length)];\n      const quantity = Math.floor(Math.random() * 3) + 1;\n      const totalPrice = menuItem.price * quantity;\n      subtotal += totalPrice;\n      \n      items.push({\n        id: `order-item-${i}-${j}`,\n        menuItemId: menuItem.id,\n        menuItemName: menuItem.name,\n        quantity,\n        unitPrice: menuItem.price,\n        totalPrice,\n        modifiers: [],\n        status: status === OrderStatus.COMPLETED ? 'served' as const : \n                status === OrderStatus.READY ? 'ready' as const :\n                status === OrderStatus.PREPARING ? 'preparing' as const : \n                'pending' as const,\n        prepTime: Math.floor(Math.random() * 20) + 10,\n        station: menuItem.station\n      });\n    }\n    \n    const tax = subtotal * 0.08;\n    const tip = type === OrderType.DINE_IN ? subtotal * (Math.random() * 0.1 + 0.15) : 0;\n    const discount = Math.random() > 0.8 ? subtotal * 0.1 : 0;\n    const total = subtotal + tax + tip - discount;\n    \n    // Generate timeline\n    const timeline: OrderTimelineEvent[] = [\n      {\n        id: `timeline-${i}-1`,\n        timestamp: createdAt.toISOString(),\n        event: 'Order Created',\n        description: `Order #${1000 + i} created`,\n        user: 'System'\n      }\n    ];\n    \n    if (status !== OrderStatus.PENDING) {\n      timeline.push({\n        id: `timeline-${i}-2`,\n        timestamp: new Date(createdAt.getTime() + 60000).toISOString(),\n        event: 'Order Confirmed',\n        description: 'Order confirmed by kitchen',\n        user: 'Kitchen Staff'\n      });\n    }\n    \n    if ([OrderStatus.PREPARING, OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status)) {\n      timeline.push({\n        id: `timeline-${i}-3`,\n        timestamp: new Date(createdAt.getTime() + 120000).toISOString(),\n        event: 'Preparation Started',\n        description: 'Kitchen started preparing order',\n        user: 'Chef Mike'\n      });\n    }\n    \n    if ([OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status)) {\n      timeline.push({\n        id: `timeline-${i}-4`,\n        timestamp: new Date(createdAt.getTime() + 900000).toISOString(),\n        event: 'Order Ready',\n        description: 'Order ready for pickup/delivery',\n        user: 'Chef Mike'\n      });\n    }\n    \n    orders.push({\n      id: `order-${i}`,\n      orderNumber: `#${1000 + i}`,\n      status,\n      type,\n      customerId: `customer-${Math.floor(Math.random() * 50)}`,\n      customerName,\n      customerPhone: `555-${String(Math.floor(Math.random() * 10000)).padStart(4, '0')}`,\n      customerEmail: `${customerName.toLowerCase().replace(' ', '.')}@email.com`,\n      tableNumber: type === OrderType.DINE_IN ? `T${Math.floor(Math.random() * 20) + 1}` : undefined,\n      items,\n      subtotal,\n      tax,\n      tip,\n      discount,\n      total,\n      paymentStatus: status === OrderStatus.COMPLETED || status === OrderStatus.DELIVERED ? \n        PaymentStatus.COMPLETED : \n        status === OrderStatus.CANCELLED ? PaymentStatus.FAILED :\n        status === OrderStatus.REFUNDED ? PaymentStatus.REFUNDED :\n        PaymentStatus.PENDING,\n      paymentMethod: paymentMethods[Math.floor(Math.random() * paymentMethods.length)],\n      paymentDetails: status === OrderStatus.COMPLETED || status === OrderStatus.DELIVERED ? {\n        transactionId: `txn-${Date.now()}-${i}`,\n        lastFourDigits: String(Math.floor(Math.random() * 10000)).padStart(4, '0'),\n        cardBrand: 'Visa',\n        authorizationCode: `AUTH${Math.floor(Math.random() * 1000000)}`,\n        amount: total,\n        tip: tip\n      } : undefined,\n      notes: Math.random() > 0.7 ? 'No onions please' : undefined,\n      createdAt: createdAt.toISOString(),\n      updatedAt: new Date(createdAt.getTime() + Math.random() * 3600000).toISOString(),\n      confirmedAt: status !== OrderStatus.PENDING ? \n        new Date(createdAt.getTime() + 60000).toISOString() : undefined,\n      prepStartedAt: [OrderStatus.PREPARING, OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 120000).toISOString() : undefined,\n      readyAt: [OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 900000).toISOString() : undefined,\n      completedAt: [OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 1200000).toISOString() : undefined,\n      deliveredAt: status === OrderStatus.DELIVERED ?\n        new Date(createdAt.getTime() + 2400000).toISOString() : undefined,\n      cancelledAt: status === OrderStatus.CANCELLED ?\n        new Date(createdAt.getTime() + 300000).toISOString() : undefined,\n      refundedAt: status === OrderStatus.REFUNDED ?\n        new Date(createdAt.getTime() + 86400000).toISOString() : undefined,\n      estimatedReadyTime: status === OrderStatus.PREPARING ?\n        new Date(Date.now() + 900000).toISOString() : undefined,\n      assignedStaff: type === OrderType.DINE_IN ? [{\n        id: `staff-${Math.floor(Math.random() * 10)}`,\n        name: ['Alice', 'Bob', 'Carol', 'Dave'][Math.floor(Math.random() * 4)],\n        role: 'server' as const,\n        assignedAt: createdAt.toISOString()\n      }] : undefined,\n      deliveryInfo: type === OrderType.DELIVERY ? {\n        address: `${Math.floor(Math.random() * 9999) + 1} Main St`,\n        city: 'San Francisco',\n        state: 'CA',\n        zipCode: '94101',\n        instructions: 'Leave at door',\n        driverId: `driver-${Math.floor(Math.random() * 5)}`,\n        driverName: ['Tom', 'Jerry', 'Mike'][Math.floor(Math.random() * 3)],\n        estimatedDeliveryTime: new Date(createdAt.getTime() + 2400000).toISOString(),\n        actualDeliveryTime: status === OrderStatus.DELIVERED ?\n          new Date(createdAt.getTime() + 2400000).toISOString() : undefined,\n        deliveryFee: 4.99,\n        distance: Math.random() * 5 + 1\n      } : undefined,\n      timeline,\n      posOrderId: `pos-${Date.now()}-${i}`,\n      source: ['pos', 'online', 'phone', 'kiosk'][Math.floor(Math.random() * 4)] as any,\n      thirdPartyProvider: Math.random() > 0.7 ? 'DoorDash' : undefined\n    });\n  }\n  \n  return orders;\n};\n\n// Cache for mock data\nlet cachedOrders: Order[] | null = null;\n\n// API Functions\nexport async function getOrders(filters?: OrderFilters): Promise<Order[]> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  let filtered = [...cachedOrders];\n  \n  if (filters) {\n    if (filters.status?.length) {\n      filtered = filtered.filter(o => filters.status!.includes(o.status));\n    }\n    if (filters.type?.length) {\n      filtered = filtered.filter(o => filters.type!.includes(o.type));\n    }\n    if (filters.paymentStatus?.length) {\n      filtered = filtered.filter(o => filters.paymentStatus!.includes(o.paymentStatus));\n    }\n    if (filters.dateRange) {\n      const start = new Date(filters.dateRange.start);\n      const end = new Date(filters.dateRange.end);\n      filtered = filtered.filter(o => {\n        const orderDate = new Date(o.createdAt);\n        return orderDate >= start && orderDate <= end;\n      });\n    }\n    if (filters.customerId) {\n      filtered = filtered.filter(o => o.customerId === filters.customerId);\n    }\n    if (filters.tableNumber) {\n      filtered = filtered.filter(o => o.tableNumber === filters.tableNumber);\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(o => \n        o.orderNumber.toLowerCase().includes(term) ||\n        o.customerName?.toLowerCase().includes(term) ||\n        o.customerEmail?.toLowerCase().includes(term) ||\n        o.customerPhone?.includes(term)\n      );\n    }\n    if (filters.minAmount !== undefined) {\n      filtered = filtered.filter(o => o.total >= filters.minAmount!);\n    }\n    if (filters.maxAmount !== undefined) {\n      filtered = filtered.filter(o => o.total <= filters.maxAmount!);\n    }\n  }\n  \n  // Sort by creation date, newest first\n  filtered.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  \n  return filtered;\n}\n\nexport async function getOrder(id: string): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  return cachedOrders.find(o => o.id === id) || null;\n}\n\nexport async function getOrderListItems(filters?: OrderFilters): Promise<OrderListItem[]> {\n  const orders = await getOrders(filters);\n  \n  return orders.map(order => ({\n    id: order.id,\n    orderNumber: order.orderNumber,\n    status: order.status,\n    type: order.type,\n    customerName: order.customerName,\n    tableNumber: order.tableNumber,\n    total: order.total,\n    itemCount: order.items.reduce((sum, item) => sum + item.quantity, 0),\n    createdAt: order.createdAt,\n    estimatedReadyTime: order.estimatedReadyTime,\n    paymentStatus: order.paymentStatus,\n    source: order.source\n  }));\n}\n\nexport async function getOrderStats(dateRange?: { start: string; end: string }): Promise<OrderStats> {\n  const orders = await getOrders(dateRange ? { dateRange } : undefined);\n  \n  const now = new Date();\n  const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  const todayOrders = orders.filter(o => new Date(o.createdAt) >= todayStart);\n  \n  // Calculate peak hours\n  const hourCounts: Record<number, number> = {};\n  orders.forEach(order => {\n    const hour = new Date(order.createdAt).getHours();\n    hourCounts[hour] = (hourCounts[hour] || 0) + 1;\n  });\n  \n  const peakHours = Object.entries(hourCounts)\n    .map(([hour, count]) => ({ hour: parseInt(hour), orders: count }))\n    .sort((a, b) => b.orders - a.orders)\n    .slice(0, 5);\n  \n  // Calculate stats by status\n  const ordersByStatus = {} as Record<OrderStatus, number>;\n  Object.values(OrderStatus).forEach(status => {\n    ordersByStatus[status] = orders.filter(o => o.status === status).length;\n  });\n  \n  // Calculate stats by type\n  const ordersByType = {} as Record<OrderType, number>;\n  Object.values(OrderType).forEach(type => {\n    ordersByType[type] = orders.filter(o => o.type === type).length;\n  });\n  \n  const totalRevenue = orders.reduce((sum, o) => sum + o.total, 0);\n  const todayRevenue = todayOrders.reduce((sum, o) => sum + o.total, 0);\n  const refundedAmount = orders\n    .filter(o => o.status === OrderStatus.REFUNDED)\n    .reduce((sum, o) => sum + o.total, 0);\n  \n  const completedOrders = orders.filter(o => \n    [OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(o.status)\n  );\n  \n  const averagePrepTime = completedOrders.length > 0 ?\n    completedOrders.reduce((sum, o) => {\n      if (o.prepStartedAt && o.readyAt) {\n        return sum + (new Date(o.readyAt).getTime() - new Date(o.prepStartedAt).getTime());\n      }\n      return sum;\n    }, 0) / completedOrders.length / 60000 : 0; // Convert to minutes\n  \n  return {\n    totalOrders: orders.length,\n    totalRevenue,\n    averageOrderValue: orders.length > 0 ? totalRevenue / orders.length : 0,\n    ordersByStatus,\n    ordersByType,\n    todayOrders: todayOrders.length,\n    todayRevenue,\n    pendingOrders: ordersByStatus[OrderStatus.PENDING] || 0,\n    preparingOrders: ordersByStatus[OrderStatus.PREPARING] || 0,\n    readyOrders: ordersByStatus[OrderStatus.READY] || 0,\n    completedOrders: ordersByStatus[OrderStatus.COMPLETED] || 0,\n    cancelledOrders: ordersByStatus[OrderStatus.CANCELLED] || 0,\n    refundedAmount,\n    averagePrepTime,\n    peakHours\n  };\n}\n\nexport async function createOrder(data: CreateOrder): Promise<Order> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  const newOrder: Order = {\n    id: `order-${Date.now()}`,\n    orderNumber: `#${1000 + cachedOrders.length}`,\n    status: OrderStatus.PENDING,\n    type: data.type,\n    customerId: data.customerId,\n    customerName: data.customerName,\n    customerPhone: data.customerPhone,\n    customerEmail: data.customerEmail,\n    tableNumber: data.tableNumber,\n    items: data.items.map((item, index) => ({\n      id: `item-${Date.now()}-${index}`,\n      menuItemId: item.menuItemId,\n      menuItemName: `Item ${item.menuItemId}`, // Would be looked up from menu\n      quantity: item.quantity,\n      unitPrice: 15.99, // Would be looked up from menu\n      totalPrice: 15.99 * item.quantity,\n      modifiers: [],\n      specialInstructions: item.specialInstructions,\n      status: 'pending' as const,\n      prepTime: 15,\n      station: 'grill'\n    })),\n    subtotal: 0, // Calculate from items\n    tax: 0,\n    tip: 0,\n    discount: 0,\n    total: 0,\n    paymentStatus: PaymentStatus.PENDING,\n    paymentMethod: data.paymentMethod,\n    notes: data.notes,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    timeline: [{\n      id: `timeline-${Date.now()}`,\n      timestamp: new Date().toISOString(),\n      event: 'Order Created',\n      description: 'New order created',\n      user: 'System'\n    }],\n    source: 'pos',\n    deliveryInfo: data.deliveryInfo as any\n  };\n  \n  // Calculate totals\n  newOrder.subtotal = newOrder.items.reduce((sum, item) => sum + item.totalPrice, 0);\n  newOrder.tax = newOrder.subtotal * 0.08;\n  newOrder.total = newOrder.subtotal + newOrder.tax;\n  \n  cachedOrders.unshift(newOrder);\n  return newOrder;\n}\n\nexport async function updateOrder(id: string, updates: OrderUpdate): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  const orderIndex = cachedOrders.findIndex(o => o.id === id);\n  if (orderIndex === -1) return null;\n  \n  const order = { ...cachedOrders[orderIndex] };\n  \n  if (updates.status) {\n    order.status = updates.status;\n    order.timeline.push({\n      id: `timeline-${Date.now()}`,\n      timestamp: new Date().toISOString(),\n      event: 'Status Updated',\n      description: `Order status changed to ${updates.status}`,\n      user: 'Staff'\n    });\n  }\n  \n  if (updates.paymentStatus) {\n    order.paymentStatus = updates.paymentStatus;\n  }\n  \n  if (updates.notes !== undefined) {\n    order.notes = updates.notes;\n  }\n  \n  if (updates.estimatedReadyTime) {\n    order.estimatedReadyTime = updates.estimatedReadyTime;\n  }\n  \n  order.updatedAt = new Date().toISOString();\n  cachedOrders[orderIndex] = order;\n  \n  return order;\n}\n\nexport async function cancelOrder(id: string, reason: string): Promise<Order | null> {\n  return updateOrder(id, {\n    status: OrderStatus.CANCELLED,\n    notes: reason\n  });\n}\n\nexport async function processRefund(orderId: string, request: RefundRequest): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const order = await getOrder(orderId);\n  if (!order) return null;\n  \n  return updateOrder(orderId, {\n    status: OrderStatus.REFUNDED,\n    paymentStatus: PaymentStatus.REFUNDED,\n    notes: `Refund processed: ${request.reason}`\n  });\n}\n\nexport async function getOrderSummary(date: string): Promise<OrderSummary> {\n  const startDate = new Date(date);\n  startDate.setHours(0, 0, 0, 0);\n  const endDate = new Date(date);\n  endDate.setHours(23, 59, 59, 999);\n  \n  const orders = await getOrders({\n    dateRange: {\n      start: startDate.toISOString(),\n      end: endDate.toISOString()\n    }\n  });\n  \n  // Calculate top items\n  const itemCounts: Record<string, { name: string; quantity: number; revenue: number }> = {};\n  orders.forEach(order => {\n    order.items.forEach(item => {\n      if (!itemCounts[item.menuItemId]) {\n        itemCounts[item.menuItemId] = {\n          name: item.menuItemName,\n          quantity: 0,\n          revenue: 0\n        };\n      }\n      itemCounts[item.menuItemId].quantity += item.quantity;\n      itemCounts[item.menuItemId].revenue += item.totalPrice;\n    });\n  });\n  \n  const topItems = Object.entries(itemCounts)\n    .map(([id, data]) => ({\n      itemId: id,\n      itemName: data.name,\n      quantity: data.quantity,\n      revenue: data.revenue\n    }))\n    .sort((a, b) => b.revenue - a.revenue)\n    .slice(0, 10);\n  \n  // Calculate hourly distribution\n  const hourlyData: Record<number, { orders: number; revenue: number }> = {};\n  for (let hour = 0; hour < 24; hour++) {\n    hourlyData[hour] = { orders: 0, revenue: 0 };\n  }\n  \n  orders.forEach(order => {\n    const hour = new Date(order.createdAt).getHours();\n    hourlyData[hour].orders++;\n    hourlyData[hour].revenue += order.total;\n  });\n  \n  const hourlyDistribution = Object.entries(hourlyData)\n    .map(([hour, data]) => ({\n      hour: parseInt(hour),\n      orders: data.orders,\n      revenue: data.revenue\n    }));\n  \n  const totalRevenue = orders.reduce((sum, o) => sum + o.total, 0);\n  \n  return {\n    date,\n    orderCount: orders.length,\n    revenue: totalRevenue,\n    averageOrderValue: orders.length > 0 ? totalRevenue / orders.length : 0,\n    topItems,\n    hourlyDistribution\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/orders/%5Bid%5D/order-detail-content.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const OrderDetailContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call OrderDetailContent() from the server but OrderDetailContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/orders/[id]/order-detail-content.tsx <module evaluation>\",\n    \"OrderDetailContent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,0EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 648, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/orders/%5Bid%5D/order-detail-content.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const OrderDetailContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call OrderDetailContent() from the server but OrderDetailContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/orders/[id]/order-detail-content.tsx\",\n    \"OrderDetailContent\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,sDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 662, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 670, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Utility function to merge class names with tailwind-merge\n * Combines clsx and tailwind-merge for optimal class name handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Create a variant utility for component styling\n * Used to define consistent styling patterns across components\n */\nexport type VariantProps<T> = {\n  [K in keyof T]: keyof T[K];\n};\n\n/**\n * Focus ring utility classes for accessibility\n */\nexport const focusRing = 'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2';\n\n/**\n * Disabled state utility classes\n */\nexport const disabledStyles = 'disabled:pointer-events-none disabled:opacity-50';\n\n/**\n * Animation utility classes\n */\nexport const transitions = {\n  fast: 'transition-fast',\n  base: 'transition-base',\n  slow: 'transition-slow',\n} as const;"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAMO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB;AAaO,MAAM,YAAY;AAKlB,MAAM,iBAAiB;AAKvB,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;AACR","debugId":null}},
    {"offset": {"line": 698, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface SkeletonProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'circular' | 'text' | 'card';\n  width?: string | number;\n  height?: string | number;\n  lines?: number; // For text variant\n  animate?: boolean;\n}\n\nfunction Skeleton({\n  className,\n  variant = 'default',\n  width,\n  height,\n  lines = 1,\n  animate = true,\n  style,\n  ...props\n}: SkeletonProps) {\n  const baseClasses = cn(\n    'bg-muted',\n    animate && 'animate-pulse',\n    {\n      'rounded-md': variant === 'default' || variant === 'card',\n      'rounded-full': variant === 'circular',\n      'rounded': variant === 'text',\n    },\n    className\n  );\n\n  const inlineStyles = {\n    width: width,\n    height: height,\n    ...style,\n  };\n\n  // For text variant with multiple lines\n  if (variant === 'text' && lines > 1) {\n    return (\n      <div className=\"space-y-2\" {...props}>\n        {Array.from({ length: lines }, (_, i) => (\n          <div\n            key={i}\n            className={cn(\n              baseClasses,\n              i === lines - 1 ? 'w-3/4' : 'w-full' // Last line is shorter\n            )}\n            style={{\n              height: height || '1rem',\n              width: i === lines - 1 ? '75%' : width || '100%',\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Default height based on variant\n  const getDefaultHeight = () => {\n    if (height) return height;\n    switch (variant) {\n      case 'text':\n        return '1rem';\n      case 'circular':\n        return '2.5rem';\n      case 'card':\n        return '8rem';\n      default:\n        return '1.25rem';\n    }\n  };\n\n  // Default width based on variant\n  const getDefaultWidth = () => {\n    if (width) return width;\n    switch (variant) {\n      case 'circular':\n        return '2.5rem';\n      default:\n        return '100%';\n    }\n  };\n\n  const defaultHeight = getDefaultHeight();\n  const defaultWidth = getDefaultWidth();\n\n  return (\n    <div\n      className={baseClasses}\n      style={{\n        ...inlineStyles,\n        height: inlineStyles.height || defaultHeight,\n        width: inlineStyles.width || defaultWidth,\n      }}\n      {...props}\n    />\n  );\n}\n\n// Predefined skeleton patterns for common use cases\nexport function SkeletonCard({ className, ...props }: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      <Skeleton variant=\"card\" height=\"12rem\" />\n      <div className=\"space-y-2\">\n        <Skeleton height=\"1.25rem\" />\n        <Skeleton height=\"1rem\" width=\"80%\" />\n      </div>\n    </div>\n  );\n}\n\nexport function SkeletonAvatar({ \n  className, \n  size = 'md',\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { size?: 'sm' | 'md' | 'lg' }) {\n  const sizeMap = {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem',\n  };\n  \n  return (\n    <Skeleton\n      variant=\"circular\"\n      width={sizeMap[size]}\n      height={sizeMap[size]}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonText({ \n  lines = 3,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <Skeleton\n      variant=\"text\"\n      lines={lines}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { rows?: number; columns?: number }) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex space-x-4\">\n        {Array.from({ length: columns }, (_, i) => (\n          <Skeleton key={`header-${i}`} height=\"1.5rem\" className=\"flex-1\" />\n        ))}\n      </div>\n      {/* Rows */}\n      {Array.from({ length: rows }, (_, rowIndex) => (\n        <div key={`row-${rowIndex}`} className=\"flex space-x-4\">\n          {Array.from({ length: columns }, (_, colIndex) => (\n            <Skeleton key={`cell-${rowIndex}-${colIndex}`} height=\"1.25rem\" className=\"flex-1\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport { Skeleton };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 917, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'outlined' | 'elevated';\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', padding = 'md', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg bg-card text-card-foreground',\n          {\n            'border border-border': variant === 'default' || variant === 'outlined',\n            'shadow-sm': variant === 'default',\n            'shadow-md': variant === 'elevated',\n            'p-0': padding === 'none',\n            'p-4': padding === 'sm',\n            'p-6': padding === 'md',\n            'p-8': padding === 'lg',\n          },\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\nCard.displayName = 'Card';\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n}\n\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, divider = false, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex flex-col space-y-1.5 p-6',\n        divider && 'border-b border-border',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, padding = 'md', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        {\n          'p-0': padding === 'none',\n          'p-4': padding === 'sm',\n          'p-6': padding === 'md',\n          'p-8': padding === 'lg',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardContent.displayName = 'CardContent';\n\nexport interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n  justify?: 'start' | 'center' | 'end' | 'between';\n}\n\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, divider = false, justify = 'start', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex items-center p-6 pt-0',\n        {\n          'border-t border-border pt-6': divider,\n          'justify-start': justify === 'start',\n          'justify-center': justify === 'center',\n          'justify-end': justify === 'end',\n          'justify-between': justify === 'between',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = 'CardFooter';\n\n// Specialized card variants for common use cases\nexport interface ActionCardProps extends CardProps {\n  title: string;\n  description?: string;\n  action: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\nfunction ActionCard({\n  title,\n  description,\n  action,\n  icon,\n  className,\n  ...props\n}: ActionCardProps) {\n  return (\n    <Card className={cn('transition-all hover:shadow-md', className)} {...props}>\n      <CardHeader>\n        <div className=\"flex items-center space-x-4\">\n          {icon && (\n            <div className=\"flex-shrink-0 p-2 rounded-lg bg-primary/10 text-primary\">\n              {icon}\n            </div>\n          )}\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg\">{title}</CardTitle>\n            {description && (\n              <CardDescription>{description}</CardDescription>\n            )}\n          </div>\n          <div className=\"flex-shrink-0\">{action}</div>\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nexport interface MetricCardProps extends CardProps {\n  label: string;\n  value: string | number;\n  change?: {\n    value: number;\n    type: 'increase' | 'decrease';\n    period?: string;\n  };\n  icon?: React.ReactNode;\n  loading?: boolean;\n}\n\nfunction MetricCard({\n  label,\n  value,\n  change,\n  icon,\n  loading = false,\n  className,\n  ...props\n}: MetricCardProps) {\n  return (\n    <Card className={className} {...props}>\n      <CardContent>\n        <div className=\"flex items-center justify-between space-y-0 pb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{label}</p>\n          {icon && <div className=\"text-muted-foreground\">{icon}</div>}\n        </div>\n        <div>\n          {loading ? (\n            <div className=\"h-8 w-24 bg-muted rounded animate-pulse\" />\n          ) : (\n            <div className=\"text-2xl font-bold\">{value}</div>\n          )}\n          {change && !loading && (\n            <p\n              className={cn(\n                'text-xs',\n                change.type === 'increase'\n                  ? 'text-green-600'\n                  : 'text-destructive'\n              )}\n            >\n              {change.type === 'increase' ? '+' : '-'}\n              {Math.abs(change.value)}%\n              {change.period && ` from ${change.period}`}\n            </p>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  ActionCard,\n  MetricCard,\n};"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;AAOA,MAAM,qBAAO,mNAAgB,CAC3B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,UAAU,IAAI,EAAE,GAAG,OAAO,EAAE;IAC7D,qBACE,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,+HAAE,EACX,2CACA;YACE,wBAAwB,YAAY,aAAa,YAAY;YAC7D,aAAa,YAAY;YACzB,aAAa,YAAY;YACzB,OAAO,YAAY;YACnB,OAAO,YAAY;YACnB,OAAO,YAAY;YACnB,OAAO,YAAY;QACrB,GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEF,KAAK,WAAW,GAAG;AAMnB,MAAM,2BAAa,mNAAgB,CACjC,CAAC,EAAE,SAAS,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE,oBACzC,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,+HAAE,EACX,iCACA,WAAW,0BACX;QAED,GAAG,KAAK;;;;;;AAIf,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,+HAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,+HAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAM9B,MAAM,4BAAc,mNAAgB,CAClC,CAAC,EAAE,SAAS,EAAE,UAAU,IAAI,EAAE,GAAG,OAAO,EAAE,oBACxC,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,+HAAE,EACX;YACE,OAAO,YAAY;YACnB,OAAO,YAAY;YACnB,OAAO,YAAY;YACnB,OAAO,YAAY;QACrB,GACA;QAED,GAAG,KAAK;;;;;;AAIf,YAAY,WAAW,GAAG;AAO1B,MAAM,2BAAa,mNAAgB,CACjC,CAAC,EAAE,SAAS,EAAE,UAAU,KAAK,EAAE,UAAU,OAAO,EAAE,GAAG,OAAO,EAAE,oBAC5D,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,+HAAE,EACX,8BACA;YACE,+BAA+B;YAC/B,iBAAiB,YAAY;YAC7B,kBAAkB,YAAY;YAC9B,eAAe,YAAY;YAC3B,mBAAmB,YAAY;QACjC,GACA;QAED,GAAG,KAAK;;;;;;AAIf,WAAW,WAAW,GAAG;AAUzB,SAAS,WAAW,EAClB,KAAK,EACL,WAAW,EACX,MAAM,EACN,IAAI,EACJ,SAAS,EACT,GAAG,OACa;IAChB,qBACE,8OAAC;QAAK,WAAW,IAAA,+HAAE,EAAC,kCAAkC;QAAa,GAAG,KAAK;kBACzE,cAAA,8OAAC;sBACC,cAAA,8OAAC;gBAAI,WAAU;;oBACZ,sBACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAGL,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAU,WAAU;0CAAW;;;;;;4BAC/B,6BACC,8OAAC;0CAAiB;;;;;;;;;;;;kCAGtB,8OAAC;wBAAI,WAAU;kCAAiB;;;;;;;;;;;;;;;;;;;;;;AAK1C;AAcA,SAAS,WAAW,EAClB,KAAK,EACL,KAAK,EACL,MAAM,EACN,IAAI,EACJ,UAAU,KAAK,EACf,SAAS,EACT,GAAG,OACa;IAChB,qBACE,8OAAC;QAAK,WAAW;QAAY,GAAG,KAAK;kBACnC,cAAA,8OAAC;;8BACC,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAE,WAAU;sCAA6C;;;;;;wBACzD,sBAAQ,8OAAC;4BAAI,WAAU;sCAAyB;;;;;;;;;;;;8BAEnD,8OAAC;;wBACE,wBACC,8OAAC;4BAAI,WAAU;;;;;iDAEf,8OAAC;4BAAI,WAAU;sCAAsB;;;;;;wBAEtC,UAAU,CAAC,yBACV,8OAAC;4BACC,WAAW,IAAA,+HAAE,EACX,WACA,OAAO,IAAI,KAAK,aACZ,mBACA;;gCAGL,OAAO,IAAI,KAAK,aAAa,MAAM;gCACnC,KAAK,GAAG,CAAC,OAAO,KAAK;gCAAE;gCACvB,OAAO,MAAM,IAAI,CAAC,MAAM,EAAE,OAAO,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;AAOxD","debugId":null}},
    {"offset": {"line": 1170, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/orders/%5Bid%5D/order-detail-skeleton.tsx"],"sourcesContent":["import { Skeleton } from '@/components/ui/skeleton';\nimport { Card } from '@/components/ui/card';\n\nexport function OrderDetailSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Status Bar Skeleton */}\n      <Card className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <Skeleton className=\"h-8 w-24\" />\n            <Skeleton className=\"h-5 w-32\" />\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Skeleton className=\"h-9 w-28\" />\n            <Skeleton className=\"h-9 w-20\" />\n          </div>\n        </div>\n      </Card>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main Content Skeleton */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Tab Headers */}\n          <div className=\"flex gap-4 border-b\">\n            {Array.from({ length: 4 }).map((_, i) => (\n              <Skeleton key={i} className=\"h-10 w-24\" />\n            ))}\n          </div>\n\n          {/* Customer Information Card */}\n          <Card>\n            <div className=\"p-4 border-b\">\n              <Skeleton className=\"h-6 w-40\" />\n            </div>\n            <div className=\"p-4 space-y-3\">\n              {Array.from({ length: 3 }).map((_, i) => (\n                <div key={i} className=\"flex items-center gap-3\">\n                  <Skeleton className=\"h-4 w-4\" />\n                  <Skeleton className=\"h-5 w-48\" />\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          {/* Order Summary Card */}\n          <Card>\n            <div className=\"p-4 border-b\">\n              <Skeleton className=\"h-6 w-32\" />\n            </div>\n            <div className=\"p-4 space-y-2\">\n              {Array.from({ length: 4 }).map((_, i) => (\n                <div key={i} className=\"flex justify-between\">\n                  <Skeleton className=\"h-4 w-20\" />\n                  <Skeleton className=\"h-4 w-16\" />\n                </div>\n              ))}\n              <div className=\"pt-2 border-t\">\n                <div className=\"flex justify-between\">\n                  <Skeleton className=\"h-5 w-16\" />\n                  <Skeleton className=\"h-5 w-20\" />\n                </div>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Sidebar Skeleton */}\n        <div className=\"space-y-6\">\n          {/* Quick Actions Card */}\n          <Card>\n            <div className=\"p-4 border-b\">\n              <Skeleton className=\"h-6 w-32\" />\n            </div>\n            <div className=\"p-4 space-y-2\">\n              {Array.from({ length: 4 }).map((_, i) => (\n                <Skeleton key={i} className=\"h-10 w-full\" />\n              ))}\n            </div>\n          </Card>\n\n          {/* Order Info Card */}\n          <Card>\n            <div className=\"p-4 border-b\">\n              <Skeleton className=\"h-6 w-36\" />\n            </div>\n            <div className=\"p-4 space-y-3\">\n              {Array.from({ length: 5 }).map((_, i) => (\n                <div key={i} className=\"flex items-center justify-between\">\n                  <Skeleton className=\"h-4 w-24\" />\n                  <Skeleton className=\"h-4 w-32\" />\n                </div>\n              ))}\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,iIAAI;gBAAC,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,yIAAQ;oCAAC,WAAU;;;;;;8CACpB,8OAAC,yIAAQ;oCAAC,WAAU;;;;;;;;;;;;sCAEtB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,yIAAQ;oCAAC,WAAU;;;;;;8CACpB,8OAAC,yIAAQ;oCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;0BAK1B,8OAAC;gBAAI,WAAU;;kCAEb,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC;gCAAI,WAAU;0CACZ,MAAM,IAAI,CAAC;oCAAE,QAAQ;gCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC,yIAAQ;wCAAS,WAAU;uCAAb;;;;;;;;;;0CAKnB,8OAAC,iIAAI;;kDACH,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,yIAAQ;4CAAC,WAAU;;;;;;;;;;;kDAEtB,8OAAC;wCAAI,WAAU;kDACZ,MAAM,IAAI,CAAC;4CAAE,QAAQ;wCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;gDAAY,WAAU;;kEACrB,8OAAC,yIAAQ;wDAAC,WAAU;;;;;;kEACpB,8OAAC,yIAAQ;wDAAC,WAAU;;;;;;;+CAFZ;;;;;;;;;;;;;;;;0CAShB,8OAAC,iIAAI;;kDACH,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,yIAAQ;4CAAC,WAAU;;;;;;;;;;;kDAEtB,8OAAC;wCAAI,WAAU;;4CACZ,MAAM,IAAI,CAAC;gDAAE,QAAQ;4CAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;oDAAY,WAAU;;sEACrB,8OAAC,yIAAQ;4DAAC,WAAU;;;;;;sEACpB,8OAAC,yIAAQ;4DAAC,WAAU;;;;;;;mDAFZ;;;;;0DAKZ,8OAAC;gDAAI,WAAU;0DACb,cAAA,8OAAC;oDAAI,WAAU;;sEACb,8OAAC,yIAAQ;4DAAC,WAAU;;;;;;sEACpB,8OAAC,yIAAQ;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAQ9B,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC,iIAAI;;kDACH,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,yIAAQ;4CAAC,WAAU;;;;;;;;;;;kDAEtB,8OAAC;wCAAI,WAAU;kDACZ,MAAM,IAAI,CAAC;4CAAE,QAAQ;wCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC,yIAAQ;gDAAS,WAAU;+CAAb;;;;;;;;;;;;;;;;0CAMrB,8OAAC,iIAAI;;kDACH,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,yIAAQ;4CAAC,WAAU;;;;;;;;;;;kDAEtB,8OAAC;wCAAI,WAAU;kDACZ,MAAM,IAAI,CAAC;4CAAE,QAAQ;wCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,kBACjC,8OAAC;gDAAY,WAAU;;kEACrB,8OAAC,yIAAQ;wDAAC,WAAU;;;;;;kEACpB,8OAAC,yIAAQ;wDAAC,WAAU;;;;;;;+CAFZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW1B","debugId":null}},
    {"offset": {"line": 1532, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cn, focusRing, disabledStyles } from './utils';\nimport { Loader2 } from 'lucide-react';\n\nconst buttonVariants = {\n  variant: {\n    primary: 'bg-primary text-primary-foreground hover:bg-primary/90',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    danger: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n    ghost: 'hover:bg-accent hover:text-accent-foreground',\n    outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n    link: 'text-primary underline-offset-4 hover:underline',\n  },\n  size: {\n    sm: 'h-9 rounded-md px-3 text-sm',\n    md: 'h-10 px-4 py-2',\n    lg: 'h-11 rounded-md px-8 text-base',\n    icon: 'h-10 w-10',\n  },\n} as const;\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: keyof typeof buttonVariants.variant;\n  size?: keyof typeof buttonVariants.size;\n  asChild?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant = 'primary',\n      size = 'md',\n      asChild = false,\n      loading = false,\n      loadingText,\n      disabled,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    \n    const buttonClasses = cn(\n      // Base styles\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium',\n      'ring-offset-background transition-colors',\n      focusRing,\n      disabledStyles,\n      // Variant styles\n      buttonVariants.variant[variant],\n      // Size styles  \n      buttonVariants.size[size],\n      className\n    );\n\n    const isDisabled = disabled || loading;\n\n    return (\n      <Comp\n        className={buttonClasses}\n        ref={ref}\n        disabled={isDisabled}\n        {...props}\n      >\n        {loading && (\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n        )}\n        {loading && loadingText ? loadingText : children}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB;IACrB,SAAS;QACP,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;QACP,SAAS;QACT,MAAM;IACR;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;AACF;AAWA,MAAM,uBAAS,mNAAgB,CAC7B,CACE,EACE,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,UAAU,KAAK,EACf,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,GAAG,OACJ,EACD;IAEA,MAAM,OAAO,UAAU,wKAAI,GAAG;IAE9B,MAAM,gBAAgB,IAAA,+HAAE,EACtB,cAAc;IACd,4FACA,4CACA,sIAAS,EACT,2IAAc,EACd,iBAAiB;IACjB,eAAe,OAAO,CAAC,QAAQ,EAC/B,gBAAgB;IAChB,eAAe,IAAI,CAAC,KAAK,EACzB;IAGF,MAAM,aAAa,YAAY;IAE/B,qBACE,8OAAC;QACC,WAAW;QACX,KAAK;QACL,UAAU;QACT,GAAG,KAAK;;YAER,yBACC,8OAAC,sLAAO;gBAAC,WAAU;;;;;;YAEpB,WAAW,cAAc,cAAc;;;;;;;AAG9C;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1598, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nconst badgeVariants = {\n  variant: {\n    default: 'bg-primary text-primary-foreground hover:bg-primary/80',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    success: 'bg-green-500 text-white hover:bg-green-600',\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600',\n    error: 'bg-destructive text-destructive-foreground hover:bg-destructive/80',\n    outline: 'border border-input bg-background text-foreground hover:bg-accent',\n    ghost: 'text-foreground hover:bg-accent',\n  },\n  size: {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-0.5 text-sm',\n    lg: 'px-3 py-1 text-sm',\n  },\n} as const;\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: keyof typeof badgeVariants.variant;\n  size?: keyof typeof badgeVariants.size;\n  pulse?: boolean;\n}\n\nfunction Badge({\n  className,\n  variant = 'default',\n  size = 'md',\n  pulse = false,\n  children,\n  ...props\n}: BadgeProps) {\n  return (\n    <div\n      className={cn(\n        // Base styles\n        'inline-flex items-center rounded-full font-semibold transition-colors',\n        'focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n        // Variant and size styles\n        badgeVariants.variant[variant],\n        badgeVariants.size[size],\n        // Pulse animation\n        pulse && 'animate-pulse',\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Status-specific badge components for common use cases\nexport function StatusBadge({ \n  status, \n  className, \n  ...props \n}: { status: 'online' | 'busy' | 'offline' | 'pending' | 'completed' | 'cancelled' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    online: 'success' as const,\n    completed: 'success' as const,\n    busy: 'warning' as const,\n    pending: 'warning' as const,\n    offline: 'secondary' as const,\n    cancelled: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[status]} \n      className={cn('capitalize', className)} \n      {...props}\n    >\n      <div className=\"mr-1 h-2 w-2 rounded-full bg-current opacity-75\" />\n      {status}\n    </Badge>\n  );\n}\n\n// Priority badge for orders, tasks, etc.\nexport function PriorityBadge({ \n  priority, \n  className, \n  ...props \n}: { priority: 'low' | 'medium' | 'high' | 'urgent' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    low: 'secondary' as const,\n    medium: 'default' as const,\n    high: 'warning' as const,\n    urgent: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[priority]} \n      className={cn('capitalize', className)}\n      pulse={priority === 'urgent'}\n      {...props}\n    >\n      {priority}\n    </Badge>\n  );\n}\n\nexport { Badge, badgeVariants };"],"names":[],"mappings":";;;;;;;;;;;AACA;;;AAEA,MAAM,gBAAgB;IACpB,SAAS;QACP,SAAS;QACT,WAAW;QACX,SAAS;QACT,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;IACT;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;AACF;AASA,SAAS,MAAM,EACb,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,QAAQ,KAAK,EACb,QAAQ,EACR,GAAG,OACQ;IACX,qBACE,8OAAC;QACC,WAAW,IAAA,+HAAE,EACX,cAAc;QACd,yEACA,uEACA,0BAA0B;QAC1B,cAAc,OAAO,CAAC,QAAQ,EAC9B,cAAc,IAAI,CAAC,KAAK,EACxB,kBAAkB;QAClB,SAAS,iBACT;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;AAGO,SAAS,YAAY,EAC1B,MAAM,EACN,SAAS,EACT,GAAG,OAC6G;IAChH,MAAM,aAAa;QACjB,QAAQ;QACR,WAAW;QACX,MAAM;QACN,SAAS;QACT,SAAS;QACT,WAAW;IACb;IAEA,qBACE,8OAAC;QACC,SAAS,UAAU,CAAC,OAAO;QAC3B,WAAW,IAAA,+HAAE,EAAC,cAAc;QAC3B,GAAG,KAAK;;0BAET,8OAAC;gBAAI,WAAU;;;;;;YACd;;;;;;;AAGP;AAGO,SAAS,cAAc,EAC5B,QAAQ,EACR,SAAS,EACT,GAAG,OAC8E;IACjF,MAAM,aAAa;QACjB,KAAK;QACL,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IAEA,qBACE,8OAAC;QACC,SAAS,UAAU,CAAC,SAAS;QAC7B,WAAW,IAAA,+HAAE,EAAC,cAAc;QAC5B,OAAO,aAAa;QACnB,GAAG,KAAK;kBAER;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 1695, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/page-header.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\nimport { Button } from './button';\nimport { Badge } from './badge';\nimport { ArrowLeft } from 'lucide-react';\n\nexport interface PageHeaderProps {\n  title: string;\n  description?: string;\n  badge?: {\n    text: string;\n    variant?: 'default' | 'secondary' | 'success' | 'warning' | 'error';\n  };\n  breadcrumbs?: {\n    label: string;\n    href?: string;\n    onClick?: () => void;\n  }[];\n  actions?: React.ReactNode;\n  backButton?: {\n    onClick: () => void;\n    label?: string;\n  };\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nfunction PageHeader({\n  title,\n  description,\n  badge,\n  breadcrumbs,\n  actions,\n  backButton,\n  className,\n  size = 'md',\n}: PageHeaderProps) {\n  const sizeClasses = {\n    sm: {\n      container: 'py-4',\n      title: 'text-lg',\n      description: 'text-sm',\n    },\n    md: {\n      container: 'py-6',\n      title: 'text-2xl',\n      description: 'text-base',\n    },\n    lg: {\n      container: 'py-8',\n      title: 'text-3xl',\n      description: 'text-lg',\n    },\n  };\n\n  return (\n    <div className={cn(\n      'border-b border-border bg-background',\n      sizeClasses[size].container,\n      className\n    )}>\n      <div className=\"space-y-4\">\n        {/* Breadcrumbs */}\n        {breadcrumbs && breadcrumbs.length > 0 && (\n          <nav className=\"flex items-center space-x-1 text-sm text-muted-foreground\">\n            {breadcrumbs.map((crumb, index) => (\n              <React.Fragment key={index}>\n                {index > 0 && <span className=\"mx-1\">/</span>}\n                {crumb.href || crumb.onClick ? (\n                  <button\n                    onClick={crumb.onClick}\n                    className=\"hover:text-foreground transition-colors\"\n                    type=\"button\"\n                  >\n                    {crumb.label}\n                  </button>\n                ) : (\n                  <span className=\"text-foreground font-medium\">{crumb.label}</span>\n                )}\n              </React.Fragment>\n            ))}\n          </nav>\n        )}\n\n        {/* Main header */}\n        <div className=\"flex items-start justify-between\">\n          <div className=\"flex items-start space-x-4 min-w-0 flex-1\">\n            {/* Back button */}\n            {backButton && (\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={backButton.onClick}\n                className=\"mt-1 flex-shrink-0\"\n                aria-label={backButton.label || 'Go back'}\n              >\n                <ArrowLeft className=\"h-4 w-4\" />\n              </Button>\n            )}\n\n            <div className=\"min-w-0 flex-1\">\n              {/* Title and badge */}\n              <div className=\"flex items-center space-x-3 mb-1\">\n                <h1 className={cn(\n                  'font-bold tracking-tight text-foreground truncate',\n                  sizeClasses[size].title\n                )}>\n                  {title}\n                </h1>\n                {badge && (\n                  <Badge variant={badge.variant} size=\"sm\">\n                    {badge.text}\n                  </Badge>\n                )}\n              </div>\n\n              {/* Description */}\n              {description && (\n                <p className={cn(\n                  'text-muted-foreground',\n                  sizeClasses[size].description\n                )}>\n                  {description}\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Actions */}\n          {actions && (\n            <div className=\"flex items-center space-x-2 flex-shrink-0 ml-4\">\n              {actions}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Specialized page header variants\nexport interface DashboardPageHeaderProps {\n  title: string;\n  subtitle?: string;\n  stats?: {\n    label: string;\n    value: string | number;\n  }[];\n  actions?: React.ReactNode;\n  className?: string;\n}\n\nfunction DashboardPageHeader({\n  title,\n  subtitle,\n  stats,\n  actions,\n  className,\n}: DashboardPageHeaderProps) {\n  return (\n    <div className={cn('border-b border-border bg-background py-6', className)}>\n      <div className=\"flex items-center justify-between\">\n        <div className=\"min-w-0 flex-1\">\n          <h1 className=\"text-2xl font-bold tracking-tight text-foreground\">\n            {title}\n          </h1>\n          {subtitle && (\n            <p className=\"text-muted-foreground mt-1\">{subtitle}</p>\n          )}\n          \n          {/* Stats */}\n          {stats && stats.length > 0 && (\n            <div className=\"flex items-center space-x-6 mt-4\">\n              {stats.map((stat, index) => (\n                <div key={index} className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-foreground\">\n                    {stat.value}\n                  </div>\n                  <div className=\"text-xs text-muted-foreground uppercase tracking-wide\">\n                    {stat.label}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {actions && (\n          <div className=\"flex items-center space-x-2 flex-shrink-0 ml-6\">\n            {actions}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport interface ListPageHeaderProps {\n  title: string;\n  count?: number;\n  searchPlaceholder?: string;\n  onSearch?: (query: string) => void;\n  filters?: React.ReactNode;\n  actions?: React.ReactNode;\n  className?: string;\n}\n\nfunction ListPageHeader({\n  title,\n  count,\n  searchPlaceholder = 'Search...',\n  onSearch,\n  filters,\n  actions,\n  className,\n}: ListPageHeaderProps) {\n  const [searchQuery, setSearchQuery] = React.useState('');\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const query = event.target.value;\n    setSearchQuery(query);\n    onSearch?.(query);\n  };\n\n  return (\n    <div className={cn('border-b border-border bg-background py-6', className)}>\n      <div className=\"space-y-4\">\n        {/* Title and count */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold tracking-tight text-foreground\">\n              {title}\n              {typeof count === 'number' && (\n                <span className=\"ml-2 text-lg font-normal text-muted-foreground\">\n                  ({count})\n                </span>\n              )}\n            </h1>\n          </div>\n          {actions && (\n            <div className=\"flex items-center space-x-2\">\n              {actions}\n            </div>\n          )}\n        </div>\n\n        {/* Search and filters */}\n        {(onSearch || filters) && (\n          <div className=\"flex items-center space-x-4\">\n            {onSearch && (\n              <div className=\"flex-1 max-w-md\">\n                <input\n                  type=\"text\"\n                  placeholder={searchPlaceholder}\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  className=\"w-full h-10 px-3 rounded-md border border-input bg-background text-sm placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n                />\n              </div>\n            )}\n            {filters && <div className=\"flex items-center space-x-2\">{filters}</div>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { PageHeader, DashboardPageHeader, ListPageHeader };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2069, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/orders/%5Bid%5D/page.tsx"],"sourcesContent":["import { Suspense } from 'react';\nimport { notFound } from 'next/navigation';\nimport { getOrder } from '@/lib/orders/data';\nimport { OrderDetailContent } from './order-detail-content';\nimport { OrderDetailSkeleton } from './order-detail-skeleton';\nimport { PageHeader } from '@/components/ui/page-header';\n\nexport default async function OrderDetailPage({\n  params\n}: {\n  params: { id: string }\n}) {\n  const order = await getOrder(params.id);\n\n  if (!order) {\n    notFound();\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-6 max-w-7xl\">\n      <PageHeader\n        title={`Order ${order.orderNumber}`}\n        description={`${order.type.replace('_', ' ')} • ${order.customerName || 'Guest'}`}\n        backHref=\"/orders\"\n        actions={[\n          {\n            label: 'Print',\n            onClick: () => {},\n            variant: 'outline'\n          },\n          {\n            label: 'Edit',\n            href: `/orders/${params.id}/edit`,\n            variant: 'secondary'\n          }\n        ]}\n      />\n\n      <Suspense fallback={<OrderDetailSkeleton />}>\n        <OrderDetailContent order={order} />\n      </Suspense>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAEe,eAAe,gBAAgB,EAC5C,MAAM,EAGP;IACC,MAAM,QAAQ,MAAM,IAAA,iIAAQ,EAAC,OAAO,EAAE;IAEtC,IAAI,CAAC,OAAO;QACV,IAAA,iMAAQ;IACV;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,iJAAU;gBACT,OAAO,CAAC,MAAM,EAAE,MAAM,WAAW,EAAE;gBACnC,aAAa,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,GAAG,EAAE,MAAM,YAAY,IAAI,SAAS;gBACjF,UAAS;gBACT,SAAS;oBACP;wBACE,OAAO;wBACP,SAAS,KAAO;wBAChB,SAAS;oBACX;oBACA;wBACE,OAAO;wBACP,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,KAAK,CAAC;wBACjC,SAAS;oBACX;iBACD;;;;;;0BAGH,8OAAC,iNAAQ;gBAAC,wBAAU,8OAAC,8KAAmB;;;;;0BACtC,cAAA,8OAAC,4KAAkB;oBAAC,OAAO;;;;;;;;;;;;;;;;;AAInC","debugId":null}}]
}