{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_cf2c6820.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_cf2c6820-module__Rdu3Sq__className\",\n  \"variable\": \"geist_cf2c6820-module__Rdu3Sq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_cf2c6820.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22],%22display%22:%22swap%22,%22preload%22:true,%22fallback%22:[%22system-ui%22,%22arial%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', system-ui, arial\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,gKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,gKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,gKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8e155291.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_8e155291-module__afBWEq__className\",\n  \"variable\": \"geist_mono_8e155291-module__afBWEq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_8e155291.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22],%22display%22:%22swap%22,%22preload%22:false,%22fallback%22:[%22ui-monospace%22,%22Menlo%22,%22Monaco%22,%22monospace%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', ui-monospace, Menlo, Monaco, monospace\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/accessibility/announcer.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Announcer = registerClientReference(\n    function() { throw new Error(\"Attempted to call Announcer() from the server but Announcer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"Announcer\",\n);\nexport const AnnouncerProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnnouncerProvider() from the server but AnnouncerProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"AnnouncerProvider\",\n);\nexport const FormAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormAnnouncer() from the server but FormAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"FormAnnouncer\",\n);\nexport const LoadingAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingAnnouncer() from the server but LoadingAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"LoadingAnnouncer\",\n);\nexport const RouteChangeAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call RouteChangeAnnouncer() from the server but RouteChangeAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"RouteChangeAnnouncer\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/accessibility/announcer.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"default\",\n);\nexport const useAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAnnouncer() from the server but useAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"useAnnouncer\",\n);\nexport const useCommonAnnouncements = registerClientReference(\n    function() { throw new Error(\"Attempted to call useCommonAnnouncements() from the server but useCommonAnnouncements is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx <module evaluation>\",\n    \"useCommonAnnouncements\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wEACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wEACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wEACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,wEACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,wEACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/accessibility/announcer.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Announcer = registerClientReference(\n    function() { throw new Error(\"Attempted to call Announcer() from the server but Announcer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"Announcer\",\n);\nexport const AnnouncerProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AnnouncerProvider() from the server but AnnouncerProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"AnnouncerProvider\",\n);\nexport const FormAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormAnnouncer() from the server but FormAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"FormAnnouncer\",\n);\nexport const LoadingAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call LoadingAnnouncer() from the server but LoadingAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"LoadingAnnouncer\",\n);\nexport const RouteChangeAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call RouteChangeAnnouncer() from the server but RouteChangeAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"RouteChangeAnnouncer\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/accessibility/announcer.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"default\",\n);\nexport const useAnnouncer = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAnnouncer() from the server but useAnnouncer is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"useAnnouncer\",\n);\nexport const useCommonAnnouncements = registerClientReference(\n    function() { throw new Error(\"Attempted to call useCommonAnnouncements() from the server but useCommonAnnouncements is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/announcer.tsx\",\n    \"useCommonAnnouncements\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oDACA;AAEG,MAAM,oBAAoB,IAAA,wQAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oDACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oDACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,oDACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,oDACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA;AAEG,MAAM,yBAAyB,IAAA,wQAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/accessibility/keyboard-shortcuts.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const KeyboardShortcutsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call KeyboardShortcutsProvider() from the server but KeyboardShortcutsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx <module evaluation>\",\n    \"KeyboardShortcutsProvider\",\n);\nexport const ShortcutDisplay = registerClientReference(\n    function() { throw new Error(\"Attempted to call ShortcutDisplay() from the server but ShortcutDisplay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx <module evaluation>\",\n    \"ShortcutDisplay\",\n);\nexport const ShortcutsSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call ShortcutsSummary() from the server but ShortcutsSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx <module evaluation>\",\n    \"ShortcutsSummary\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/accessibility/keyboard-shortcuts.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx <module evaluation>\",\n    \"default\",\n);\nexport const useKeyboardShortcuts = registerClientReference(\n    function() { throw new Error(\"Attempted to call useKeyboardShortcuts() from the server but useKeyboardShortcuts is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx <module evaluation>\",\n    \"useKeyboardShortcuts\",\n);\nexport const useShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call useShortcut() from the server but useShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx <module evaluation>\",\n    \"useShortcut\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,4BAA4B,IAAA,wQAAuB,EAC5D;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,iFACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iFACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iFACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAmT,GAChV,iFACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iFACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,iFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/accessibility/keyboard-shortcuts.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const KeyboardShortcutsProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call KeyboardShortcutsProvider() from the server but KeyboardShortcutsProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx\",\n    \"KeyboardShortcutsProvider\",\n);\nexport const ShortcutDisplay = registerClientReference(\n    function() { throw new Error(\"Attempted to call ShortcutDisplay() from the server but ShortcutDisplay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx\",\n    \"ShortcutDisplay\",\n);\nexport const ShortcutsSummary = registerClientReference(\n    function() { throw new Error(\"Attempted to call ShortcutsSummary() from the server but ShortcutsSummary is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx\",\n    \"ShortcutsSummary\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/accessibility/keyboard-shortcuts.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx\",\n    \"default\",\n);\nexport const useKeyboardShortcuts = registerClientReference(\n    function() { throw new Error(\"Attempted to call useKeyboardShortcuts() from the server but useKeyboardShortcuts is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx\",\n    \"useKeyboardShortcuts\",\n);\nexport const useShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call useShortcut() from the server but useShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/keyboard-shortcuts.tsx\",\n    \"useShortcut\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,4BAA4B,IAAA,wQAAuB,EAC5D;IAAa,MAAM,IAAI,MAAM;AAAkQ,GAC/R,6DACA;AAEG,MAAM,kBAAkB,IAAA,wQAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6DACA;AAEG,MAAM,mBAAmB,IAAA,wQAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6DACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA;AAEG,MAAM,uBAAuB,IAAA,wQAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,6DACA;AAEG,MAAM,cAAc,IAAA,wQAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/accessibility/skip-link.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DataTableSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableSkipLinks() from the server but DataTableSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"DataTableSkipLinks\",\n);\nexport const FormSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormSkipLinks() from the server but FormSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"FormSkipLinks\",\n);\nexport const SkipLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipLink() from the server but SkipLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"SkipLink\",\n);\nexport const SkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipLinks() from the server but SkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"SkipLinks\",\n);\nexport const SkipNavigation = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipNavigation() from the server but SkipNavigation is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"SkipNavigation\",\n);\nexport const SkipToMain = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipToMain() from the server but SkipToMain is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"SkipToMain\",\n);\nexport const TableOfContentsSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableOfContentsSkipLinks() from the server but TableOfContentsSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"TableOfContentsSkipLinks\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/accessibility/skip-link.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"default\",\n);\nexport const useSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSkipLinks() from the server but useSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx <module evaluation>\",\n    \"useSkipLinks\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,wEACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wEACA;AAEG,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,wEACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,wEACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,wEACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wEACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,wEACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/accessibility/skip-link.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DataTableSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call DataTableSkipLinks() from the server but DataTableSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"DataTableSkipLinks\",\n);\nexport const FormSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call FormSkipLinks() from the server but FormSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"FormSkipLinks\",\n);\nexport const SkipLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipLink() from the server but SkipLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"SkipLink\",\n);\nexport const SkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipLinks() from the server but SkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"SkipLinks\",\n);\nexport const SkipNavigation = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipNavigation() from the server but SkipNavigation is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"SkipNavigation\",\n);\nexport const SkipToMain = registerClientReference(\n    function() { throw new Error(\"Attempted to call SkipToMain() from the server but SkipToMain is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"SkipToMain\",\n);\nexport const TableOfContentsSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call TableOfContentsSkipLinks() from the server but TableOfContentsSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"TableOfContentsSkipLinks\",\n);\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/accessibility/skip-link.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"default\",\n);\nexport const useSkipLinks = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSkipLinks() from the server but useSkipLinks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/accessibility/skip-link.tsx\",\n    \"useSkipLinks\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,wQAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oDACA;AAEG,MAAM,gBAAgB,IAAA,wQAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oDACA;AAEG,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oDACA;AAEG,MAAM,YAAY,IAAA,wQAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,oDACA;AAEG,MAAM,iBAAiB,IAAA,wQAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oDACA;AAEG,MAAM,aAAa,IAAA,wQAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,oDACA;AAEG,MAAM,2BAA2B,IAAA,wQAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,oDACA;uCAEW,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA;AAEG,MAAM,eAAe,IAAA,wQAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/layout.tsx"],"sourcesContent":["import type { Metadata, Viewport } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { Suspense } from \"react\";\nimport Script from \"next/script\";\nimport { AnnouncerProvider } from \"@/components/accessibility/announcer\";\nimport { KeyboardShortcutsProvider } from \"@/components/accessibility/keyboard-shortcuts\";\nimport { SkipLinks } from \"@/components/accessibility/skip-link\";\n\n// Optimize font loading with display swap\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n  display: \"swap\",\n  preload: true,\n  fallback: [\"system-ui\", \"arial\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n  display: \"swap\",\n  preload: false, // Only preload primary font\n  fallback: [\"ui-monospace\", \"Menlo\", \"Monaco\", \"monospace\"],\n});\n\n// Enhanced metadata for performance, SEO, and accessibility\nexport const metadata: Metadata = {\n  title: {\n    template: \"%s | Restaurant Dashboard\",\n    default: \"Restaurant Dashboard - Complete Management Solution\",\n  },\n  description: \"Comprehensive restaurant management dashboard with real-time analytics, inventory tracking, order management, and performance monitoring. Fully accessible and WCAG 2.1 AA compliant.\",\n  keywords: [\"restaurant\", \"dashboard\", \"management\", \"analytics\", \"inventory\", \"orders\", \"POS\", \"accessibility\", \"WCAG\"],\n  authors: [{ name: \"Restaurant Dashboard Team\" }],\n  creator: \"Restaurant Dashboard\",\n  publisher: \"Restaurant Dashboard\",\n  formatDetection: {\n    email: false,\n    address: false,\n    telephone: false,\n  },\n  metadataBase: new URL(process.env.NEXT_PUBLIC_BASE_URL || 'https://localhost:3000'),\n  alternates: {\n    canonical: \"/\",\n  },\n  robots: {\n    index: true,\n    follow: true,\n    googleBot: {\n      index: true,\n      follow: true,\n      \"max-video-preview\": -1,\n      \"max-image-preview\": \"large\",\n      \"max-snippet\": -1,\n    },\n  },\n  openGraph: {\n    type: \"website\",\n    locale: \"en_US\",\n    url: \"/\",\n    title: \"Restaurant Dashboard - Complete Management Solution\",\n    description: \"Comprehensive restaurant management dashboard with real-time analytics, inventory tracking, and order management. Fully accessible and WCAG 2.1 AA compliant.\",\n    siteName: \"Restaurant Dashboard\",\n  },\n  twitter: {\n    card: \"summary_large_image\",\n    title: \"Restaurant Dashboard - Complete Management Solution\",\n    description: \"Comprehensive restaurant management dashboard with real-time analytics, inventory tracking, and order management. Fully accessible and WCAG 2.1 AA compliant.\",\n  },\n  manifest: \"/manifest.json\",\n  icons: {\n    icon: [\n      { url: \"/favicon.ico\", sizes: \"any\" },\n      { url: \"/icon-192.png\", sizes: \"192x192\", type: \"image/png\" },\n      { url: \"/icon-512.png\", sizes: \"512x512\", type: \"image/png\" },\n    ],\n    apple: [\n      { url: \"/apple-icon-180.png\", sizes: \"180x180\", type: \"image/png\" },\n    ],\n  },\n  other: {\n    // Accessibility metadata\n    'accessibility': 'WCAG 2.1 AA compliant',\n    'color-scheme': 'light dark',\n  },\n};\n\n// Viewport configuration for optimal mobile performance and accessibility\nexport const viewport: Viewport = {\n  width: \"device-width\",\n  initialScale: 1,\n  maximumScale: 5, // Allow zooming up to 500% for low vision users\n  userScalable: true, // Important for accessibility\n  themeColor: [\n    { media: \"(prefers-color-scheme: light)\", color: \"#ffffff\" },\n    { media: \"(prefers-color-scheme: dark)\", color: \"#0a0a0a\" },\n  ],\n  colorScheme: \"light dark\",\n};\n\n// Accessible loading component with proper announcements\nconst GlobalLoading = () => (\n  <div \n    className=\"fixed inset-0 flex items-center justify-center bg-background/80 backdrop-blur-sm z-50\"\n    role=\"status\"\n    aria-live=\"polite\"\n    aria-label=\"Loading application\"\n  >\n    <div className=\"flex flex-col items-center gap-4\">\n      <div \n        className=\"animate-spin rounded-full h-8 w-8 border-2 border-primary border-t-transparent\"\n        aria-hidden=\"true\"\n      />\n      <p className=\"text-sm text-muted-foreground\">Loading Dashboard...</p>\n    </div>\n  </div>\n);\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <head>\n        {/* DNS prefetching for external resources */}\n        <link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\" />\n        <link rel=\"dns-prefetch\" href=\"//fonts.gstatic.com\" />\n        \n        {/* Preconnect to critical origins */}\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" crossOrigin=\"\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"\" />\n        \n        {/* Critical CSS is now in globals.css to avoid hydration mismatches */}\n      </head>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n        suppressHydrationWarning\n      >\n        {/* Accessibility Providers - Must wrap entire application */}\n        <AnnouncerProvider debugMode={process.env.NODE_ENV === 'development'}>\n          <KeyboardShortcutsProvider>\n              {/* Skip Links - Must be first interactive element for keyboard users */}\n              <SkipLinks />\n\n            {/* Performance monitoring initialization */}\n            <Script\n              id=\"performance-init\"\n              strategy=\"beforeInteractive\"\n              dangerouslySetInnerHTML={{\n                __html: `\n                  // Mark navigation start\n                  performance.mark('navigation-start');\n                  \n                  // Initialize Web Vitals monitoring\n                  window.performanceMetrics = [];\n                  \n                  // Early error handling\n                  window.addEventListener('error', function(e) {\n                    console.error('Global error:', e.error);\n                  });\n                  \n                  // Unhandled promise rejection handling\n                  window.addEventListener('unhandledrejection', function(e) {\n                    console.error('Unhandled promise rejection:', e.reason);\n                  });\n                `,\n              }}\n            />\n\n            {/* Main application content with semantic structure */}\n            <Suspense fallback={<GlobalLoading />}>\n              <div id=\"root\" className=\"min-h-screen bg-background text-foreground\">\n                {/* Semantic page structure for screen readers */}\n                <div className=\"flex flex-col min-h-screen\">\n                  {/* Banner/Header - Placeholder for page-specific headers */}\n                  <div id=\"page-header\" role=\"banner\" className=\"sr-only\">\n                    <h1 className=\"sr-only\">Restaurant Dashboard</h1>\n                    <p className=\"sr-only\">Comprehensive restaurant management system</p>\n                  </div>\n                  \n                  {/* Main Navigation - Placeholder for navigation components */}\n                  <div id=\"main-navigation\" role=\"navigation\" aria-label=\"Main navigation\" className=\"sr-only\">\n                    <p className=\"sr-only\">Navigation menu will appear here when available</p>\n                  </div>\n                  \n                  {/* Main Content Area */}\n                  <main id=\"main-content\" role=\"main\" className=\"flex-1\" tabIndex={-1}>\n                    {children}\n                  </main>\n                  \n                  {/* Footer - Placeholder for page-specific footers */}\n                  <div id=\"page-footer\" role=\"contentinfo\" className=\"sr-only\">\n                    <p className=\"sr-only\">Page footer information will appear here when available</p>\n                  </div>\n                </div>\n              </div>\n            </Suspense>\n\n            {/* Web Vitals and performance monitoring */}\n            <Script\n              id=\"web-vitals\"\n              strategy=\"afterInteractive\"\n              dangerouslySetInnerHTML={{\n                __html: `\n                  // Web Vitals monitoring\n                  if (typeof window !== 'undefined') {\n                    // Performance monitoring will be initialized by Next.js built-in analytics\n                    console.log('Performance monitoring ready');\n                  }\n                `,\n              }}\n            />\n\n            {/* Accessibility Initialization */}\n            <Script\n              id=\"accessibility-init\"\n              strategy=\"afterInteractive\"\n              dangerouslySetInnerHTML={{\n                __html: `\n                  // Initialize accessibility features\n                  if (typeof window !== 'undefined') {\n                    // Detect system preferences\n                    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n                    const prefersHighContrast = window.matchMedia('(prefers-contrast: high)').matches;\n                    const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\n                    \n                    // Apply initial accessibility classes\n                    const root = document.documentElement;\n                    if (prefersReducedMotion) root.classList.add('reduce-motion');\n                    if (prefersHighContrast) root.classList.add('high-contrast');\n                    \n                    // Set up media query listeners\n                    window.matchMedia('(prefers-reduced-motion: reduce)').addEventListener('change', (e) => {\n                      root.classList.toggle('reduce-motion', e.matches);\n                    });\n                    \n                    window.matchMedia('(prefers-contrast: high)').addEventListener('change', (e) => {\n                      root.classList.toggle('high-contrast', e.matches);\n                    });\n                    \n                    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\n                      root.classList.toggle('dark', e.matches);\n                    });\n                    \n                    // Initialize accessibility configuration\n                    const config = {\n                      reduceMotion: prefersReducedMotion,\n                      highContrast: prefersHighContrast,\n                      focusRings: true,\n                      screenReaderLevel: 'moderate',\n                      keyboardMode: 'standard',\n                      contrastLevel: 'AA'\n                    };\n                    \n                    // Mark accessibility as initialized\n                    root.setAttribute('data-accessibility-initialized', 'true');\n                    \n                    // Dispatch ready event\n                    window.dispatchEvent(new CustomEvent('accessibility:ready', { detail: config }));\n                    \n                    console.log('Accessibility features initialized');\n                  }\n                `,\n              }}\n            />\n\n            {/* Axe Core Integration for Development */}\n            {process.env.NODE_ENV === 'development' && (\n              <Script\n                id=\"axe-core\"\n                strategy=\"lazyOnload\"\n                dangerouslySetInnerHTML={{\n                  __html: `\n                    // Load axe-core for accessibility testing in development\n                    if (typeof window !== 'undefined') {\n                      // Simple script loader function\n                      function loadScript(src) {\n                        return new Promise((resolve, reject) => {\n                          const script = document.createElement('script');\n                          script.src = src;\n                          script.onload = resolve;\n                          script.onerror = reject;\n                          document.head.appendChild(script);\n                        });\n                      }\n                      \n                      // Load axe-core from CDN for development\n                      loadScript('https://unpkg.com/axe-core@4.10.2/axe.min.js').then(() => {\n                        if (window.axe) {\n                          // Run initial audit after page load\n                          setTimeout(() => {\n                            window.axe.run().then(results => {\n                              if (results.violations.length === 0) {\n                                console.log('%c✓ No accessibility violations detected', 'color: green; font-weight: bold');\n                              } else {\n                                console.warn('%c⚠ Accessibility violations detected:', 'color: orange; font-weight: bold', results.violations);\n                              }\n                            }).catch(err => {\n                              console.warn('Axe audit failed:', err);\n                            });\n                          }, 2000);\n                          \n                          console.log('Axe accessibility testing enabled (development mode)');\n                        }\n                      }).catch(err => {\n                        console.warn('Failed to load axe-core:', err);\n                      });\n                    }\n                  `,\n                }}\n              />\n            )}\n\n            {/* Service Worker registration for caching */}\n            <Script\n              id=\"service-worker\"\n              strategy=\"lazyOnload\"\n              dangerouslySetInnerHTML={{\n                __html: `\n                  if ('serviceWorker' in navigator && '${process.env.NODE_ENV}' === 'production') {\n                    window.addEventListener('load', function() {\n                      navigator.serviceWorker.register('/sw.js')\n                        .then(function(registration) {\n                          console.log('SW registered: ', registration);\n                        })\n                        .catch(function(registrationError) {\n                          console.log('SW registration failed: ', registrationError);\n                        });\n                    });\n                  }\n                `,\n              }}\n            />\n\n            {/* Resource hints and preloading script */}\n            <Script\n              id=\"resource-hints\"\n              strategy=\"lazyOnload\"\n              dangerouslySetInnerHTML={{\n                __html: `\n                  window.addEventListener('load', function() {\n                    // Preload critical resources after initial load\n                    const preloadLink = (href, as, type, priority = 'low') => {\n                      const link = document.createElement('link');\n                      link.rel = 'preload';\n                      link.href = href;\n                      link.as = as;\n                      if (type) link.type = type;\n                      link.fetchPriority = priority;\n                      document.head.appendChild(link);\n                    };\n                    \n                    // Preload critical images and fonts\n                    preloadLink('/images/logo.svg', 'image', 'image/svg+xml', 'high');\n                    preloadLink('/fonts/geist-sans-latin.woff2', 'font', 'font/woff2', 'high');\n                    \n                    // Mark page load complete\n                    performance.mark('page-load-complete');\n                    performance.measure('total-load-time', 'navigation-start', 'page-load-complete');\n                    \n                    // Announce page load completion to screen readers\n                    const announcement = document.createElement('div');\n                    announcement.setAttribute('aria-live', 'polite');\n                    announcement.setAttribute('aria-atomic', 'true');\n                    announcement.className = 'sr-only';\n                    announcement.textContent = 'Page loaded successfully';\n                    document.body.appendChild(announcement);\n                    \n                    // Remove announcement after delay\n                    setTimeout(() => {\n                      if (announcement.parentNode) {\n                        announcement.parentNode.removeChild(announcement);\n                      }\n                    }, 2000);\n                  });\n                `,\n              }}\n            />\n\n          </KeyboardShortcutsProvider>\n        </AnnouncerProvider>\n      </body>\n    </html>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/node_modules/next/dist/client/script.js/__nextjs-internal-proxy.cjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nconst { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n"],"names":[],"mappings":"AAAA,uEAAuE;AACvE,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 955, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 962, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/node_modules/next/script.js"],"sourcesContent":["module.exports = require('./dist/client/script')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}