{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/orders/types.ts"],"sourcesContent":["// Order Management Types\n\nexport enum OrderStatus {\n  PENDING = 'pending',\n  CONFIRMED = 'confirmed',\n  PREPARING = 'preparing',\n  READY = 'ready',\n  COMPLETED = 'completed',\n  DELIVERED = 'delivered',\n  CANCELLED = 'cancelled',\n  REFUNDED = 'refunded'\n}\n\nexport enum OrderType {\n  DINE_IN = 'dine_in',\n  TAKEOUT = 'takeout',\n  DELIVERY = 'delivery',\n  PICKUP = 'pickup',\n  CATERING = 'catering'\n}\n\nexport enum PaymentStatus {\n  PENDING = 'pending',\n  PROCESSING = 'processing',\n  COMPLETED = 'completed',\n  FAILED = 'failed',\n  REFUNDED = 'refunded',\n  PARTIALLY_REFUNDED = 'partially_refunded'\n}\n\nexport enum PaymentMethod {\n  CASH = 'cash',\n  CREDIT_CARD = 'credit_card',\n  DEBIT_CARD = 'debit_card',\n  DIGITAL_WALLET = 'digital_wallet',\n  GIFT_CARD = 'gift_card',\n  LOYALTY_POINTS = 'loyalty_points',\n  CHECK = 'check',\n  OTHER = 'other'\n}\n\nexport interface OrderItem {\n  id: string;\n  menuItemId: string;\n  menuItemName: string;\n  quantity: number;\n  unitPrice: number;\n  totalPrice: number;\n  modifiers: OrderModifier[];\n  specialInstructions?: string;\n  status: 'pending' | 'preparing' | 'ready' | 'served';\n  prepTime?: number;\n  station?: string;\n}\n\nexport interface OrderModifier {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n}\n\nexport interface Order {\n  id: string;\n  orderNumber: string;\n  status: OrderStatus;\n  type: OrderType;\n  customerId?: string;\n  customerName?: string;\n  customerPhone?: string;\n  customerEmail?: string;\n  tableNumber?: string;\n  items: OrderItem[];\n  subtotal: number;\n  tax: number;\n  tip: number;\n  discount: number;\n  total: number;\n  paymentStatus: PaymentStatus;\n  paymentMethod?: PaymentMethod;\n  paymentDetails?: PaymentDetails;\n  notes?: string;\n  createdAt: string;\n  updatedAt: string;\n  confirmedAt?: string;\n  prepStartedAt?: string;\n  readyAt?: string;\n  completedAt?: string;\n  deliveredAt?: string;\n  cancelledAt?: string;\n  refundedAt?: string;\n  estimatedReadyTime?: string;\n  assignedStaff?: StaffMember[];\n  deliveryInfo?: DeliveryInfo;\n  timeline: OrderTimelineEvent[];\n  posOrderId?: string;\n  posPaymentId?: string;\n  source: 'pos' | 'online' | 'phone' | 'kiosk' | 'third_party';\n  thirdPartyProvider?: string;\n}\n\nexport interface PaymentDetails {\n  transactionId: string;\n  lastFourDigits?: string;\n  cardBrand?: string;\n  authorizationCode?: string;\n  processorResponse?: string;\n  amount: number;\n  tip?: number;\n  fee?: number;\n  refundAmount?: number;\n  refundReason?: string;\n}\n\nexport interface DeliveryInfo {\n  address: string;\n  city: string;\n  state: string;\n  zipCode: string;\n  instructions?: string;\n  driverId?: string;\n  driverName?: string;\n  estimatedDeliveryTime?: string;\n  actualDeliveryTime?: string;\n  deliveryFee: number;\n  distance?: number;\n}\n\nexport interface StaffMember {\n  id: string;\n  name: string;\n  role: 'server' | 'chef' | 'bartender' | 'host' | 'manager' | 'driver';\n  assignedAt: string;\n}\n\nexport interface OrderTimelineEvent {\n  id: string;\n  timestamp: string;\n  event: string;\n  description: string;\n  user?: string;\n  metadata?: Record<string, any>;\n}\n\nexport interface OrderFilters {\n  status?: OrderStatus[];\n  type?: OrderType[];\n  paymentStatus?: PaymentStatus[];\n  dateRange?: {\n    start: string;\n    end: string;\n  };\n  customerId?: string;\n  tableNumber?: string;\n  searchTerm?: string;\n  minAmount?: number;\n  maxAmount?: number;\n  source?: string[];\n  assignedStaff?: string[];\n}\n\nexport interface OrderStats {\n  totalOrders: number;\n  totalRevenue: number;\n  averageOrderValue: number;\n  ordersByStatus: Record<OrderStatus, number>;\n  ordersByType: Record<OrderType, number>;\n  todayOrders: number;\n  todayRevenue: number;\n  pendingOrders: number;\n  preparingOrders: number;\n  readyOrders: number;\n  completedOrders: number;\n  cancelledOrders: number;\n  refundedAmount: number;\n  averagePrepTime: number;\n  peakHours: {\n    hour: number;\n    orders: number;\n  }[];\n}\n\nexport interface RefundRequest {\n  orderId: string;\n  amount: number;\n  reason: string;\n  items?: string[]; // Item IDs to refund\n  refundMethod: 'original' | 'cash' | 'store_credit';\n  notes?: string;\n}\n\nexport interface OrderUpdate {\n  status?: OrderStatus;\n  paymentStatus?: PaymentStatus;\n  items?: Partial<OrderItem>[];\n  notes?: string;\n  estimatedReadyTime?: string;\n  assignedStaff?: StaffMember[];\n  deliveryInfo?: Partial<DeliveryInfo>;\n}\n\nexport interface CreateOrder {\n  type: OrderType;\n  customerId?: string;\n  customerName?: string;\n  customerPhone?: string;\n  customerEmail?: string;\n  tableNumber?: string;\n  items: {\n    menuItemId: string;\n    quantity: number;\n    modifiers?: {\n      id: string;\n      quantity: number;\n    }[];\n    specialInstructions?: string;\n  }[];\n  paymentMethod?: PaymentMethod;\n  notes?: string;\n  scheduledFor?: string;\n  deliveryInfo?: Omit<DeliveryInfo, 'driverId' | 'driverName' | 'actualDeliveryTime'>;\n}\n\nexport interface OrderListItem {\n  id: string;\n  orderNumber: string;\n  status: OrderStatus;\n  type: OrderType;\n  customerName?: string;\n  tableNumber?: string;\n  total: number;\n  itemCount: number;\n  createdAt: string;\n  estimatedReadyTime?: string;\n  paymentStatus: PaymentStatus;\n  source: string;\n}\n\nexport interface OrderSummary {\n  date: string;\n  orderCount: number;\n  revenue: number;\n  averageOrderValue: number;\n  topItems: {\n    itemId: string;\n    itemName: string;\n    quantity: number;\n    revenue: number;\n  }[];\n  hourlyDistribution: {\n    hour: number;\n    orders: number;\n    revenue: number;\n  }[];\n}\n\n// Action types for order management\nexport type OrderAction = \n  | { type: 'UPDATE_STATUS'; orderId: string; status: OrderStatus }\n  | { type: 'UPDATE_PAYMENT'; orderId: string; paymentStatus: PaymentStatus; paymentDetails?: PaymentDetails }\n  | { type: 'ADD_ITEM'; orderId: string; item: Omit<OrderItem, 'id'> }\n  | { type: 'REMOVE_ITEM'; orderId: string; itemId: string }\n  | { type: 'UPDATE_ITEM'; orderId: string; itemId: string; updates: Partial<OrderItem> }\n  | { type: 'ASSIGN_STAFF'; orderId: string; staff: StaffMember }\n  | { type: 'REMOVE_STAFF'; orderId: string; staffId: string }\n  | { type: 'UPDATE_DELIVERY'; orderId: string; deliveryInfo: Partial<DeliveryInfo> }\n  | { type: 'ADD_TIMELINE_EVENT'; orderId: string; event: Omit<OrderTimelineEvent, 'id' | 'timestamp'> }\n  | { type: 'PROCESS_REFUND'; orderId: string; refundRequest: RefundRequest }\n  | { type: 'CANCEL_ORDER'; orderId: string; reason: string };"],"names":[],"mappings":"AAAA,yBAAyB;;;;;;;;;;;AAElB,IAAA,AAAK,qCAAA;;;;;;;;;WAAA;;AAWL,IAAA,AAAK,mCAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,uCAAA;;;;;;;WAAA;;AASL,IAAA,AAAK,uCAAA;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/orders/data.ts"],"sourcesContent":["// Order data layer with mock data\nimport {\n  Order,\n  OrderStatus,\n  OrderType,\n  PaymentStatus,\n  PaymentMethod,\n  OrderFilters,\n  OrderStats,\n  OrderListItem,\n  CreateOrder,\n  OrderUpdate,\n  RefundRequest,\n  OrderSummary,\n  OrderTimelineEvent\n} from './types';\n\n// Mock data generation\nconst generateMockOrders = (count: number = 100): Order[] => {\n  const orders: Order[] = [];\n  const now = new Date();\n  \n  const customerNames = [\n    'John Smith', 'Emma Johnson', 'Michael Brown', 'Sarah Davis',\n    'Robert Wilson', 'Lisa Anderson', 'David Martinez', 'Jennifer Taylor',\n    'Chris Lee', 'Amanda White', 'James Harris', 'Maria Garcia'\n  ];\n  \n  const menuItems = [\n    { id: 'item-1', name: 'Classic Burger', price: 12.99, station: 'grill' },\n    { id: 'item-2', name: 'Caesar Salad', price: 9.99, station: 'cold' },\n    { id: 'item-3', name: 'Margherita Pizza', price: 14.99, station: 'oven' },\n    { id: 'item-4', name: 'Grilled Salmon', price: 22.99, station: 'grill' },\n    { id: 'item-5', name: 'Chicken Alfredo', price: 16.99, station: 'saute' },\n    { id: 'item-6', name: 'Ribeye Steak', price: 32.99, station: 'grill' },\n    { id: 'item-7', name: 'Fish Tacos', price: 13.99, station: 'fryer' },\n    { id: 'item-8', name: 'Veggie Wrap', price: 10.99, station: 'cold' }\n  ];\n\n  const statuses = Object.values(OrderStatus);\n  const types = Object.values(OrderType);\n  const paymentMethods = Object.values(PaymentMethod);\n  \n  for (let i = 0; i < count; i++) {\n    const createdAt = new Date(now.getTime() - Math.random() * 7 * 24 * 60 * 60 * 1000);\n    const status = statuses[Math.floor(Math.random() * statuses.length)];\n    const type = types[Math.floor(Math.random() * types.length)];\n    const customerName = customerNames[Math.floor(Math.random() * customerNames.length)];\n    \n    // Generate items\n    const itemCount = Math.floor(Math.random() * 4) + 1;\n    const items = [];\n    let subtotal = 0;\n    \n    for (let j = 0; j < itemCount; j++) {\n      const menuItem = menuItems[Math.floor(Math.random() * menuItems.length)];\n      const quantity = Math.floor(Math.random() * 3) + 1;\n      const totalPrice = menuItem.price * quantity;\n      subtotal += totalPrice;\n      \n      items.push({\n        id: `order-item-${i}-${j}`,\n        menuItemId: menuItem.id,\n        menuItemName: menuItem.name,\n        quantity,\n        unitPrice: menuItem.price,\n        totalPrice,\n        modifiers: [],\n        status: status === OrderStatus.COMPLETED ? 'served' as const : \n                status === OrderStatus.READY ? 'ready' as const :\n                status === OrderStatus.PREPARING ? 'preparing' as const : \n                'pending' as const,\n        prepTime: Math.floor(Math.random() * 20) + 10,\n        station: menuItem.station\n      });\n    }\n    \n    const tax = subtotal * 0.08;\n    const tip = type === OrderType.DINE_IN ? subtotal * (Math.random() * 0.1 + 0.15) : 0;\n    const discount = Math.random() > 0.8 ? subtotal * 0.1 : 0;\n    const total = subtotal + tax + tip - discount;\n    \n    // Generate timeline\n    const timeline: OrderTimelineEvent[] = [\n      {\n        id: `timeline-${i}-1`,\n        timestamp: createdAt.toISOString(),\n        event: 'Order Created',\n        description: `Order #${1000 + i} created`,\n        user: 'System'\n      }\n    ];\n    \n    if (status !== OrderStatus.PENDING) {\n      timeline.push({\n        id: `timeline-${i}-2`,\n        timestamp: new Date(createdAt.getTime() + 60000).toISOString(),\n        event: 'Order Confirmed',\n        description: 'Order confirmed by kitchen',\n        user: 'Kitchen Staff'\n      });\n    }\n    \n    if ([OrderStatus.PREPARING, OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status)) {\n      timeline.push({\n        id: `timeline-${i}-3`,\n        timestamp: new Date(createdAt.getTime() + 120000).toISOString(),\n        event: 'Preparation Started',\n        description: 'Kitchen started preparing order',\n        user: 'Chef Mike'\n      });\n    }\n    \n    if ([OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status)) {\n      timeline.push({\n        id: `timeline-${i}-4`,\n        timestamp: new Date(createdAt.getTime() + 900000).toISOString(),\n        event: 'Order Ready',\n        description: 'Order ready for pickup/delivery',\n        user: 'Chef Mike'\n      });\n    }\n    \n    orders.push({\n      id: `order-${i}`,\n      orderNumber: `#${1000 + i}`,\n      status,\n      type,\n      customerId: `customer-${Math.floor(Math.random() * 50)}`,\n      customerName,\n      customerPhone: `555-${String(Math.floor(Math.random() * 10000)).padStart(4, '0')}`,\n      customerEmail: `${customerName.toLowerCase().replace(' ', '.')}@email.com`,\n      tableNumber: type === OrderType.DINE_IN ? `T${Math.floor(Math.random() * 20) + 1}` : undefined,\n      items,\n      subtotal,\n      tax,\n      tip,\n      discount,\n      total,\n      paymentStatus: status === OrderStatus.COMPLETED || status === OrderStatus.DELIVERED ? \n        PaymentStatus.COMPLETED : \n        status === OrderStatus.CANCELLED ? PaymentStatus.FAILED :\n        status === OrderStatus.REFUNDED ? PaymentStatus.REFUNDED :\n        PaymentStatus.PENDING,\n      paymentMethod: paymentMethods[Math.floor(Math.random() * paymentMethods.length)],\n      paymentDetails: status === OrderStatus.COMPLETED || status === OrderStatus.DELIVERED ? {\n        transactionId: `txn-${Date.now()}-${i}`,\n        lastFourDigits: String(Math.floor(Math.random() * 10000)).padStart(4, '0'),\n        cardBrand: 'Visa',\n        authorizationCode: `AUTH${Math.floor(Math.random() * 1000000)}`,\n        amount: total,\n        tip: tip\n      } : undefined,\n      notes: Math.random() > 0.7 ? 'No onions please' : undefined,\n      createdAt: createdAt.toISOString(),\n      updatedAt: new Date(createdAt.getTime() + Math.random() * 3600000).toISOString(),\n      confirmedAt: status !== OrderStatus.PENDING ? \n        new Date(createdAt.getTime() + 60000).toISOString() : undefined,\n      prepStartedAt: [OrderStatus.PREPARING, OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 120000).toISOString() : undefined,\n      readyAt: [OrderStatus.READY, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 900000).toISOString() : undefined,\n      completedAt: [OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(status) ?\n        new Date(createdAt.getTime() + 1200000).toISOString() : undefined,\n      deliveredAt: status === OrderStatus.DELIVERED ?\n        new Date(createdAt.getTime() + 2400000).toISOString() : undefined,\n      cancelledAt: status === OrderStatus.CANCELLED ?\n        new Date(createdAt.getTime() + 300000).toISOString() : undefined,\n      refundedAt: status === OrderStatus.REFUNDED ?\n        new Date(createdAt.getTime() + 86400000).toISOString() : undefined,\n      estimatedReadyTime: status === OrderStatus.PREPARING ?\n        new Date(Date.now() + 900000).toISOString() : undefined,\n      assignedStaff: type === OrderType.DINE_IN ? [{\n        id: `staff-${Math.floor(Math.random() * 10)}`,\n        name: ['Alice', 'Bob', 'Carol', 'Dave'][Math.floor(Math.random() * 4)],\n        role: 'server' as const,\n        assignedAt: createdAt.toISOString()\n      }] : undefined,\n      deliveryInfo: type === OrderType.DELIVERY ? {\n        address: `${Math.floor(Math.random() * 9999) + 1} Main St`,\n        city: 'San Francisco',\n        state: 'CA',\n        zipCode: '94101',\n        instructions: 'Leave at door',\n        driverId: `driver-${Math.floor(Math.random() * 5)}`,\n        driverName: ['Tom', 'Jerry', 'Mike'][Math.floor(Math.random() * 3)],\n        estimatedDeliveryTime: new Date(createdAt.getTime() + 2400000).toISOString(),\n        actualDeliveryTime: status === OrderStatus.DELIVERED ?\n          new Date(createdAt.getTime() + 2400000).toISOString() : undefined,\n        deliveryFee: 4.99,\n        distance: Math.random() * 5 + 1\n      } : undefined,\n      timeline,\n      posOrderId: `pos-${Date.now()}-${i}`,\n      source: ['pos', 'online', 'phone', 'kiosk'][Math.floor(Math.random() * 4)] as any,\n      thirdPartyProvider: Math.random() > 0.7 ? 'DoorDash' : undefined\n    });\n  }\n  \n  return orders;\n};\n\n// Cache for mock data\nlet cachedOrders: Order[] | null = null;\n\n// API Functions\nexport async function getOrders(filters?: OrderFilters): Promise<Order[]> {\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  let filtered = [...cachedOrders];\n  \n  if (filters) {\n    if (filters.status?.length) {\n      filtered = filtered.filter(o => filters.status!.includes(o.status));\n    }\n    if (filters.type?.length) {\n      filtered = filtered.filter(o => filters.type!.includes(o.type));\n    }\n    if (filters.paymentStatus?.length) {\n      filtered = filtered.filter(o => filters.paymentStatus!.includes(o.paymentStatus));\n    }\n    if (filters.dateRange) {\n      const start = new Date(filters.dateRange.start);\n      const end = new Date(filters.dateRange.end);\n      filtered = filtered.filter(o => {\n        const orderDate = new Date(o.createdAt);\n        return orderDate >= start && orderDate <= end;\n      });\n    }\n    if (filters.customerId) {\n      filtered = filtered.filter(o => o.customerId === filters.customerId);\n    }\n    if (filters.tableNumber) {\n      filtered = filtered.filter(o => o.tableNumber === filters.tableNumber);\n    }\n    if (filters.searchTerm) {\n      const term = filters.searchTerm.toLowerCase();\n      filtered = filtered.filter(o => \n        o.orderNumber.toLowerCase().includes(term) ||\n        o.customerName?.toLowerCase().includes(term) ||\n        o.customerEmail?.toLowerCase().includes(term) ||\n        o.customerPhone?.includes(term)\n      );\n    }\n    if (filters.minAmount !== undefined) {\n      filtered = filtered.filter(o => o.total >= filters.minAmount!);\n    }\n    if (filters.maxAmount !== undefined) {\n      filtered = filtered.filter(o => o.total <= filters.maxAmount!);\n    }\n  }\n  \n  // Sort by creation date, newest first\n  filtered.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime());\n  \n  return filtered;\n}\n\nexport async function getOrder(id: string): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  return cachedOrders.find(o => o.id === id) || null;\n}\n\nexport async function getOrderListItems(filters?: OrderFilters): Promise<OrderListItem[]> {\n  const orders = await getOrders(filters);\n  \n  return orders.map(order => ({\n    id: order.id,\n    orderNumber: order.orderNumber,\n    status: order.status,\n    type: order.type,\n    customerName: order.customerName,\n    tableNumber: order.tableNumber,\n    total: order.total,\n    itemCount: order.items.reduce((sum, item) => sum + item.quantity, 0),\n    createdAt: order.createdAt,\n    estimatedReadyTime: order.estimatedReadyTime,\n    paymentStatus: order.paymentStatus,\n    source: order.source\n  }));\n}\n\nexport async function getOrderStats(dateRange?: { start: string; end: string }): Promise<OrderStats> {\n  const orders = await getOrders(dateRange ? { dateRange } : undefined);\n  \n  const now = new Date();\n  const todayStart = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n  const todayOrders = orders.filter(o => new Date(o.createdAt) >= todayStart);\n  \n  // Calculate peak hours\n  const hourCounts: Record<number, number> = {};\n  orders.forEach(order => {\n    const hour = new Date(order.createdAt).getHours();\n    hourCounts[hour] = (hourCounts[hour] || 0) + 1;\n  });\n  \n  const peakHours = Object.entries(hourCounts)\n    .map(([hour, count]) => ({ hour: parseInt(hour), orders: count }))\n    .sort((a, b) => b.orders - a.orders)\n    .slice(0, 5);\n  \n  // Calculate stats by status\n  const ordersByStatus = {} as Record<OrderStatus, number>;\n  Object.values(OrderStatus).forEach(status => {\n    ordersByStatus[status] = orders.filter(o => o.status === status).length;\n  });\n  \n  // Calculate stats by type\n  const ordersByType = {} as Record<OrderType, number>;\n  Object.values(OrderType).forEach(type => {\n    ordersByType[type] = orders.filter(o => o.type === type).length;\n  });\n  \n  const totalRevenue = orders.reduce((sum, o) => sum + o.total, 0);\n  const todayRevenue = todayOrders.reduce((sum, o) => sum + o.total, 0);\n  const refundedAmount = orders\n    .filter(o => o.status === OrderStatus.REFUNDED)\n    .reduce((sum, o) => sum + o.total, 0);\n  \n  const completedOrders = orders.filter(o => \n    [OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(o.status)\n  );\n  \n  const averagePrepTime = completedOrders.length > 0 ?\n    completedOrders.reduce((sum, o) => {\n      if (o.prepStartedAt && o.readyAt) {\n        return sum + (new Date(o.readyAt).getTime() - new Date(o.prepStartedAt).getTime());\n      }\n      return sum;\n    }, 0) / completedOrders.length / 60000 : 0; // Convert to minutes\n  \n  return {\n    totalOrders: orders.length,\n    totalRevenue,\n    averageOrderValue: orders.length > 0 ? totalRevenue / orders.length : 0,\n    ordersByStatus,\n    ordersByType,\n    todayOrders: todayOrders.length,\n    todayRevenue,\n    pendingOrders: ordersByStatus[OrderStatus.PENDING] || 0,\n    preparingOrders: ordersByStatus[OrderStatus.PREPARING] || 0,\n    readyOrders: ordersByStatus[OrderStatus.READY] || 0,\n    completedOrders: ordersByStatus[OrderStatus.COMPLETED] || 0,\n    cancelledOrders: ordersByStatus[OrderStatus.CANCELLED] || 0,\n    refundedAmount,\n    averagePrepTime,\n    peakHours\n  };\n}\n\nexport async function createOrder(data: CreateOrder): Promise<Order> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  const newOrder: Order = {\n    id: `order-${Date.now()}`,\n    orderNumber: `#${1000 + cachedOrders.length}`,\n    status: OrderStatus.PENDING,\n    type: data.type,\n    customerId: data.customerId,\n    customerName: data.customerName,\n    customerPhone: data.customerPhone,\n    customerEmail: data.customerEmail,\n    tableNumber: data.tableNumber,\n    items: data.items.map((item, index) => ({\n      id: `item-${Date.now()}-${index}`,\n      menuItemId: item.menuItemId,\n      menuItemName: `Item ${item.menuItemId}`, // Would be looked up from menu\n      quantity: item.quantity,\n      unitPrice: 15.99, // Would be looked up from menu\n      totalPrice: 15.99 * item.quantity,\n      modifiers: [],\n      specialInstructions: item.specialInstructions,\n      status: 'pending' as const,\n      prepTime: 15,\n      station: 'grill'\n    })),\n    subtotal: 0, // Calculate from items\n    tax: 0,\n    tip: 0,\n    discount: 0,\n    total: 0,\n    paymentStatus: PaymentStatus.PENDING,\n    paymentMethod: data.paymentMethod,\n    notes: data.notes,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n    timeline: [{\n      id: `timeline-${Date.now()}`,\n      timestamp: new Date().toISOString(),\n      event: 'Order Created',\n      description: 'New order created',\n      user: 'System'\n    }],\n    source: 'pos',\n    deliveryInfo: data.deliveryInfo as any\n  };\n  \n  // Calculate totals\n  newOrder.subtotal = newOrder.items.reduce((sum, item) => sum + item.totalPrice, 0);\n  newOrder.tax = newOrder.subtotal * 0.08;\n  newOrder.total = newOrder.subtotal + newOrder.tax;\n  \n  cachedOrders.unshift(newOrder);\n  return newOrder;\n}\n\nexport async function updateOrder(id: string, updates: OrderUpdate): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 300));\n  \n  if (!cachedOrders) {\n    cachedOrders = generateMockOrders(100);\n  }\n  \n  const orderIndex = cachedOrders.findIndex(o => o.id === id);\n  if (orderIndex === -1) return null;\n  \n  const order = { ...cachedOrders[orderIndex] };\n  \n  if (updates.status) {\n    order.status = updates.status;\n    order.timeline.push({\n      id: `timeline-${Date.now()}`,\n      timestamp: new Date().toISOString(),\n      event: 'Status Updated',\n      description: `Order status changed to ${updates.status}`,\n      user: 'Staff'\n    });\n  }\n  \n  if (updates.paymentStatus) {\n    order.paymentStatus = updates.paymentStatus;\n  }\n  \n  if (updates.notes !== undefined) {\n    order.notes = updates.notes;\n  }\n  \n  if (updates.estimatedReadyTime) {\n    order.estimatedReadyTime = updates.estimatedReadyTime;\n  }\n  \n  order.updatedAt = new Date().toISOString();\n  cachedOrders[orderIndex] = order;\n  \n  return order;\n}\n\nexport async function cancelOrder(id: string, reason: string): Promise<Order | null> {\n  return updateOrder(id, {\n    status: OrderStatus.CANCELLED,\n    notes: reason\n  });\n}\n\nexport async function processRefund(orderId: string, request: RefundRequest): Promise<Order | null> {\n  await new Promise(resolve => setTimeout(resolve, 500));\n  \n  const order = await getOrder(orderId);\n  if (!order) return null;\n  \n  return updateOrder(orderId, {\n    status: OrderStatus.REFUNDED,\n    paymentStatus: PaymentStatus.REFUNDED,\n    notes: `Refund processed: ${request.reason}`\n  });\n}\n\nexport async function getOrderSummary(date: string): Promise<OrderSummary> {\n  const startDate = new Date(date);\n  startDate.setHours(0, 0, 0, 0);\n  const endDate = new Date(date);\n  endDate.setHours(23, 59, 59, 999);\n  \n  const orders = await getOrders({\n    dateRange: {\n      start: startDate.toISOString(),\n      end: endDate.toISOString()\n    }\n  });\n  \n  // Calculate top items\n  const itemCounts: Record<string, { name: string; quantity: number; revenue: number }> = {};\n  orders.forEach(order => {\n    order.items.forEach(item => {\n      if (!itemCounts[item.menuItemId]) {\n        itemCounts[item.menuItemId] = {\n          name: item.menuItemName,\n          quantity: 0,\n          revenue: 0\n        };\n      }\n      itemCounts[item.menuItemId].quantity += item.quantity;\n      itemCounts[item.menuItemId].revenue += item.totalPrice;\n    });\n  });\n  \n  const topItems = Object.entries(itemCounts)\n    .map(([id, data]) => ({\n      itemId: id,\n      itemName: data.name,\n      quantity: data.quantity,\n      revenue: data.revenue\n    }))\n    .sort((a, b) => b.revenue - a.revenue)\n    .slice(0, 10);\n  \n  // Calculate hourly distribution\n  const hourlyData: Record<number, { orders: number; revenue: number }> = {};\n  for (let hour = 0; hour < 24; hour++) {\n    hourlyData[hour] = { orders: 0, revenue: 0 };\n  }\n  \n  orders.forEach(order => {\n    const hour = new Date(order.createdAt).getHours();\n    hourlyData[hour].orders++;\n    hourlyData[hour].revenue += order.total;\n  });\n  \n  const hourlyDistribution = Object.entries(hourlyData)\n    .map(([hour, data]) => ({\n      hour: parseInt(hour),\n      orders: data.orders,\n      revenue: data.revenue\n    }));\n  \n  const totalRevenue = orders.reduce((sum, o) => sum + o.total, 0);\n  \n  return {\n    date,\n    orderCount: orders.length,\n    revenue: totalRevenue,\n    averageOrderValue: orders.length > 0 ? totalRevenue / orders.length : 0,\n    topItems,\n    hourlyDistribution\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 643, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Utility function to merge class names with tailwind-merge\n * Combines clsx and tailwind-merge for optimal class name handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Create a variant utility for component styling\n * Used to define consistent styling patterns across components\n */\nexport type VariantProps<T> = {\n  [K in keyof T]: keyof T[K];\n};\n\n/**\n * Focus ring utility classes for accessibility\n */\nexport const focusRing = 'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2';\n\n/**\n * Disabled state utility classes\n */\nexport const disabledStyles = 'disabled:pointer-events-none disabled:opacity-50';\n\n/**\n * Animation utility classes\n */\nexport const transitions = {\n  fast: 'transition-fast',\n  base: 'transition-base',\n  slow: 'transition-slow',\n} as const;"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;;;AAMO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB;AAaO,MAAM,YAAY;AAKlB,MAAM,iBAAiB;AAKvB,MAAM,cAAc;IACzB,MAAM;IACN,MAAM;IACN,MAAM;AACR","debugId":null}},
    {"offset": {"line": 677, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'outlined' | 'elevated';\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', padding = 'md', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg bg-card text-card-foreground',\n          {\n            'border border-border': variant === 'default' || variant === 'outlined',\n            'shadow-sm': variant === 'default',\n            'shadow-md': variant === 'elevated',\n            'p-0': padding === 'none',\n            'p-4': padding === 'sm',\n            'p-6': padding === 'md',\n            'p-8': padding === 'lg',\n          },\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\nCard.displayName = 'Card';\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n}\n\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, divider = false, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex flex-col space-y-1.5 p-6',\n        divider && 'border-b border-border',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, padding = 'md', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        {\n          'p-0': padding === 'none',\n          'p-4': padding === 'sm',\n          'p-6': padding === 'md',\n          'p-8': padding === 'lg',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardContent.displayName = 'CardContent';\n\nexport interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n  justify?: 'start' | 'center' | 'end' | 'between';\n}\n\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, divider = false, justify = 'start', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex items-center p-6 pt-0',\n        {\n          'border-t border-border pt-6': divider,\n          'justify-start': justify === 'start',\n          'justify-center': justify === 'center',\n          'justify-end': justify === 'end',\n          'justify-between': justify === 'between',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = 'CardFooter';\n\n// Specialized card variants for common use cases\nexport interface ActionCardProps extends CardProps {\n  title: string;\n  description?: string;\n  action: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\nfunction ActionCard({\n  title,\n  description,\n  action,\n  icon,\n  className,\n  ...props\n}: ActionCardProps) {\n  return (\n    <Card className={cn('transition-all hover:shadow-md', className)} {...props}>\n      <CardHeader>\n        <div className=\"flex items-center space-x-4\">\n          {icon && (\n            <div className=\"flex-shrink-0 p-2 rounded-lg bg-primary/10 text-primary\">\n              {icon}\n            </div>\n          )}\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg\">{title}</CardTitle>\n            {description && (\n              <CardDescription>{description}</CardDescription>\n            )}\n          </div>\n          <div className=\"flex-shrink-0\">{action}</div>\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nexport interface MetricCardProps extends CardProps {\n  label: string;\n  value: string | number;\n  change?: {\n    value: number;\n    type: 'increase' | 'decrease';\n    period?: string;\n  };\n  icon?: React.ReactNode;\n  loading?: boolean;\n}\n\nfunction MetricCard({\n  label,\n  value,\n  change,\n  icon,\n  loading = false,\n  className,\n  ...props\n}: MetricCardProps) {\n  return (\n    <Card className={className} {...props}>\n      <CardContent>\n        <div className=\"flex items-center justify-between space-y-0 pb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{label}</p>\n          {icon && <div className=\"text-muted-foreground\">{icon}</div>}\n        </div>\n        <div>\n          {loading ? (\n            <div className=\"h-8 w-24 bg-muted rounded animate-pulse\" />\n          ) : (\n            <div className=\"text-2xl font-bold\">{value}</div>\n          )}\n          {change && !loading && (\n            <p\n              className={cn(\n                'text-xs',\n                change.type === 'increase'\n                  ? 'text-green-600'\n                  : 'text-destructive'\n              )}\n            >\n              {change.type === 'increase' ? '+' : '-'}\n              {Math.abs(change.value)}%\n              {change.period && ` from ${change.period}`}\n            </p>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  ActionCard,\n  MetricCard,\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 969, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Slot } from '@radix-ui/react-slot';\nimport { cn, focusRing, disabledStyles } from './utils';\nimport { Loader2 } from 'lucide-react';\n\nconst buttonVariants = {\n  variant: {\n    primary: 'bg-primary text-primary-foreground hover:bg-primary/90',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    danger: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n    ghost: 'hover:bg-accent hover:text-accent-foreground',\n    outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n    link: 'text-primary underline-offset-4 hover:underline',\n  },\n  size: {\n    sm: 'h-9 rounded-md px-3 text-sm',\n    md: 'h-10 px-4 py-2',\n    lg: 'h-11 rounded-md px-8 text-base',\n    icon: 'h-10 w-10',\n  },\n} as const;\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: keyof typeof buttonVariants.variant;\n  size?: keyof typeof buttonVariants.size;\n  asChild?: boolean;\n  loading?: boolean;\n  loadingText?: string;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant = 'primary',\n      size = 'md',\n      asChild = false,\n      loading = false,\n      loadingText,\n      disabled,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : 'button';\n    \n    const buttonClasses = cn(\n      // Base styles\n      'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium',\n      'ring-offset-background transition-colors',\n      focusRing,\n      disabledStyles,\n      // Variant styles\n      buttonVariants.variant[variant],\n      // Size styles  \n      buttonVariants.size[size],\n      className\n    );\n\n    const isDisabled = disabled || loading;\n\n    return (\n      <Comp\n        className={buttonClasses}\n        ref={ref}\n        disabled={isDisabled}\n        {...props}\n      >\n        {loading && (\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n        )}\n        {loading && loadingText ? loadingText : children}\n      </Comp>\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport { Button, buttonVariants };"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,iBAAiB;IACrB,SAAS;QACP,SAAS;QACT,WAAW;QACX,QAAQ;QACR,OAAO;QACP,SAAS;QACT,MAAM;IACR;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;AACF;AAWA,MAAM,uBAAS,2KAAgB,MAC7B,QAYE;QAXA,EACE,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,UAAU,KAAK,EACf,UAAU,KAAK,EACf,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,GAAG,OACJ;IAGD,MAAM,OAAO,UAAU,2KAAI,GAAG;IAE9B,MAAM,gBAAgB,IAAA,kIAAE,EACtB,cAAc;IACd,4FACA,4CACA,yIAAS,EACT,8IAAc,EACd,iBAAiB;IACjB,eAAe,OAAO,CAAC,QAAQ,EAC/B,gBAAgB;IAChB,eAAe,IAAI,CAAC,KAAK,EACzB;IAGF,MAAM,aAAa,YAAY;IAE/B,qBACE,6LAAC;QACC,WAAW;QACX,KAAK;QACL,UAAU;QACT,GAAG,KAAK;;YAER,yBACC,6LAAC,yLAAO;gBAAC,WAAU;;;;;;YAEpB,WAAW,cAAc,cAAc;;;;;;;AAG9C;;AAGF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1043, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nconst badgeVariants = {\n  variant: {\n    default: 'bg-primary text-primary-foreground hover:bg-primary/80',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    success: 'bg-green-500 text-white hover:bg-green-600',\n    warning: 'bg-yellow-500 text-white hover:bg-yellow-600',\n    error: 'bg-destructive text-destructive-foreground hover:bg-destructive/80',\n    outline: 'border border-input bg-background text-foreground hover:bg-accent',\n    ghost: 'text-foreground hover:bg-accent',\n  },\n  size: {\n    sm: 'px-2 py-0.5 text-xs',\n    md: 'px-2.5 py-0.5 text-sm',\n    lg: 'px-3 py-1 text-sm',\n  },\n} as const;\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: keyof typeof badgeVariants.variant;\n  size?: keyof typeof badgeVariants.size;\n  pulse?: boolean;\n}\n\nfunction Badge({\n  className,\n  variant = 'default',\n  size = 'md',\n  pulse = false,\n  children,\n  ...props\n}: BadgeProps) {\n  return (\n    <div\n      className={cn(\n        // Base styles\n        'inline-flex items-center rounded-full font-semibold transition-colors',\n        'focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n        // Variant and size styles\n        badgeVariants.variant[variant],\n        badgeVariants.size[size],\n        // Pulse animation\n        pulse && 'animate-pulse',\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n}\n\n// Status-specific badge components for common use cases\nexport function StatusBadge({ \n  status, \n  className, \n  ...props \n}: { status: 'online' | 'busy' | 'offline' | 'pending' | 'completed' | 'cancelled' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    online: 'success' as const,\n    completed: 'success' as const,\n    busy: 'warning' as const,\n    pending: 'warning' as const,\n    offline: 'secondary' as const,\n    cancelled: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[status]} \n      className={cn('capitalize', className)} \n      {...props}\n    >\n      <div className=\"mr-1 h-2 w-2 rounded-full bg-current opacity-75\" />\n      {status}\n    </Badge>\n  );\n}\n\n// Priority badge for orders, tasks, etc.\nexport function PriorityBadge({ \n  priority, \n  className, \n  ...props \n}: { priority: 'low' | 'medium' | 'high' | 'urgent' } & Omit<BadgeProps, 'variant'>) {\n  const variantMap = {\n    low: 'secondary' as const,\n    medium: 'default' as const,\n    high: 'warning' as const,\n    urgent: 'error' as const,\n  };\n\n  return (\n    <Badge \n      variant={variantMap[priority]} \n      className={cn('capitalize', className)}\n      pulse={priority === 'urgent'}\n      {...props}\n    >\n      {priority}\n    </Badge>\n  );\n}\n\nexport { Badge, badgeVariants };"],"names":[],"mappings":";;;;;;;;;;;AACA;;;AAEA,MAAM,gBAAgB;IACpB,SAAS;QACP,SAAS;QACT,WAAW;QACX,SAAS;QACT,SAAS;QACT,OAAO;QACP,SAAS;QACT,OAAO;IACT;IACA,MAAM;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;AACF;AASA,SAAS,MAAM,KAOF;QAPE,EACb,SAAS,EACT,UAAU,SAAS,EACnB,OAAO,IAAI,EACX,QAAQ,KAAK,EACb,QAAQ,EACR,GAAG,OACQ,GAPE;IAQb,qBACE,6LAAC;QACC,WAAW,IAAA,kIAAE,EACX,cAAc;QACd,yEACA,uEACA,0BAA0B;QAC1B,cAAc,OAAO,CAAC,QAAQ,EAC9B,cAAc,IAAI,CAAC,KAAK,EACxB,kBAAkB;QAClB,SAAS,iBACT;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;KA1BS;AA6BF,SAAS,YAAY,KAIsF;QAJtF,EAC1B,MAAM,EACN,SAAS,EACT,GAAG,OAC6G,GAJtF;IAK1B,MAAM,aAAa;QACjB,QAAQ;QACR,WAAW;QACX,MAAM;QACN,SAAS;QACT,SAAS;QACT,WAAW;IACb;IAEA,qBACE,6LAAC;QACC,SAAS,UAAU,CAAC,OAAO;QAC3B,WAAW,IAAA,kIAAE,EAAC,cAAc;QAC3B,GAAG,KAAK;;0BAET,6LAAC;gBAAI,WAAU;;;;;;YACd;;;;;;;AAGP;MAxBgB;AA2BT,SAAS,cAAc,KAIqD;QAJrD,EAC5B,QAAQ,EACR,SAAS,EACT,GAAG,OAC8E,GAJrD;IAK5B,MAAM,aAAa;QACjB,KAAK;QACL,QAAQ;QACR,MAAM;QACN,QAAQ;IACV;IAEA,qBACE,6LAAC;QACC,SAAS,UAAU,CAAC,SAAS;QAC7B,WAAW,IAAA,kIAAE,EAAC,cAAc;QAC5B,OAAO,aAAa;QACnB,GAAG,KAAK;kBAER;;;;;;AAGP;MAtBgB","debugId":null}},
    {"offset": {"line": 1153, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Tab, TabGroup, TabList, TabPanel, TabPanels } from '@headlessui/react';\nimport { cn } from './utils';\n\nexport interface TabItem {\n  key: string;\n  label: string;\n  content: React.ReactNode;\n  disabled?: boolean;\n  badge?: string | number;\n  icon?: React.ReactNode;\n}\n\nexport interface TabsProps {\n  items: TabItem[];\n  defaultTab?: string;\n  selectedTab?: string;\n  onTabChange?: (tabKey: string) => void;\n  variant?: 'default' | 'pills' | 'underline' | 'minimal';\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n  tabListClassName?: string;\n  tabPanelClassName?: string;\n  orientation?: 'horizontal' | 'vertical';\n}\n\nfunction Tabs({\n  items,\n  defaultTab,\n  selectedTab,\n  onTabChange,\n  variant = 'default',\n  size = 'md',\n  className,\n  tabListClassName,\n  tabPanelClassName,\n  orientation = 'horizontal',\n}: TabsProps) {\n  const [internalSelectedIndex, setInternalSelectedIndex] = React.useState(() => {\n    const initialTab = selectedTab || defaultTab || items[0]?.key;\n    return items.findIndex(item => item.key === initialTab) || 0;\n  });\n\n  const selectedIndex = React.useMemo(() => {\n    if (selectedTab) {\n      const index = items.findIndex(item => item.key === selectedTab);\n      return index >= 0 ? index : 0;\n    }\n    return internalSelectedIndex;\n  }, [selectedTab, items, internalSelectedIndex]);\n\n  const handleChange = (index: number) => {\n    const selectedItem = items[index];\n    if (selectedItem && !selectedItem.disabled) {\n      setInternalSelectedIndex(index);\n      onTabChange?.(selectedItem.key);\n    }\n  };\n\n  const getTabVariantClasses = (selected: boolean, disabled: boolean) => {\n    const baseClasses = cn(\n      'relative inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-all',\n      'focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n      {\n        'opacity-50 cursor-not-allowed': disabled,\n        'cursor-pointer': !disabled,\n      }\n    );\n\n    const sizeClasses = {\n      sm: 'px-3 py-1.5 text-xs',\n      md: 'px-4 py-2 text-sm',\n      lg: 'px-6 py-3 text-base',\n    };\n\n    const variantClasses = {\n      default: selected\n        ? 'bg-background text-foreground shadow-sm border border-border rounded-md'\n        : 'text-muted-foreground hover:text-foreground hover:bg-muted rounded-md',\n      pills: selected\n        ? 'bg-primary text-primary-foreground rounded-full'\n        : 'text-muted-foreground hover:text-foreground hover:bg-muted rounded-full',\n      underline: selected\n        ? 'text-foreground border-b-2 border-primary'\n        : 'text-muted-foreground hover:text-foreground border-b-2 border-transparent',\n      minimal: selected\n        ? 'text-primary'\n        : 'text-muted-foreground hover:text-foreground',\n    };\n\n    return cn(baseClasses, sizeClasses[size], variantClasses[variant]);\n  };\n\n  const getTabListClasses = () => {\n    const baseClasses = 'flex';\n    \n    const orientationClasses = {\n      horizontal: 'flex-row',\n      vertical: 'flex-col',\n    };\n\n    const variantClasses = {\n      default: 'bg-muted p-1 rounded-lg',\n      pills: 'space-x-1',\n      underline: 'border-b border-border',\n      minimal: 'space-x-6',\n    };\n\n    const spacingClasses = {\n      horizontal: {\n        default: '',\n        pills: 'space-x-1',\n        underline: 'space-x-6',\n        minimal: 'space-x-6',\n      },\n      vertical: {\n        default: '',\n        pills: 'space-y-1',\n        underline: 'space-y-2',\n        minimal: 'space-y-2',\n      },\n    };\n\n    return cn(\n      baseClasses,\n      orientationClasses[orientation],\n      variantClasses[variant],\n      spacingClasses[orientation][variant]\n    );\n  };\n\n  return (\n    <div className={cn('w-full', className)}>\n      <TabGroup\n        selectedIndex={selectedIndex}\n        onChange={handleChange}\n        vertical={orientation === 'vertical'}\n      >\n        <TabList className={cn(getTabListClasses(), tabListClassName)}>\n          {items.map((item, _index) => (\n            <Tab\n              key={item.key}\n              disabled={item.disabled}\n              className={({ selected }) =>\n                getTabVariantClasses(selected, !!item.disabled)\n              }\n            >\n              <div className=\"flex items-center space-x-2\">\n                {item.icon && (\n                  <span className=\"flex-shrink-0\">{item.icon}</span>\n                )}\n                <span>{item.label}</span>\n                {item.badge && (\n                  <span className=\"ml-2 bg-muted text-muted-foreground rounded-full px-2 py-0.5 text-xs font-medium\">\n                    {item.badge}\n                  </span>\n                )}\n              </div>\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels className={cn('mt-4', tabPanelClassName)}>\n          {items.map((item) => (\n            <TabPanel\n              key={item.key}\n              className=\"focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 rounded-md\"\n            >\n              {item.content}\n            </TabPanel>\n          ))}\n        </TabPanels>\n      </TabGroup>\n    </div>\n  );\n}\n\n// Simplified tabs component for basic use cases\nexport interface SimpleTabsProps {\n  tabs: {\n    label: string;\n    content: React.ReactNode;\n    disabled?: boolean;\n  }[];\n  defaultIndex?: number;\n  className?: string;\n}\n\nfunction SimpleTabs({ tabs, defaultIndex = 0, className }: SimpleTabsProps) {\n  const tabItems: TabItem[] = tabs.map((tab, index) => ({\n    key: index.toString(),\n    label: tab.label,\n    content: tab.content,\n    disabled: tab.disabled,\n  }));\n\n  return (\n    <Tabs\n      items={tabItems}\n      defaultTab={defaultIndex.toString()}\n      className={className}\n    />\n  );\n}\n\n// Controlled tabs component\nexport interface ControlledTabsProps {\n  tabs: TabItem[];\n  activeTab: string;\n  onTabChange: (tabKey: string) => void;\n  variant?: 'default' | 'pills' | 'underline' | 'minimal';\n  className?: string;\n}\n\nfunction ControlledTabs({\n  tabs,\n  activeTab,\n  onTabChange,\n  variant = 'default',\n  className,\n}: ControlledTabsProps) {\n  return (\n    <Tabs\n      items={tabs}\n      selectedTab={activeTab}\n      onTabChange={onTabChange}\n      variant={variant}\n      className={className}\n    />\n  );\n}\n\nexport { Tabs, SimpleTabs, ControlledTabs };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1382, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/app/orders/%5Bid%5D/order-detail-content.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { Order, OrderStatus, PaymentStatus } from '@/lib/orders/types';\nimport { updateOrder, cancelOrder, processRefund } from '@/lib/orders/data';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs } from '@/components/ui/tabs';\nimport { \n  Clock, \n  DollarSign, \n  User, \n  MapPin, \n  Phone,\n  Mail,\n  CreditCard,\n  Package,\n  ChefHat,\n  Truck,\n  CheckCircle,\n  XCircle,\n  AlertCircle,\n  Edit,\n  Printer,\n  RefreshCw,\n  MessageSquare,\n  Calendar,\n  Timer\n} from 'lucide-react';\n\ninterface OrderDetailContentProps {\n  order: Order;\n}\n\nexport function OrderDetailContent({ order: initialOrder }: OrderDetailContentProps) {\n  const router = useRouter();\n  const [order, setOrder] = useState(initialOrder);\n  const [updating, setUpdating] = useState(false);\n  const [showRefundModal, setShowRefundModal] = useState(false);\n  const [showNotes, setShowNotes] = useState(false);\n\n  // Status colors\n  const getStatusColor = (status: OrderStatus) => {\n    switch (status) {\n      case OrderStatus.PENDING: return 'yellow';\n      case OrderStatus.CONFIRMED: return 'blue';\n      case OrderStatus.PREPARING: return 'orange';\n      case OrderStatus.READY: return 'green';\n      case OrderStatus.COMPLETED: return 'gray';\n      case OrderStatus.DELIVERED: return 'green';\n      case OrderStatus.CANCELLED: return 'red';\n      case OrderStatus.REFUNDED: return 'purple';\n      default: return 'gray';\n    }\n  };\n\n  const getPaymentStatusColor = (status: PaymentStatus) => {\n    switch (status) {\n      case PaymentStatus.PENDING: return 'yellow';\n      case PaymentStatus.PROCESSING: return 'blue';\n      case PaymentStatus.COMPLETED: return 'green';\n      case PaymentStatus.FAILED: return 'red';\n      case PaymentStatus.REFUNDED: return 'purple';\n      case PaymentStatus.PARTIALLY_REFUNDED: return 'orange';\n      default: return 'gray';\n    }\n  };\n\n  // Update order status\n  const handleStatusUpdate = async (status: OrderStatus) => {\n    setUpdating(true);\n    try {\n      const updated = await updateOrder(order.id, { status });\n      if (updated) {\n        setOrder(updated);\n      }\n    } catch (error) {\n      console.error('Failed to update order:', error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  // Cancel order\n  const handleCancel = async () => {\n    if (!confirm('Are you sure you want to cancel this order?')) return;\n    \n    setUpdating(true);\n    try {\n      const updated = await cancelOrder(order.id, 'Cancelled by staff');\n      if (updated) {\n        setOrder(updated);\n      }\n    } catch (error) {\n      console.error('Failed to cancel order:', error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  // Process refund\n  const handleRefund = async (amount: number, reason: string) => {\n    setUpdating(true);\n    try {\n      const updated = await processRefund(order.id, {\n        orderId: order.id,\n        amount,\n        reason,\n        refundMethod: 'original',\n        notes: reason\n      });\n      if (updated) {\n        setOrder(updated);\n        setShowRefundModal(false);\n      }\n    } catch (error) {\n      console.error('Failed to process refund:', error);\n    } finally {\n      setUpdating(false);\n    }\n  };\n\n  // Calculate times\n  const getElapsedTime = (start: string, end?: string) => {\n    const startTime = new Date(start).getTime();\n    const endTime = end ? new Date(end).getTime() : Date.now();\n    const elapsed = Math.floor((endTime - startTime) / 60000); // minutes\n    \n    if (elapsed < 60) return `${elapsed}m`;\n    const hours = Math.floor(elapsed / 60);\n    const minutes = elapsed % 60;\n    return `${hours}h ${minutes}m`;\n  };\n\n  const tabs = [\n    { id: 'overview', label: 'Overview' },\n    { id: 'items', label: 'Items' },\n    { id: 'timeline', label: 'Timeline' },\n    { id: 'payment', label: 'Payment' },\n  ];\n\n  if (order.type === OrderType.DELIVERY) {\n    tabs.push({ id: 'delivery', label: 'Delivery' });\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Status Bar */}\n      <Card className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <Badge variant={getStatusColor(order.status) as any} className=\"text-lg px-3 py-1\">\n              {order.status.replace('_', ' ')}\n            </Badge>\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <Clock className=\"h-4 w-4\" />\n              <span>Created {getElapsedTime(order.createdAt)} ago</span>\n            </div>\n            {order.estimatedReadyTime && (\n              <div className=\"flex items-center gap-2 text-sm\">\n                <Timer className=\"h-4 w-4 text-orange-500\" />\n                <span>Est. ready in {getElapsedTime(new Date().toISOString(), order.estimatedReadyTime)}</span>\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            {order.status === OrderStatus.PENDING && (\n              <Button\n                size=\"sm\"\n                onClick={() => handleStatusUpdate(OrderStatus.CONFIRMED)}\n                disabled={updating}\n              >\n                Confirm Order\n              </Button>\n            )}\n            {order.status === OrderStatus.CONFIRMED && (\n              <Button\n                size=\"sm\"\n                onClick={() => handleStatusUpdate(OrderStatus.PREPARING)}\n                disabled={updating}\n              >\n                Start Preparing\n              </Button>\n            )}\n            {order.status === OrderStatus.PREPARING && (\n              <Button\n                size=\"sm\"\n                onClick={() => handleStatusUpdate(OrderStatus.READY)}\n                disabled={updating}\n              >\n                Mark Ready\n              </Button>\n            )}\n            {order.status === OrderStatus.READY && (\n              <Button\n                size=\"sm\"\n                onClick={() => handleStatusUpdate(\n                  order.type === OrderType.DELIVERY ? OrderStatus.DELIVERED : OrderStatus.COMPLETED\n                )}\n                disabled={updating}\n              >\n                {order.type === OrderType.DELIVERY ? 'Mark Delivered' : 'Complete Order'}\n              </Button>\n            )}\n            {![OrderStatus.CANCELLED, OrderStatus.REFUNDED, OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(order.status) && (\n              <Button\n                size=\"sm\"\n                variant=\"destructive\"\n                onClick={handleCancel}\n                disabled={updating}\n              >\n                Cancel\n              </Button>\n            )}\n            {[OrderStatus.COMPLETED, OrderStatus.DELIVERED].includes(order.status) && (\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={() => setShowRefundModal(true)}\n              >\n                Process Refund\n              </Button>\n            )}\n          </div>\n        </div>\n      </Card>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main Content */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          <Tabs defaultValue=\"overview\" tabs={tabs}>\n            {/* Overview Tab */}\n            <div value=\"overview\" className=\"space-y-6\">\n              {/* Customer Information */}\n              <Card>\n                <div className=\"p-4 border-b\">\n                  <h3 className=\"font-semibold\">Customer Information</h3>\n                </div>\n                <div className=\"p-4 space-y-3\">\n                  <div className=\"flex items-center gap-3\">\n                    <User className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>{order.customerName || 'Guest Customer'}</span>\n                  </div>\n                  {order.customerPhone && (\n                    <div className=\"flex items-center gap-3\">\n                      <Phone className=\"h-4 w-4 text-muted-foreground\" />\n                      <span>{order.customerPhone}</span>\n                    </div>\n                  )}\n                  {order.customerEmail && (\n                    <div className=\"flex items-center gap-3\">\n                      <Mail className=\"h-4 w-4 text-muted-foreground\" />\n                      <span>{order.customerEmail}</span>\n                    </div>\n                  )}\n                  {order.tableNumber && (\n                    <div className=\"flex items-center gap-3\">\n                      <MapPin className=\"h-4 w-4 text-muted-foreground\" />\n                      <span>Table {order.tableNumber}</span>\n                    </div>\n                  )}\n                </div>\n              </Card>\n\n              {/* Order Summary */}\n              <Card>\n                <div className=\"p-4 border-b\">\n                  <h3 className=\"font-semibold\">Order Summary</h3>\n                </div>\n                <div className=\"p-4 space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Subtotal</span>\n                    <span>${order.subtotal.toFixed(2)}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Tax</span>\n                    <span>${order.tax.toFixed(2)}</span>\n                  </div>\n                  {order.tip > 0 && (\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Tip</span>\n                      <span>${order.tip.toFixed(2)}</span>\n                    </div>\n                  )}\n                  {order.discount > 0 && (\n                    <div className=\"flex justify-between text-sm text-red-600\">\n                      <span>Discount</span>\n                      <span>-${order.discount.toFixed(2)}</span>\n                    </div>\n                  )}\n                  <div className=\"pt-2 border-t\">\n                    <div className=\"flex justify-between font-semibold\">\n                      <span>Total</span>\n                      <span>${order.total.toFixed(2)}</span>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </div>\n\n            {/* Items Tab */}\n            <div value=\"items\" className=\"space-y-4\">\n              <Card>\n                <div className=\"p-4 border-b\">\n                  <h3 className=\"font-semibold\">Order Items</h3>\n                </div>\n                <div className=\"divide-y\">\n                  {order.items.map((item) => (\n                    <div key={item.id} className=\"p-4\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"space-y-1\">\n                          <div className=\"flex items-center gap-2\">\n                            <span className=\"font-medium\">{item.quantity}x</span>\n                            <span>{item.menuItemName}</span>\n                          </div>\n                          {item.modifiers.length > 0 && (\n                            <div className=\"text-sm text-muted-foreground pl-8\">\n                              {item.modifiers.map(mod => (\n                                <div key={mod.id}>• {mod.name}</div>\n                              ))}\n                            </div>\n                          )}\n                          {item.specialInstructions && (\n                            <div className=\"text-sm text-muted-foreground pl-8 italic\">\n                              Note: {item.specialInstructions}\n                            </div>\n                          )}\n                          <div className=\"flex items-center gap-4 text-sm text-muted-foreground pl-8\">\n                            <span>Station: {item.station}</span>\n                            <span>Prep time: {item.prepTime}m</span>\n                            <Badge variant={\n                              item.status === 'served' ? 'default' :\n                              item.status === 'ready' ? 'success' :\n                              item.status === 'preparing' ? 'warning' :\n                              'secondary'\n                            } className=\"text-xs\">\n                              {item.status}\n                            </Badge>\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"font-medium\">${item.totalPrice.toFixed(2)}</div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            ${item.unitPrice.toFixed(2)} each\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </Card>\n            </div>\n\n            {/* Timeline Tab */}\n            <div value=\"timeline\" className=\"space-y-4\">\n              <Card>\n                <div className=\"p-4 border-b\">\n                  <h3 className=\"font-semibold\">Order Timeline</h3>\n                </div>\n                <div className=\"p-4\">\n                  <div className=\"relative\">\n                    <div className=\"absolute left-4 top-0 bottom-0 w-0.5 bg-border\"></div>\n                    {order.timeline.map((event, index) => (\n                      <div key={event.id} className=\"relative flex gap-4 pb-8 last:pb-0\">\n                        <div className=\"absolute left-4 -translate-x-1/2 w-2 h-2 bg-primary rounded-full\"></div>\n                        <div className=\"ml-8 flex-1\">\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <p className=\"font-medium\">{event.event}</p>\n                            <span className=\"text-sm text-muted-foreground\">\n                              {new Date(event.timestamp).toLocaleString()}\n                            </span>\n                          </div>\n                          <p className=\"text-sm text-muted-foreground\">{event.description}</p>\n                          {event.user && (\n                            <p className=\"text-sm text-muted-foreground mt-1\">by {event.user}</p>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </Card>\n            </div>\n\n            {/* Payment Tab */}\n            <div value=\"payment\" className=\"space-y-4\">\n              <Card>\n                <div className=\"p-4 border-b\">\n                  <h3 className=\"font-semibold\">Payment Information</h3>\n                </div>\n                <div className=\"p-4 space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-muted-foreground\">Status</span>\n                    <Badge variant={getPaymentStatusColor(order.paymentStatus) as any}>\n                      {order.paymentStatus.replace('_', ' ')}\n                    </Badge>\n                  </div>\n                  {order.paymentMethod && (\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-muted-foreground\">Method</span>\n                      <span className=\"flex items-center gap-2\">\n                        <CreditCard className=\"h-4 w-4\" />\n                        {order.paymentMethod.replace('_', ' ')}\n                      </span>\n                    </div>\n                  )}\n                  {order.paymentDetails && (\n                    <>\n                      <div className=\"flex items-center justify-between\">\n                        <span className=\"text-muted-foreground\">Transaction ID</span>\n                        <span className=\"font-mono text-sm\">{order.paymentDetails.transactionId}</span>\n                      </div>\n                      {order.paymentDetails.lastFourDigits && (\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-muted-foreground\">Card</span>\n                          <span>\n                            {order.paymentDetails.cardBrand} •••• {order.paymentDetails.lastFourDigits}\n                          </span>\n                        </div>\n                      )}\n                      {order.paymentDetails.authorizationCode && (\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-muted-foreground\">Auth Code</span>\n                          <span className=\"font-mono text-sm\">{order.paymentDetails.authorizationCode}</span>\n                        </div>\n                      )}\n                    </>\n                  )}\n                </div>\n              </Card>\n            </div>\n\n            {/* Delivery Tab */}\n            {order.type === OrderType.DELIVERY && order.deliveryInfo && (\n              <div value=\"delivery\" className=\"space-y-4\">\n                <Card>\n                  <div className=\"p-4 border-b\">\n                    <h3 className=\"font-semibold\">Delivery Information</h3>\n                  </div>\n                  <div className=\"p-4 space-y-4\">\n                    <div>\n                      <p className=\"text-sm text-muted-foreground mb-1\">Delivery Address</p>\n                      <p>{order.deliveryInfo.address}</p>\n                      <p>{order.deliveryInfo.city}, {order.deliveryInfo.state} {order.deliveryInfo.zipCode}</p>\n                    </div>\n                    {order.deliveryInfo.instructions && (\n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-1\">Instructions</p>\n                        <p>{order.deliveryInfo.instructions}</p>\n                      </div>\n                    )}\n                    {order.deliveryInfo.driverName && (\n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-1\">Driver</p>\n                        <p>{order.deliveryInfo.driverName}</p>\n                      </div>\n                    )}\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <p className=\"text-sm text-muted-foreground mb-1\">Estimated Delivery</p>\n                        <p>{order.deliveryInfo.estimatedDeliveryTime ? \n                          new Date(order.deliveryInfo.estimatedDeliveryTime).toLocaleString() : \n                          'Not set'}</p>\n                      </div>\n                      {order.deliveryInfo.actualDeliveryTime && (\n                        <div>\n                          <p className=\"text-sm text-muted-foreground mb-1\">Actual Delivery</p>\n                          <p>{new Date(order.deliveryInfo.actualDeliveryTime).toLocaleString()}</p>\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"flex items-center justify-between pt-2 border-t\">\n                      <span>Delivery Fee</span>\n                      <span className=\"font-medium\">${order.deliveryInfo.deliveryFee.toFixed(2)}</span>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            )}\n          </Tabs>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          {/* Quick Actions */}\n          <Card>\n            <div className=\"p-4 border-b\">\n              <h3 className=\"font-semibold\">Quick Actions</h3>\n            </div>\n            <div className=\"p-4 space-y-2\">\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                onClick={() => window.print()}\n              >\n                <Printer className=\"h-4 w-4 mr-2\" />\n                Print Order\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                onClick={() => router.push(`/orders/${order.id}/edit`)}\n              >\n                <Edit className=\"h-4 w-4 mr-2\" />\n                Edit Order\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                onClick={() => setShowNotes(!showNotes)}\n              >\n                <MessageSquare className=\"h-4 w-4 mr-2\" />\n                Add Note\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n                onClick={() => router.refresh()}\n              >\n                <RefreshCw className=\"h-4 w-4 mr-2\" />\n                Refresh\n              </Button>\n            </div>\n          </Card>\n\n          {/* Order Info */}\n          <Card>\n            <div className=\"p-4 border-b\">\n              <h3 className=\"font-semibold\">Order Information</h3>\n            </div>\n            <div className=\"p-4 space-y-3 text-sm\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground\">Order ID</span>\n                <span className=\"font-mono\">{order.id}</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground\">Order Number</span>\n                <span className=\"font-medium\">{order.orderNumber}</span>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground\">Type</span>\n                <Badge variant=\"outline\">{order.type.replace('_', ' ')}</Badge>\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground\">Source</span>\n                <span>{order.source}</span>\n              </div>\n              {order.thirdPartyProvider && (\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">Provider</span>\n                  <span>{order.thirdPartyProvider}</span>\n                </div>\n              )}\n              {order.posOrderId && (\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-muted-foreground\">POS ID</span>\n                  <span className=\"font-mono text-xs\">{order.posOrderId}</span>\n                </div>\n              )}\n            </div>\n          </Card>\n\n          {/* Staff Assignment */}\n          {order.assignedStaff && order.assignedStaff.length > 0 && (\n            <Card>\n              <div className=\"p-4 border-b\">\n                <h3 className=\"font-semibold\">Assigned Staff</h3>\n              </div>\n              <div className=\"p-4 space-y-2\">\n                {order.assignedStaff.map(staff => (\n                  <div key={staff.id} className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <User className=\"h-4 w-4 text-muted-foreground\" />\n                      <span className=\"text-sm\">{staff.name}</span>\n                    </div>\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {staff.role}\n                    </Badge>\n                  </div>\n                ))}\n              </div>\n            </Card>\n          )}\n\n          {/* Notes */}\n          {order.notes && (\n            <Card>\n              <div className=\"p-4 border-b\">\n                <h3 className=\"font-semibold\">Notes</h3>\n              </div>\n              <div className=\"p-4\">\n                <p className=\"text-sm\">{order.notes}</p>\n              </div>\n            </Card>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}