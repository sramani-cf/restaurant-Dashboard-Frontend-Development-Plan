{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/dropdown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Menu, MenuButton, MenuItems, MenuItem, Transition } from '@headlessui/react';\nimport { cn } from './utils';\nimport { ChevronDown, Check } from 'lucide-react';\nimport { Button } from './button';\n\nexport interface DropdownItem {\n  key: string;\n  label: string;\n  icon?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: () => void;\n  href?: string;\n  target?: string;\n  shortcut?: string;\n  danger?: boolean;\n  divider?: boolean;\n}\n\nexport interface DropdownProps {\n  items: DropdownItem[];\n  trigger?: React.ReactNode;\n  label?: string;\n  placeholder?: string;\n  align?: 'start' | 'end';\n  side?: 'bottom' | 'top';\n  className?: string;\n  menuClassName?: string;\n  disabled?: boolean;\n  loading?: boolean;\n}\n\nfunction Dropdown({\n  items,\n  trigger,\n  label,\n  placeholder = 'Select option',\n  align = 'start',\n  side = 'bottom',\n  className,\n  menuClassName,\n  disabled = false,\n  loading = false,\n}: DropdownProps) {\n  const getAlignmentClasses = () => {\n    const alignClasses = {\n      start: 'origin-top-left left-0',\n      end: 'origin-top-right right-0',\n    };\n    \n    const sideClasses = {\n      bottom: 'top-full mt-1',\n      top: 'bottom-full mb-1',\n    };\n    \n    return cn(alignClasses[align], sideClasses[side]);\n  };\n\n  const renderTrigger = () => {\n    if (trigger) return trigger;\n    \n    return (\n      <Button\n        variant=\"outline\"\n        className=\"justify-between\"\n        disabled={disabled || loading}\n      >\n        {label || placeholder}\n        <ChevronDown className=\"ml-2 h-4 w-4\" />\n      </Button>\n    );\n  };\n\n  return (\n    <Menu as=\"div\" className={cn('relative inline-block text-left', className)}>\n      <MenuButton as={React.Fragment}>\n        {renderTrigger()}\n      </MenuButton>\n\n      <Transition\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <MenuItems\n          className={cn(\n            'absolute z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md',\n            getAlignmentClasses(),\n            menuClassName\n          )}\n        >\n          {items.map((item) => {\n            if (item.divider) {\n              return (\n                <div\n                  key={item.key}\n                  className=\"my-1 h-px bg-border\"\n                />\n              );\n            }\n\n            return (\n              <MenuItem key={item.key} disabled={item.disabled}>\n                {({ active, disabled: itemDisabled }) => {\n                  const content = (\n                    <div\n                      className={cn(\n                        'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors',\n                        {\n                          'bg-accent text-accent-foreground': active && !itemDisabled,\n                          'text-muted-foreground cursor-not-allowed opacity-50': itemDisabled,\n                          'text-destructive focus:text-destructive': item.danger && !itemDisabled,\n                        }\n                      )}\n                      onClick={item.onClick}\n                    >\n                      {item.icon && (\n                        <span className=\"mr-2 h-4 w-4 flex-shrink-0\">\n                          {item.icon}\n                        </span>\n                      )}\n                      <span className=\"flex-1\">{item.label}</span>\n                      {item.shortcut && (\n                        <span className=\"ml-auto text-xs tracking-widest opacity-60\">\n                          {item.shortcut}\n                        </span>\n                      )}\n                    </div>\n                  );\n\n                  if (item.href) {\n                    return (\n                      <a\n                        href={item.href}\n                        target={item.target}\n                        className=\"block\"\n                      >\n                        {content}\n                      </a>\n                    );\n                  }\n\n                  return content;\n                }}\n              </MenuItem>\n            );\n          })}\n        </MenuItems>\n      </Transition>\n    </Menu>\n  );\n}\n\n// Action dropdown with common actions\nexport interface ActionDropdownProps {\n  onEdit?: () => void;\n  onDelete?: () => void;\n  onDuplicate?: () => void;\n  onView?: () => void;\n  customActions?: DropdownItem[];\n  disabled?: boolean;\n  className?: string;\n}\n\nfunction ActionDropdown({\n  onEdit,\n  onDelete,\n  onDuplicate,\n  onView,\n  customActions = [],\n  disabled = false,\n  className,\n}: ActionDropdownProps) {\n  const defaultActions: DropdownItem[] = [\n    ...(onView ? [{\n      key: 'view',\n      label: 'View',\n      onClick: onView,\n    }] : []),\n    ...(onEdit ? [{\n      key: 'edit',\n      label: 'Edit',\n      onClick: onEdit,\n    }] : []),\n    ...(onDuplicate ? [{\n      key: 'duplicate',\n      label: 'Duplicate',\n      onClick: onDuplicate,\n    }] : []),\n    ...customActions,\n    ...(onDelete ? [\n      { key: 'divider-1', label: '', divider: true },\n      {\n        key: 'delete',\n        label: 'Delete',\n        onClick: onDelete,\n        danger: true,\n      }\n    ] : []),\n  ];\n\n  return (\n    <Dropdown\n      items={defaultActions}\n      trigger={\n        <Button variant=\"ghost\" size=\"icon\" disabled={disabled}>\n          <span className=\"sr-only\">Open menu</span>\n          <svg\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zM12 13a1 1 0 110-2 1 1 0 010 2zM12 20a1 1 0 110-2 1 1 0 010 2z\"\n            />\n          </svg>\n        </Button>\n      }\n      align=\"end\"\n      className={className}\n    />\n  );\n}\n\n// Select dropdown for form inputs\nexport interface SelectDropdownProps {\n  options: {\n    value: string;\n    label: string;\n    disabled?: boolean;\n  }[];\n  value?: string;\n  onChange?: (value: string) => void;\n  placeholder?: string;\n  disabled?: boolean;\n  className?: string;\n  error?: boolean;\n}\n\nfunction SelectDropdown({\n  options,\n  value,\n  onChange,\n  placeholder = 'Select option',\n  disabled = false,\n  className,\n  error = false,\n}: SelectDropdownProps) {\n  const selectedOption = options.find(option => option.value === value);\n  \n  const items: DropdownItem[] = options.map(option => ({\n    key: option.value,\n    label: option.label,\n    disabled: option.disabled,\n    onClick: () => onChange?.(option.value),\n    icon: value === option.value ? <Check className=\"h-4 w-4\" /> : undefined,\n  }));\n\n  return (\n    <Dropdown\n      items={items}\n      trigger={\n        <Button\n          variant=\"outline\"\n          className={cn(\n            'w-full justify-between',\n            error && 'border-destructive',\n            className\n          )}\n          disabled={disabled}\n        >\n          {selectedOption ? selectedOption.label : placeholder}\n          <ChevronDown className=\"ml-2 h-4 w-4 opacity-50\" />\n        </Button>\n      }\n      align=\"start\"\n      menuClassName=\"w-full\"\n    />\n  );\n}\n\nexport { Dropdown, ActionDropdown, SelectDropdown };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/inventory/calculations.ts"],"sourcesContent":["import type {\n  InventoryItem,\n  StockMovement,\n  Recipe,\n  RecipeIngredient,\n  InventoryMetrics,\n  WasteLog,\n  UnitOfMeasurement,\n} from './types';\n\n/**\n * Calculate theoretical stock based on purchases and recorded consumption\n */\nexport function calculateTheoreticalStock(\n  item: InventoryItem,\n  movements: StockMovement[]\n): number {\n  // Start with last counted stock or initial stock\n  let theoreticalStock = item.currentStock;\n  \n  // Apply all movements since last count\n  for (const movement of movements) {\n    if (movement.itemId === item.id) {\n      switch (movement.type) {\n        case 'purchase':\n        case 'adjustment':\n        case 'return':\n          theoreticalStock += movement.quantity;\n          break;\n        case 'sale':\n        case 'consumption':\n        case 'waste':\n        case 'transfer':\n          theoreticalStock -= Math.abs(movement.quantity);\n          break;\n      }\n    }\n  }\n  \n  return Math.max(0, theoreticalStock);\n}\n\n/**\n * Calculate actual vs theoretical variance\n */\nexport function calculateStockVariance(\n  actualStock: number,\n  theoreticalStock: number,\n  costPrice: number\n): { quantityVariance: number; valueVariance: number; percentageVariance: number } {\n  const quantityVariance = actualStock - theoreticalStock;\n  const valueVariance = quantityVariance * costPrice;\n  const percentageVariance = theoreticalStock > 0 \n    ? (quantityVariance / theoreticalStock) * 100 \n    : 0;\n  \n  return {\n    quantityVariance,\n    valueVariance,\n    percentageVariance,\n  };\n}\n\n/**\n * Calculate reorder quantity based on various factors\n */\nexport function calculateReorderQuantity(\n  item: InventoryItem,\n  averageDailyUsage: number,\n  leadTimeDays: number = 7,\n  safetyStockDays: number = 3\n): number {\n  // Economic Order Quantity factors\n  const demandDuringLeadTime = averageDailyUsage * leadTimeDays;\n  const safetyStock = averageDailyUsage * safetyStockDays;\n  const reorderPoint = demandDuringLeadTime + safetyStock;\n  \n  // If manual reorder quantity is set, use that\n  if (item.reorderQuantity && item.reorderQuantity > 0) {\n    return item.reorderQuantity;\n  }\n  \n  // Calculate economic order quantity (simplified)\n  const annualDemand = averageDailyUsage * 365;\n  const orderingCost = 50; // Assumed fixed ordering cost\n  const holdingCostRate = 0.20; // 20% of item cost per year\n  const holdingCost = item.costPrice * holdingCostRate;\n  \n  const eoq = Math.sqrt((2 * annualDemand * orderingCost) / holdingCost);\n  \n  // Return the larger of EOQ or minimum order to reach max stock\n  const maxStockOrder = item.maximumStock \n    ? item.maximumStock - item.currentStock \n    : eoq;\n  \n  return Math.max(eoq, maxStockOrder, reorderPoint - item.currentStock);\n}\n\n/**\n * Calculate average daily usage from stock movements\n */\nexport function calculateAverageDailyUsage(\n  itemId: string,\n  movements: StockMovement[],\n  days: number = 30\n): number {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - days);\n  \n  const consumptionMovements = movements.filter(movement =>\n    movement.itemId === itemId &&\n    movement.createdAt >= cutoffDate &&\n    (movement.type === 'consumption' || movement.type === 'sale')\n  );\n  \n  const totalUsage = consumptionMovements.reduce(\n    (sum, movement) => sum + Math.abs(movement.quantity),\n    0\n  );\n  \n  return days > 0 ? totalUsage / days : 0;\n}\n\n/**\n * Calculate inventory turnover rate\n */\nexport function calculateTurnoverRate(\n  item: InventoryItem,\n  movements: StockMovement[],\n  periodDays: number = 365\n): { turnoverRate: number; daysToTurnover: number } {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - periodDays);\n  \n  const consumptionMovements = movements.filter(movement =>\n    movement.itemId === item.id &&\n    movement.createdAt >= cutoffDate &&\n    (movement.type === 'consumption' || movement.type === 'sale')\n  );\n  \n  const totalUsage = consumptionMovements.reduce(\n    (sum, movement) => sum + Math.abs(movement.quantity),\n    0\n  );\n  \n  const averageStock = item.currentStock; // Simplified - should be average over period\n  const turnoverRate = averageStock > 0 ? totalUsage / averageStock : 0;\n  const daysToTurnover = turnoverRate > 0 ? periodDays / turnoverRate : 0;\n  \n  return { turnoverRate, daysToTurnover };\n}\n\n/**\n * Calculate weighted average cost (WAC) for inventory valuation\n */\nexport function calculateWeightedAverageCost(\n  item: InventoryItem,\n  movements: StockMovement[]\n): number {\n  let totalQuantity = 0;\n  let totalCost = 0;\n  \n  // Start with current stock at current cost\n  totalQuantity += item.currentStock;\n  totalCost += item.currentStock * item.costPrice;\n  \n  // Add all purchase movements with their costs\n  const purchaseMovements = movements.filter(movement =>\n    movement.itemId === item.id &&\n    movement.type === 'purchase' &&\n    movement.unitCost &&\n    movement.unitCost > 0\n  );\n  \n  for (const movement of purchaseMovements) {\n    totalQuantity += movement.quantity;\n    totalCost += movement.quantity * (movement.unitCost || 0);\n  }\n  \n  return totalQuantity > 0 ? totalCost / totalQuantity : item.costPrice;\n}\n\n/**\n * Calculate ABC analysis classification\n */\nexport function calculateABCClassification(\n  items: InventoryItem[],\n  movements: StockMovement[]\n): { itemId: string; classification: 'A' | 'B' | 'C'; annualValue: number }[] {\n  const itemValues = items.map(item => {\n    const annualUsage = calculateAverageDailyUsage(item.id, movements, 365) * 365;\n    const annualValue = annualUsage * item.costPrice;\n    \n    return {\n      itemId: item.id,\n      annualValue,\n      classification: 'C' as 'A' | 'B' | 'C',\n    };\n  });\n  \n  // Sort by annual value descending\n  itemValues.sort((a, b) => b.annualValue - a.annualValue);\n  \n  const totalValue = itemValues.reduce((sum, item) => sum + item.annualValue, 0);\n  let cumulativeValue = 0;\n  \n  // Classify based on cumulative percentage\n  for (const item of itemValues) {\n    cumulativeValue += item.annualValue;\n    const cumulativePercentage = (cumulativeValue / totalValue) * 100;\n    \n    if (cumulativePercentage <= 80) {\n      item.classification = 'A';\n    } else if (cumulativePercentage <= 95) {\n      item.classification = 'B';\n    } else {\n      item.classification = 'C';\n    }\n  }\n  \n  return itemValues;\n}\n\n/**\n * Calculate recipe cost based on current ingredient prices\n */\nexport function calculateRecipeCost(\n  recipe: Recipe,\n  ingredients: InventoryItem[]\n): { totalCost: number; costPerServing: number; ingredientCosts: RecipeIngredient[] } {\n  let totalCost = 0;\n  const ingredientCosts: RecipeIngredient[] = [];\n  \n  for (const recipeIngredient of recipe.ingredients) {\n    const inventoryItem = ingredients.find(item => item.id === recipeIngredient.itemId);\n    if (inventoryItem) {\n      // Convert recipe quantity to item's primary unit if needed\n      const convertedQuantity = convertQuantity(\n        recipeIngredient.quantity,\n        recipeIngredient.unit,\n        inventoryItem.primaryUnit\n      );\n      \n      const ingredientCost = convertedQuantity * inventoryItem.costPrice;\n      totalCost += ingredientCost;\n      \n      ingredientCosts.push({\n        ...recipeIngredient,\n        cost: ingredientCost,\n      });\n    } else {\n      // If ingredient not found, use the cost from recipe\n      totalCost += recipeIngredient.cost;\n      ingredientCosts.push(recipeIngredient);\n    }\n  }\n  \n  const costPerServing = recipe.servings > 0 ? totalCost / recipe.servings : totalCost;\n  \n  return { totalCost, costPerServing, ingredientCosts };\n}\n\n/**\n * Convert quantity between different units of measurement\n */\nexport function convertQuantity(\n  quantity: number,\n  fromUnit: string,\n  toUnit: string,\n  unitsOfMeasurement: UnitOfMeasurement[] = []\n): number {\n  if (fromUnit === toUnit) {\n    return quantity;\n  }\n  \n  const fromUnitData = unitsOfMeasurement.find(u => u.id === fromUnit || u.abbreviation === fromUnit);\n  const toUnitData = unitsOfMeasurement.find(u => u.id === toUnit || u.abbreviation === toUnit);\n  \n  if (!fromUnitData || !toUnitData) {\n    // If we can't find unit conversion data, return original quantity\n    console.warn(`Cannot convert from ${fromUnit} to ${toUnit}: units not found`);\n    return quantity;\n  }\n  \n  if (fromUnitData.type !== toUnitData.type) {\n    console.warn(`Cannot convert between different unit types: ${fromUnitData.type} to ${toUnitData.type}`);\n    return quantity;\n  }\n  \n  // Convert to base unit first, then to target unit\n  const baseQuantity = quantity * fromUnitData.conversionFactor;\n  const convertedQuantity = baseQuantity / toUnitData.conversionFactor;\n  \n  return convertedQuantity;\n}\n\n/**\n * Calculate shrinkage rate based on waste logs\n */\nexport function calculateShrinkageRate(\n  itemId: string,\n  wasteLogs: WasteLog[],\n  movements: StockMovement[],\n  periodDays: number = 30\n): { shrinkageRate: number; shrinkageValue: number } {\n  const cutoffDate = new Date();\n  cutoffDate.setDate(cutoffDate.getDate() - periodDays);\n  \n  // Calculate total waste for the item\n  const itemWasteLogs = wasteLogs.filter(log =>\n    log.itemId === itemId &&\n    log.createdAt >= cutoffDate\n  );\n  \n  const totalWasteQuantity = itemWasteLogs.reduce(\n    (sum, log) => sum + log.quantity,\n    0\n  );\n  \n  const totalWasteValue = itemWasteLogs.reduce(\n    (sum, log) => sum + log.totalCost,\n    0\n  );\n  \n  // Calculate total purchases/receipts in the period\n  const purchaseMovements = movements.filter(movement =>\n    movement.itemId === itemId &&\n    movement.createdAt >= cutoffDate &&\n    movement.type === 'purchase'\n  );\n  \n  const totalPurchaseQuantity = purchaseMovements.reduce(\n    (sum, movement) => sum + movement.quantity,\n    0\n  );\n  \n  const shrinkageRate = totalPurchaseQuantity > 0 \n    ? (totalWasteQuantity / totalPurchaseQuantity) * 100\n    : 0;\n  \n  return { shrinkageRate, shrinkageValue: totalWasteValue };\n}\n\n/**\n * Calculate food cost percentage\n */\nexport function calculateFoodCostPercentage(\n  totalCostOfGoodsSold: number,\n  totalRevenue: number\n): number {\n  return totalRevenue > 0 ? (totalCostOfGoodsSold / totalRevenue) * 100 : 0;\n}\n\n/**\n * Calculate ending inventory value\n */\nexport function calculateInventoryValue(\n  items: InventoryItem[],\n  method: 'current_cost' | 'average_cost' | 'fifo' | 'lifo' = 'current_cost'\n): number {\n  return items.reduce((total, item) => {\n    let unitCost = item.costPrice;\n    \n    if (method === 'average_cost' && item.averageCost) {\n      unitCost = item.averageCost;\n    } else if (method === 'fifo' && item.lastCostPrice) {\n      // Simplified FIFO - would need more complex logic for real FIFO\n      unitCost = item.lastCostPrice;\n    } else if (method === 'lifo' && item.averageCost) {\n      // Simplified LIFO\n      unitCost = item.averageCost;\n    }\n    \n    return total + (item.currentStock * unitCost);\n  }, 0);\n}\n\n/**\n * Predict when item will be out of stock\n */\nexport function predictStockoutDate(\n  item: InventoryItem,\n  movements: StockMovement[]\n): Date | null {\n  const averageDailyUsage = calculateAverageDailyUsage(item.id, movements);\n  \n  if (averageDailyUsage <= 0 || item.currentStock <= 0) {\n    return null;\n  }\n  \n  const daysUntilStockout = item.currentStock / averageDailyUsage;\n  const stockoutDate = new Date();\n  stockoutDate.setDate(stockoutDate.getDate() + Math.floor(daysUntilStockout));\n  \n  return stockoutDate;\n}\n\n/**\n * Calculate optimal stock levels based on service level and demand variability\n */\nexport function calculateOptimalStockLevels(\n  item: InventoryItem,\n  movements: StockMovement[],\n  serviceLevel: number = 0.95, // 95% service level\n  leadTimeDays: number = 7\n): {\n  reorderPoint: number;\n  safetyStock: number;\n  maximumStock: number;\n} {\n  const averageDailyUsage = calculateAverageDailyUsage(item.id, movements);\n  const demandDuringLeadTime = averageDailyUsage * leadTimeDays;\n  \n  // Calculate demand variability (standard deviation)\n  const usageHistory = movements\n    .filter(m => m.itemId === item.id && (m.type === 'consumption' || m.type === 'sale'))\n    .map(m => Math.abs(m.quantity));\n  \n  const averageUsage = usageHistory.reduce((sum, usage) => sum + usage, 0) / usageHistory.length;\n  const variance = usageHistory.reduce((sum, usage) => sum + Math.pow(usage - averageUsage, 2), 0) / usageHistory.length;\n  const standardDeviation = Math.sqrt(variance);\n  \n  // Z-score for 95% service level\n  const zScore = 1.65;\n  const safetyStock = zScore * standardDeviation * Math.sqrt(leadTimeDays);\n  \n  const reorderPoint = demandDuringLeadTime + safetyStock;\n  \n  // Calculate maximum stock (order point + order quantity)\n  const orderQuantity = calculateReorderQuantity(item, averageDailyUsage, leadTimeDays);\n  const maximumStock = reorderPoint + orderQuantity;\n  \n  return {\n    reorderPoint: Math.max(0, reorderPoint),\n    safetyStock: Math.max(0, safetyStock),\n    maximumStock: Math.max(0, maximumStock),\n  };\n}\n\n/**\n * Calculate carrying cost for inventory\n */\nexport function calculateCarryingCost(\n  inventoryValue: number,\n  carryingCostRate: number = 0.25 // 25% annually\n): number {\n  return inventoryValue * carryingCostRate;\n}\n\n/**\n * Calculate metrics for inventory dashboard\n */\nexport function calculateInventoryMetrics(\n  items: InventoryItem[],\n  movements: StockMovement[],\n  wasteLogs: WasteLog[]\n): InventoryMetrics {\n  const totalValue = calculateInventoryValue(items);\n  const totalItems = items.length;\n  const lowStockItems = items.filter(item => item.currentStock <= item.minimumStock).length;\n  const outOfStockItems = items.filter(item => item.currentStock <= 0).length;\n  \n  // Calculate expiring items (items that expire in next 3 days)\n  const expiringItems = items.filter(item => {\n    if (!item.expirationTracking || !item.shelfLife) return false;\n    \n    // This is simplified - in reality, you'd check batch expiration dates\n    const avgShelfLife = item.shelfLife;\n    return avgShelfLife <= 3;\n  }).length;\n  \n  // Calculate waste value for current period\n  const thisWeekStart = new Date();\n  thisWeekStart.setDate(thisWeekStart.getDate() - 7);\n  \n  const wasteValue = wasteLogs\n    .filter(log => log.createdAt >= thisWeekStart)\n    .reduce((sum, log) => sum + log.totalCost, 0);\n  \n  // Calculate average turnover rate\n  const turnoverRates = items.map(item => {\n    const { turnoverRate } = calculateTurnoverRate(item, movements);\n    return turnoverRate;\n  });\n  \n  const averageTurnoverRate = turnoverRates.length > 0\n    ? turnoverRates.reduce((sum, rate) => sum + rate, 0) / turnoverRates.length\n    : 0;\n  \n  const averageDaysToTurnover = averageTurnoverRate > 0 ? 365 / averageTurnoverRate : 0;\n  \n  return {\n    totalValue,\n    totalItems,\n    lowStockItems,\n    outOfStockItems,\n    expiringItems,\n    wasteValue,\n    turnoverRate: averageTurnoverRate,\n    averageDaysToTurnover,\n  };\n}\n\n/**\n * Helper function to format currency values\n */\nexport function formatCurrency(value: number, currency: string = 'USD'): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(value);\n}\n\n/**\n * Helper function to format percentages\n */\nexport function formatPercentage(value: number, decimals: number = 1): string {\n  return `${value.toFixed(decimals)}%`;\n}\n\n/**\n * Helper function to format quantities with units\n */\nexport function formatQuantity(quantity: number, unit: string): string {\n  return `${quantity.toFixed(2)} ${unit}`;\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaO,SAAS,0BACd,IAAmB,EACnB,SAA0B;IAE1B,iDAAiD;IACjD,IAAI,mBAAmB,KAAK,YAAY;IAExC,uCAAuC;IACvC,KAAK,MAAM,YAAY,UAAW;QAChC,IAAI,SAAS,MAAM,KAAK,KAAK,EAAE,EAAE;YAC/B,OAAQ,SAAS,IAAI;gBACnB,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,oBAAoB,SAAS,QAAQ;oBACrC;gBACF,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,oBAAoB,KAAK,GAAG,CAAC,SAAS,QAAQ;oBAC9C;YACJ;QACF;IACF;IAEA,OAAO,KAAK,GAAG,CAAC,GAAG;AACrB;AAKO,SAAS,uBACd,WAAmB,EACnB,gBAAwB,EACxB,SAAiB;IAEjB,MAAM,mBAAmB,cAAc;IACvC,MAAM,gBAAgB,mBAAmB;IACzC,MAAM,qBAAqB,mBAAmB,IAC1C,AAAC,mBAAmB,mBAAoB,MACxC;IAEJ,OAAO;QACL;QACA;QACA;IACF;AACF;AAKO,SAAS,yBACd,IAAmB,EACnB,iBAAyB;QACzB,eAAA,iEAAuB,GACvB,kBAAA,iEAA0B;IAE1B,kCAAkC;IAClC,MAAM,uBAAuB,oBAAoB;IACjD,MAAM,cAAc,oBAAoB;IACxC,MAAM,eAAe,uBAAuB;IAE5C,8CAA8C;IAC9C,IAAI,KAAK,eAAe,IAAI,KAAK,eAAe,GAAG,GAAG;QACpD,OAAO,KAAK,eAAe;IAC7B;IAEA,iDAAiD;IACjD,MAAM,eAAe,oBAAoB;IACzC,MAAM,eAAe,IAAI,8BAA8B;IACvD,MAAM,kBAAkB,MAAM,4BAA4B;IAC1D,MAAM,cAAc,KAAK,SAAS,GAAG;IAErC,MAAM,MAAM,KAAK,IAAI,CAAC,AAAC,IAAI,eAAe,eAAgB;IAE1D,+DAA+D;IAC/D,MAAM,gBAAgB,KAAK,YAAY,GACnC,KAAK,YAAY,GAAG,KAAK,YAAY,GACrC;IAEJ,OAAO,KAAK,GAAG,CAAC,KAAK,eAAe,eAAe,KAAK,YAAY;AACtE;AAKO,SAAS,2BACd,MAAc,EACd,SAA0B;QAC1B,OAAA,iEAAe;IAEf,MAAM,aAAa,IAAI;IACvB,WAAW,OAAO,CAAC,WAAW,OAAO,KAAK;IAE1C,MAAM,uBAAuB,UAAU,MAAM,CAAC,CAAA,WAC5C,SAAS,MAAM,KAAK,UACpB,SAAS,SAAS,IAAI,cACtB,CAAC,SAAS,IAAI,KAAK,iBAAiB,SAAS,IAAI,KAAK,MAAM;IAG9D,MAAM,aAAa,qBAAqB,MAAM,CAC5C,CAAC,KAAK,WAAa,MAAM,KAAK,GAAG,CAAC,SAAS,QAAQ,GACnD;IAGF,OAAO,OAAO,IAAI,aAAa,OAAO;AACxC;AAKO,SAAS,sBACd,IAAmB,EACnB,SAA0B;QAC1B,aAAA,iEAAqB;IAErB,MAAM,aAAa,IAAI;IACvB,WAAW,OAAO,CAAC,WAAW,OAAO,KAAK;IAE1C,MAAM,uBAAuB,UAAU,MAAM,CAAC,CAAA,WAC5C,SAAS,MAAM,KAAK,KAAK,EAAE,IAC3B,SAAS,SAAS,IAAI,cACtB,CAAC,SAAS,IAAI,KAAK,iBAAiB,SAAS,IAAI,KAAK,MAAM;IAG9D,MAAM,aAAa,qBAAqB,MAAM,CAC5C,CAAC,KAAK,WAAa,MAAM,KAAK,GAAG,CAAC,SAAS,QAAQ,GACnD;IAGF,MAAM,eAAe,KAAK,YAAY,EAAE,6CAA6C;IACrF,MAAM,eAAe,eAAe,IAAI,aAAa,eAAe;IACpE,MAAM,iBAAiB,eAAe,IAAI,aAAa,eAAe;IAEtE,OAAO;QAAE;QAAc;IAAe;AACxC;AAKO,SAAS,6BACd,IAAmB,EACnB,SAA0B;IAE1B,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAEhB,2CAA2C;IAC3C,iBAAiB,KAAK,YAAY;IAClC,aAAa,KAAK,YAAY,GAAG,KAAK,SAAS;IAE/C,8CAA8C;IAC9C,MAAM,oBAAoB,UAAU,MAAM,CAAC,CAAA,WACzC,SAAS,MAAM,KAAK,KAAK,EAAE,IAC3B,SAAS,IAAI,KAAK,cAClB,SAAS,QAAQ,IACjB,SAAS,QAAQ,GAAG;IAGtB,KAAK,MAAM,YAAY,kBAAmB;QACxC,iBAAiB,SAAS,QAAQ;QAClC,aAAa,SAAS,QAAQ,GAAG,CAAC,SAAS,QAAQ,IAAI,CAAC;IAC1D;IAEA,OAAO,gBAAgB,IAAI,YAAY,gBAAgB,KAAK,SAAS;AACvE;AAKO,SAAS,2BACd,KAAsB,EACtB,SAA0B;IAE1B,MAAM,aAAa,MAAM,GAAG,CAAC,CAAA;QAC3B,MAAM,cAAc,2BAA2B,KAAK,EAAE,EAAE,WAAW,OAAO;QAC1E,MAAM,cAAc,cAAc,KAAK,SAAS;QAEhD,OAAO;YACL,QAAQ,KAAK,EAAE;YACf;YACA,gBAAgB;QAClB;IACF;IAEA,kCAAkC;IAClC,WAAW,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,WAAW,GAAG,EAAE,WAAW;IAEvD,MAAM,aAAa,WAAW,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,KAAK,WAAW,EAAE;IAC5E,IAAI,kBAAkB;IAEtB,0CAA0C;IAC1C,KAAK,MAAM,QAAQ,WAAY;QAC7B,mBAAmB,KAAK,WAAW;QACnC,MAAM,uBAAuB,AAAC,kBAAkB,aAAc;QAE9D,IAAI,wBAAwB,IAAI;YAC9B,KAAK,cAAc,GAAG;QACxB,OAAO,IAAI,wBAAwB,IAAI;YACrC,KAAK,cAAc,GAAG;QACxB,OAAO;YACL,KAAK,cAAc,GAAG;QACxB;IACF;IAEA,OAAO;AACT;AAKO,SAAS,oBACd,MAAc,EACd,WAA4B;IAE5B,IAAI,YAAY;IAChB,MAAM,kBAAsC,EAAE;IAE9C,KAAK,MAAM,oBAAoB,OAAO,WAAW,CAAE;QACjD,MAAM,gBAAgB,YAAY,IAAI,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,iBAAiB,MAAM;QAClF,IAAI,eAAe;YACjB,2DAA2D;YAC3D,MAAM,oBAAoB,gBACxB,iBAAiB,QAAQ,EACzB,iBAAiB,IAAI,EACrB,cAAc,WAAW;YAG3B,MAAM,iBAAiB,oBAAoB,cAAc,SAAS;YAClE,aAAa;YAEb,gBAAgB,IAAI,CAAC;gBACnB,GAAG,gBAAgB;gBACnB,MAAM;YACR;QACF,OAAO;YACL,oDAAoD;YACpD,aAAa,iBAAiB,IAAI;YAClC,gBAAgB,IAAI,CAAC;QACvB;IACF;IAEA,MAAM,iBAAiB,OAAO,QAAQ,GAAG,IAAI,YAAY,OAAO,QAAQ,GAAG;IAE3E,OAAO;QAAE;QAAW;QAAgB;IAAgB;AACtD;AAKO,SAAS,gBACd,QAAgB,EAChB,QAAgB,EAChB,MAAc;QACd,qBAAA,iEAA0C,EAAE;IAE5C,IAAI,aAAa,QAAQ;QACvB,OAAO;IACT;IAEA,MAAM,eAAe,mBAAmB,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,YAAY,EAAE,YAAY,KAAK;IAC1F,MAAM,aAAa,mBAAmB,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,UAAU,EAAE,YAAY,KAAK;IAEtF,IAAI,CAAC,gBAAgB,CAAC,YAAY;QAChC,kEAAkE;QAClE,QAAQ,IAAI,CAAC,AAAC,uBAAqC,OAAf,UAAS,QAAa,OAAP,QAAO;QAC1D,OAAO;IACT;IAEA,IAAI,aAAa,IAAI,KAAK,WAAW,IAAI,EAAE;QACzC,QAAQ,IAAI,CAAC,AAAC,gDAAuE,OAAxB,aAAa,IAAI,EAAC,QAAsB,OAAhB,WAAW,IAAI;QACpG,OAAO;IACT;IAEA,kDAAkD;IAClD,MAAM,eAAe,WAAW,aAAa,gBAAgB;IAC7D,MAAM,oBAAoB,eAAe,WAAW,gBAAgB;IAEpE,OAAO;AACT;AAKO,SAAS,uBACd,MAAc,EACd,SAAqB,EACrB,SAA0B;QAC1B,aAAA,iEAAqB;IAErB,MAAM,aAAa,IAAI;IACvB,WAAW,OAAO,CAAC,WAAW,OAAO,KAAK;IAE1C,qCAAqC;IACrC,MAAM,gBAAgB,UAAU,MAAM,CAAC,CAAA,MACrC,IAAI,MAAM,KAAK,UACf,IAAI,SAAS,IAAI;IAGnB,MAAM,qBAAqB,cAAc,MAAM,CAC7C,CAAC,KAAK,MAAQ,MAAM,IAAI,QAAQ,EAChC;IAGF,MAAM,kBAAkB,cAAc,MAAM,CAC1C,CAAC,KAAK,MAAQ,MAAM,IAAI,SAAS,EACjC;IAGF,mDAAmD;IACnD,MAAM,oBAAoB,UAAU,MAAM,CAAC,CAAA,WACzC,SAAS,MAAM,KAAK,UACpB,SAAS,SAAS,IAAI,cACtB,SAAS,IAAI,KAAK;IAGpB,MAAM,wBAAwB,kBAAkB,MAAM,CACpD,CAAC,KAAK,WAAa,MAAM,SAAS,QAAQ,EAC1C;IAGF,MAAM,gBAAgB,wBAAwB,IAC1C,AAAC,qBAAqB,wBAAyB,MAC/C;IAEJ,OAAO;QAAE;QAAe,gBAAgB;IAAgB;AAC1D;AAKO,SAAS,4BACd,oBAA4B,EAC5B,YAAoB;IAEpB,OAAO,eAAe,IAAI,AAAC,uBAAuB,eAAgB,MAAM;AAC1E;AAKO,SAAS,wBACd,KAAsB;QACtB,SAAA,iEAA4D;IAE5D,OAAO,MAAM,MAAM,CAAC,CAAC,OAAO;QAC1B,IAAI,WAAW,KAAK,SAAS;QAE7B,IAAI,WAAW,kBAAkB,KAAK,WAAW,EAAE;YACjD,WAAW,KAAK,WAAW;QAC7B,OAAO,IAAI,WAAW,UAAU,KAAK,aAAa,EAAE;YAClD,gEAAgE;YAChE,WAAW,KAAK,aAAa;QAC/B,OAAO,IAAI,WAAW,UAAU,KAAK,WAAW,EAAE;YAChD,kBAAkB;YAClB,WAAW,KAAK,WAAW;QAC7B;QAEA,OAAO,QAAS,KAAK,YAAY,GAAG;IACtC,GAAG;AACL;AAKO,SAAS,oBACd,IAAmB,EACnB,SAA0B;IAE1B,MAAM,oBAAoB,2BAA2B,KAAK,EAAE,EAAE;IAE9D,IAAI,qBAAqB,KAAK,KAAK,YAAY,IAAI,GAAG;QACpD,OAAO;IACT;IAEA,MAAM,oBAAoB,KAAK,YAAY,GAAG;IAC9C,MAAM,eAAe,IAAI;IACzB,aAAa,OAAO,CAAC,aAAa,OAAO,KAAK,KAAK,KAAK,CAAC;IAEzD,OAAO;AACT;AAKO,SAAS,4BACd,IAAmB,EACnB,SAA0B;QAC1B,eAAA,iEAAuB,MACvB,eAAA,iEAAuB;IAMvB,MAAM,oBAAoB,2BAA2B,KAAK,EAAE,EAAE;IAC9D,MAAM,uBAAuB,oBAAoB;IAEjD,oDAAoD;IACpD,MAAM,eAAe,UAClB,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,KAAK,EAAE,IAAI,CAAC,EAAE,IAAI,KAAK,iBAAiB,EAAE,IAAI,KAAK,MAAM,GAClF,GAAG,CAAC,CAAA,IAAK,KAAK,GAAG,CAAC,EAAE,QAAQ;IAE/B,MAAM,eAAe,aAAa,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,OAAO,KAAK,aAAa,MAAM;IAC9F,MAAM,WAAW,aAAa,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,KAAK,GAAG,CAAC,QAAQ,cAAc,IAAI,KAAK,aAAa,MAAM;IACtH,MAAM,oBAAoB,KAAK,IAAI,CAAC;IAEpC,gCAAgC;IAChC,MAAM,SAAS;IACf,MAAM,cAAc,SAAS,oBAAoB,KAAK,IAAI,CAAC;IAE3D,MAAM,eAAe,uBAAuB;IAE5C,yDAAyD;IACzD,MAAM,gBAAgB,yBAAyB,MAAM,mBAAmB;IACxE,MAAM,eAAe,eAAe;IAEpC,OAAO;QACL,cAAc,KAAK,GAAG,CAAC,GAAG;QAC1B,aAAa,KAAK,GAAG,CAAC,GAAG;QACzB,cAAc,KAAK,GAAG,CAAC,GAAG;IAC5B;AACF;AAKO,SAAS,sBACd,cAAsB;QACtB,mBAAA,gDAAgC,eAAe;sBAApB;IAE3B,OAAO,iBAAiB;AAC1B;AAKO,SAAS,0BACd,KAAsB,EACtB,SAA0B,EAC1B,SAAqB;IAErB,MAAM,aAAa,wBAAwB;IAC3C,MAAM,aAAa,MAAM,MAAM;IAC/B,MAAM,gBAAgB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,YAAY,IAAI,KAAK,YAAY,EAAE,MAAM;IACzF,MAAM,kBAAkB,MAAM,MAAM,CAAC,CAAA,OAAQ,KAAK,YAAY,IAAI,GAAG,MAAM;IAE3E,8DAA8D;IAC9D,MAAM,gBAAgB,MAAM,MAAM,CAAC,CAAA;QACjC,IAAI,CAAC,KAAK,kBAAkB,IAAI,CAAC,KAAK,SAAS,EAAE,OAAO;QAExD,sEAAsE;QACtE,MAAM,eAAe,KAAK,SAAS;QACnC,OAAO,gBAAgB;IACzB,GAAG,MAAM;IAET,2CAA2C;IAC3C,MAAM,gBAAgB,IAAI;IAC1B,cAAc,OAAO,CAAC,cAAc,OAAO,KAAK;IAEhD,MAAM,aAAa,UAChB,MAAM,CAAC,CAAA,MAAO,IAAI,SAAS,IAAI,eAC/B,MAAM,CAAC,CAAC,KAAK,MAAQ,MAAM,IAAI,SAAS,EAAE;IAE7C,kCAAkC;IAClC,MAAM,gBAAgB,MAAM,GAAG,CAAC,CAAA;QAC9B,MAAM,EAAE,YAAY,EAAE,GAAG,sBAAsB,MAAM;QACrD,OAAO;IACT;IAEA,MAAM,sBAAsB,cAAc,MAAM,GAAG,IAC/C,cAAc,MAAM,CAAC,CAAC,KAAK,OAAS,MAAM,MAAM,KAAK,cAAc,MAAM,GACzE;IAEJ,MAAM,wBAAwB,sBAAsB,IAAI,MAAM,sBAAsB;IAEpF,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA,cAAc;QACd;IACF;AACF;AAKO,SAAS,eAAe,KAAa;QAAE,WAAA,iEAAmB;IAC/D,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP;IACF,GAAG,MAAM,CAAC;AACZ;AAKO,SAAS,iBAAiB,KAAa;QAAE,WAAA,iEAAmB;IACjE,OAAO,AAAC,GAA0B,OAAxB,MAAM,OAAO,CAAC,WAAU;AACpC;AAKO,SAAS,eAAe,QAAgB,EAAE,IAAY;IAC3D,OAAO,AAAC,GAAyB,OAAvB,SAAS,OAAO,CAAC,IAAG,KAAQ,OAAL;AACnC","debugId":null}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-item-card.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { \n  Package, \n  AlertTriangle, \n  Clock, \n  MoreHorizontal,\n  Edit,\n  Move,\n  Plus,\n  Minus,\n  Scan,\n  Eye\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Dropdown } from '@/components/ui/dropdown';\nimport { formatCurrency, formatQuantity } from '@/lib/inventory/calculations';\nimport { cn } from '@/utils';\nimport type { InventoryItem } from '@/lib/inventory/types';\n\ninterface InventoryItemCardProps {\n  item: InventoryItem;\n  onClick?: () => void;\n  compact?: boolean;\n  className?: string;\n}\n\nexport function InventoryItemCard({ item, onClick, compact = false, className }: InventoryItemCardProps) {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const getStockStatus = () => {\n    if (item.currentStock <= 0) {\n      return { \n        status: 'out-of-stock', \n        color: 'bg-red-100 text-red-800 border-red-300', \n        label: 'Out of Stock',\n        icon: AlertTriangle,\n        iconColor: 'text-red-500'\n      };\n    }\n    if (item.currentStock <= item.minimumStock) {\n      return { \n        status: 'low-stock', \n        color: 'bg-orange-100 text-orange-800 border-orange-300', \n        label: 'Low Stock',\n        icon: AlertTriangle,\n        iconColor: 'text-orange-500'\n      };\n    }\n    if (item.maximumStock && item.currentStock >= item.maximumStock) {\n      return { \n        status: 'overstock', \n        color: 'bg-purple-100 text-purple-800 border-purple-300', \n        label: 'Overstock',\n        icon: Package,\n        iconColor: 'text-purple-500'\n      };\n    }\n    return { \n      status: 'normal', \n      color: 'bg-green-100 text-green-800 border-green-300', \n      label: 'In Stock',\n      icon: Package,\n      iconColor: 'text-green-500'\n    };\n  };\n\n  const getStockLevel = () => {\n    if (item.maximumStock) {\n      return (item.currentStock / item.maximumStock) * 100;\n    }\n    if (item.minimumStock > 0) {\n      return Math.min((item.currentStock / (item.minimumStock * 2)) * 100, 100);\n    }\n    return 50; // Default if no thresholds set\n  };\n\n  const isExpiringSoon = () => {\n    // In a real implementation, you'd check actual expiration dates\n    return item.isPerishable && item.shelfLife && item.shelfLife <= 3;\n  };\n\n  const stockStatus = getStockStatus();\n  const stockLevel = getStockLevel();\n  const StatusIcon = stockStatus.icon;\n\n  return (\n    <div\n      className={cn(\n        'bg-white rounded-lg border border-gray-200 transition-all duration-200 hover:shadow-md group',\n        compact ? 'p-4' : 'p-6',\n        onClick && 'cursor-pointer hover:border-blue-300',\n        className\n      )}\n      onClick={onClick}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <h3 className=\"text-sm font-medium text-gray-900 truncate group-hover:text-blue-600\">\n                {item.name}\n              </h3>\n              {item.description && !compact && (\n                <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">\n                  {item.description}\n                </p>\n              )}\n            </div>\n            \n            {/* Actions Dropdown */}\n            <Dropdown\n              trigger={\n                <Button \n                  variant=\"ghost\" \n                  size=\"sm\" \n                  className={cn(\n                    'opacity-0 group-hover:opacity-100 transition-opacity',\n                    isHovered && 'opacity-100'\n                  )}\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <MoreHorizontal className=\"h-4 w-4\" />\n                </Button>\n              }\n              items={[\n                {\n                  icon: Eye,\n                  label: 'View Details',\n                  onClick: () => console.log('View details:', item.id)\n                },\n                {\n                  icon: Edit,\n                  label: 'Edit Item',\n                  onClick: () => console.log('Edit item:', item.id)\n                },\n                {\n                  icon: Move,\n                  label: 'Transfer Stock',\n                  onClick: () => console.log('Transfer stock:', item.id)\n                },\n                {\n                  icon: Scan,\n                  label: 'Scan Barcode',\n                  onClick: () => console.log('Scan barcode:', item.id)\n                }\n              ]}\n            />\n          </div>\n\n          {/* SKU and Supplier */}\n          <div className=\"flex items-center space-x-2 mt-2\">\n            {item.sku && (\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                {item.sku}\n              </Badge>\n            )}\n            {item.supplierName && (\n              <span className=\"text-xs text-gray-500 truncate\">\n                {item.supplierName}\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Item Image Placeholder */}\n        <div className=\"ml-3 flex-shrink-0\">\n          <div className=\"h-12 w-12 bg-gray-100 rounded-lg flex items-center justify-center\">\n            <Package className=\"h-6 w-6 text-gray-400\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Stock Information */}\n      <div className=\"space-y-3\">\n        {/* Current Stock */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <StatusIcon className={cn('h-4 w-4', stockStatus.iconColor)} />\n            <span className=\"text-sm font-medium text-gray-900\">\n              {formatQuantity(item.currentStock, 'units')}\n            </span>\n          </div>\n          \n          <Badge \n            variant=\"secondary\" \n            className={cn('text-xs border', stockStatus.color)}\n          >\n            {stockStatus.label}\n          </Badge>\n        </div>\n\n        {/* Stock Level Bar */}\n        <div className=\"space-y-1\">\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div\n              className={cn(\n                'h-2 rounded-full transition-all',\n                stockLevel <= 25 ? 'bg-red-500' : \n                stockLevel <= 50 ? 'bg-orange-500' : 'bg-green-500'\n              )}\n              style={{ width: `${Math.max(5, Math.min(100, stockLevel))}%` }}\n            />\n          </div>\n          \n          <div className=\"flex justify-between text-xs text-gray-500\">\n            <span>Min: {formatQuantity(item.minimumStock, 'units')}</span>\n            {item.maximumStock && (\n              <span>Max: {formatQuantity(item.maximumStock, 'units')}</span>\n            )}\n          </div>\n        </div>\n\n        {/* Price and Alerts */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <div className=\"text-sm font-medium text-gray-900\">\n              {formatCurrency(item.costPrice)}\n            </div>\n            {item.averageCost && item.averageCost !== item.costPrice && (\n              <div className=\"text-xs text-gray-500\">\n                Avg: {formatCurrency(item.averageCost)}\n              </div>\n            )}\n          </div>\n\n          {/* Alerts */}\n          <div className=\"flex items-center space-x-1\">\n            {isExpiringSoon() && (\n              <Badge variant=\"secondary\" className=\"bg-yellow-100 text-yellow-800 border-yellow-300 text-xs\">\n                <Clock className=\"h-3 w-3 mr-1\" />\n                Expiring\n              </Badge>\n            )}\n            {item.isPerishable && (\n              <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full\" title=\"Perishable item\" />\n            )}\n          </div>\n        </div>\n\n        {/* Quick Actions */}\n        {!compact && (\n          <div className={cn(\n            'flex items-center space-x-2 pt-3 border-t border-gray-100 transition-opacity',\n            isHovered ? 'opacity-100' : 'opacity-0'\n          )}>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              className=\"flex-1 text-xs\"\n              onClick={(e) => {\n                e.stopPropagation();\n                console.log('Quick adjust stock:', item.id);\n              }}\n            >\n              <Plus className=\"h-3 w-3 mr-1\" />\n              Adjust\n            </Button>\n            \n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              className=\"flex-1 text-xs\"\n              onClick={(e) => {\n                e.stopPropagation();\n                console.log('Quick transfer:', item.id);\n              }}\n            >\n              <Move className=\"h-3 w-3 mr-1\" />\n              Transfer\n            </Button>\n            \n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              className=\"w-8 h-8 p-0\"\n              onClick={(e) => {\n                e.stopPropagation();\n                console.log('Quick scan:', item.id);\n              }}\n            >\n              <Scan className=\"h-3 w-3\" />\n            </Button>\n          </div>\n        )}\n\n        {/* Mobile Quick Actions */}\n        {compact && (\n          <div className=\"flex items-center justify-between pt-2 border-t border-gray-100\">\n            <div className=\"text-xs text-gray-500\">\n              Updated {new Date(item.updatedAt).toLocaleDateString()}\n            </div>\n            \n            <div className=\"flex items-center space-x-1\">\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                className=\"w-6 h-6 p-0\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  console.log('Mobile adjust:', item.id);\n                }}\n              >\n                <Plus className=\"h-3 w-3\" />\n              </Button>\n              \n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                className=\"w-6 h-6 p-0\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  console.log('Mobile transfer:', item.id);\n                }}\n              >\n                <Move className=\"h-3 w-3\" />\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Overlay for touch interactions on mobile */}\n      {isHovered && (\n        <div className=\"absolute inset-0 bg-blue-50 bg-opacity-50 rounded-lg pointer-events-none sm:hidden\" />\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1243, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { InventoryItemCard } from './inventory-item-card';\nimport { getInventoryItems } from '@/lib/inventory/data';\nimport type { InventoryItem, InventoryFilters, InventoryResponse } from '@/lib/inventory/types';\n\ninterface InventoryDashboardProps {\n  initialData?: InventoryResponse;\n  initialFilters?: InventoryFilters;\n  view?: 'grid' | 'cards';\n  onItemSelect?: (item: InventoryItem) => void;\n  className?: string;\n}\n\nexport function InventoryDashboard({ \n  initialData, \n  initialFilters, \n  view = 'grid',\n  onItemSelect, \n  className \n}: InventoryDashboardProps) {\n  const [data, setData] = useState<InventoryResponse>(\n    initialData || { data: [], total: 0, page: 1, limit: 50 }\n  );\n  const [loading, setLoading] = useState(!initialData);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!initialData) {\n        setLoading(true);\n        try {\n          const response = await getInventoryItems(initialFilters);\n          setData(response);\n        } catch (error) {\n          console.error('Failed to fetch inventory data:', error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchData();\n  }, [initialFilters, initialData]);\n\n  if (loading) {\n    return (\n      <div className={className}>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 p-6\">\n          {[1, 2, 3, 4, 5, 6, 7, 8].map((i) => (\n            <div key={i} className=\"bg-white rounded-lg border border-gray-200 p-4 animate-pulse\">\n              <div className=\"h-32 bg-gray-200 rounded mb-4\"></div>\n              <div className=\"space-y-2\">\n                <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                <div className=\"h-6 bg-gray-200 rounded w-2/3\"></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  if (data.data.length === 0) {\n    return (\n      <div className={`${className} flex items-center justify-center min-h-96`}>\n        <div className=\"text-center\">\n          <div className=\"h-12 w-12 bg-gray-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n            <span className=\"text-gray-400 text-xl\">📦</span>\n          </div>\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No items found</h3>\n          <p className=\"text-gray-500 mb-4\">\n            Try adjusting your filters or add new inventory items.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <div \n        className={\n          view === 'grid' \n            ? 'grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 p-6'\n            : 'space-y-4 p-6'\n        }\n      >\n        {data.data.map((item) => (\n          <InventoryItemCard\n            key={item.id}\n            item={item}\n            onClick={() => onItemSelect?.(item)}\n            compact={view === 'cards'}\n          />\n        ))}\n      </div>\n\n      {/* Load More */}\n      {data.total > data.data.length && (\n        <div className=\"p-6 text-center\">\n          <button className=\"text-blue-600 hover:text-blue-800 text-sm font-medium\">\n            Load more items ({data.total - data.data.length} remaining)\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAeO,SAAS,mBAAmB,KAMT;QANS,EACjC,WAAW,EACX,cAAc,EACd,OAAO,MAAM,EACb,YAAY,EACZ,SAAS,EACe,GANS;;IAOjC,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAC9B,eAAe;QAAE,MAAM,EAAE;QAAE,OAAO;QAAG,MAAM;QAAG,OAAO;IAAG;IAE1D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,yKAAQ,EAAC,CAAC;IAExC,IAAA,0KAAS;wCAAC;YACR,MAAM;0DAAY;oBAChB,IAAI,CAAC,aAAa;wBAChB,WAAW;wBACX,IAAI;4BACF,MAAM,WAAW,MAAM,IAAA,gJAAiB,EAAC;4BACzC,QAAQ;wBACV,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,mCAAmC;wBACnD,SAAU;4BACR,WAAW;wBACb;oBACF;gBACF;;YAEA;QACF;uCAAG;QAAC;QAAgB;KAAY;IAEhC,IAAI,SAAS;QACX,qBACE,6LAAC;YAAI,WAAW;sBACd,cAAA,6LAAC;gBAAI,WAAU;0BACZ;oBAAC;oBAAG;oBAAG;oBAAG;oBAAG;oBAAG;oBAAG;oBAAG;iBAAE,CAAC,GAAG,CAAC,CAAC,kBAC7B,6LAAC;wBAAY,WAAU;;0CACrB,6LAAC;gCAAI,WAAU;;;;;;0CACf,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAI,WAAU;;;;;;kDACf,6LAAC;wCAAI,WAAU;;;;;;;;;;;;;uBALT;;;;;;;;;;;;;;;IAYpB;IAEA,IAAI,KAAK,IAAI,CAAC,MAAM,KAAK,GAAG;QAC1B,qBACE,6LAAC;YAAI,WAAW,AAAC,GAAY,OAAV,WAAU;sBAC3B,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAK,WAAU;sCAAwB;;;;;;;;;;;kCAE1C,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAM1C;IAEA,qBACE,6LAAC;QAAI,WAAW;;0BACd,6LAAC;gBACC,WACE,SAAS,SACL,4EACA;0BAGL,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,qBACd,6LAAC,6KAAiB;wBAEhB,MAAM;wBACN,SAAS,IAAM,yBAAA,mCAAA,aAAe;wBAC9B,SAAS,SAAS;uBAHb,KAAK,EAAE;;;;;;;;;;YASjB,KAAK,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM,kBAC5B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAO,WAAU;;wBAAwD;wBACtD,KAAK,KAAK,GAAG,KAAK,IAAI,CAAC,MAAM;wBAAC;;;;;;;;;;;;;;;;;;AAM5D;GA9FgB;KAAA","debugId":null}},
    {"offset": {"line": 1466, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'outlined' | 'elevated';\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', padding = 'md', ...props }, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          'rounded-lg bg-card text-card-foreground',\n          {\n            'border border-border': variant === 'default' || variant === 'outlined',\n            'shadow-sm': variant === 'default',\n            'shadow-md': variant === 'elevated',\n            'p-0': padding === 'none',\n            'p-4': padding === 'sm',\n            'p-6': padding === 'md',\n            'p-8': padding === 'lg',\n          },\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\nCard.displayName = 'Card';\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n}\n\nconst CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(\n  ({ className, divider = false, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex flex-col space-y-1.5 p-6',\n        divider && 'border-b border-border',\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardHeader.displayName = 'CardHeader';\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = 'CardTitle';\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n));\nCardDescription.displayName = 'CardDescription';\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  padding?: 'none' | 'sm' | 'md' | 'lg';\n}\n\nconst CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(\n  ({ className, padding = 'md', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        {\n          'p-0': padding === 'none',\n          'p-4': padding === 'sm',\n          'p-6': padding === 'md',\n          'p-8': padding === 'lg',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardContent.displayName = 'CardContent';\n\nexport interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  divider?: boolean;\n  justify?: 'start' | 'center' | 'end' | 'between';\n}\n\nconst CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(\n  ({ className, divider = false, justify = 'start', ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        'flex items-center p-6 pt-0',\n        {\n          'border-t border-border pt-6': divider,\n          'justify-start': justify === 'start',\n          'justify-center': justify === 'center',\n          'justify-end': justify === 'end',\n          'justify-between': justify === 'between',\n        },\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCardFooter.displayName = 'CardFooter';\n\n// Specialized card variants for common use cases\nexport interface ActionCardProps extends CardProps {\n  title: string;\n  description?: string;\n  action: React.ReactNode;\n  icon?: React.ReactNode;\n}\n\nfunction ActionCard({\n  title,\n  description,\n  action,\n  icon,\n  className,\n  ...props\n}: ActionCardProps) {\n  return (\n    <Card className={cn('transition-all hover:shadow-md', className)} {...props}>\n      <CardHeader>\n        <div className=\"flex items-center space-x-4\">\n          {icon && (\n            <div className=\"flex-shrink-0 p-2 rounded-lg bg-primary/10 text-primary\">\n              {icon}\n            </div>\n          )}\n          <div className=\"flex-1 min-w-0\">\n            <CardTitle className=\"text-lg\">{title}</CardTitle>\n            {description && (\n              <CardDescription>{description}</CardDescription>\n            )}\n          </div>\n          <div className=\"flex-shrink-0\">{action}</div>\n        </div>\n      </CardHeader>\n    </Card>\n  );\n}\n\nexport interface MetricCardProps extends CardProps {\n  label: string;\n  value: string | number;\n  change?: {\n    value: number;\n    type: 'increase' | 'decrease';\n    period?: string;\n  };\n  icon?: React.ReactNode;\n  loading?: boolean;\n}\n\nfunction MetricCard({\n  label,\n  value,\n  change,\n  icon,\n  loading = false,\n  className,\n  ...props\n}: MetricCardProps) {\n  return (\n    <Card className={className} {...props}>\n      <CardContent>\n        <div className=\"flex items-center justify-between space-y-0 pb-2\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{label}</p>\n          {icon && <div className=\"text-muted-foreground\">{icon}</div>}\n        </div>\n        <div>\n          {loading ? (\n            <div className=\"h-8 w-24 bg-muted rounded animate-pulse\" />\n          ) : (\n            <div className=\"text-2xl font-bold\">{value}</div>\n          )}\n          {change && !loading && (\n            <p\n              className={cn(\n                'text-xs',\n                change.type === 'increase'\n                  ? 'text-green-600'\n                  : 'text-destructive'\n              )}\n            >\n              {change.type === 'increase' ? '+' : '-'}\n              {Math.abs(change.value)}%\n              {change.period && ` from ${change.period}`}\n            </p>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  ActionCard,\n  MetricCard,\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1758, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\n\nexport interface SkeletonProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'circular' | 'text' | 'card';\n  width?: string | number;\n  height?: string | number;\n  lines?: number; // For text variant\n  animate?: boolean;\n}\n\nfunction Skeleton({\n  className,\n  variant = 'default',\n  width,\n  height,\n  lines = 1,\n  animate = true,\n  style,\n  ...props\n}: SkeletonProps) {\n  const baseClasses = cn(\n    'bg-muted',\n    animate && 'animate-pulse',\n    {\n      'rounded-md': variant === 'default' || variant === 'card',\n      'rounded-full': variant === 'circular',\n      'rounded': variant === 'text',\n    },\n    className\n  );\n\n  const inlineStyles = {\n    width: width,\n    height: height,\n    ...style,\n  };\n\n  // For text variant with multiple lines\n  if (variant === 'text' && lines > 1) {\n    return (\n      <div className=\"space-y-2\" {...props}>\n        {Array.from({ length: lines }, (_, i) => (\n          <div\n            key={i}\n            className={cn(\n              baseClasses,\n              i === lines - 1 ? 'w-3/4' : 'w-full' // Last line is shorter\n            )}\n            style={{\n              height: height || '1rem',\n              width: i === lines - 1 ? '75%' : width || '100%',\n            }}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // Default height based on variant\n  const getDefaultHeight = () => {\n    if (height) return height;\n    switch (variant) {\n      case 'text':\n        return '1rem';\n      case 'circular':\n        return '2.5rem';\n      case 'card':\n        return '8rem';\n      default:\n        return '1.25rem';\n    }\n  };\n\n  // Default width based on variant\n  const getDefaultWidth = () => {\n    if (width) return width;\n    switch (variant) {\n      case 'circular':\n        return '2.5rem';\n      default:\n        return '100%';\n    }\n  };\n\n  const defaultHeight = getDefaultHeight();\n  const defaultWidth = getDefaultWidth();\n\n  return (\n    <div\n      className={baseClasses}\n      style={{\n        ...inlineStyles,\n        height: inlineStyles.height || defaultHeight,\n        width: inlineStyles.width || defaultWidth,\n      }}\n      {...props}\n    />\n  );\n}\n\n// Predefined skeleton patterns for common use cases\nexport function SkeletonCard({ className, ...props }: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      <Skeleton variant=\"card\" height=\"12rem\" />\n      <div className=\"space-y-2\">\n        <Skeleton height=\"1.25rem\" />\n        <Skeleton height=\"1rem\" width=\"80%\" />\n      </div>\n    </div>\n  );\n}\n\nexport function SkeletonAvatar({ \n  className, \n  size = 'md',\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { size?: 'sm' | 'md' | 'lg' }) {\n  const sizeMap = {\n    sm: '2rem',\n    md: '2.5rem',\n    lg: '3rem',\n  };\n  \n  return (\n    <Skeleton\n      variant=\"circular\"\n      width={sizeMap[size]}\n      height={sizeMap[size]}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonText({ \n  lines = 3,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'>) {\n  return (\n    <Skeleton\n      variant=\"text\"\n      lines={lines}\n      className={className}\n      {...props}\n    />\n  );\n}\n\nexport function SkeletonTable({ \n  rows = 5,\n  columns = 4,\n  className,\n  ...props \n}: Omit<SkeletonProps, 'variant'> & { rows?: number; columns?: number }) {\n  return (\n    <div className={cn('space-y-3', className)} {...props}>\n      {/* Header */}\n      <div className=\"flex space-x-4\">\n        {Array.from({ length: columns }, (_, i) => (\n          <Skeleton key={`header-${i}`} height=\"1.5rem\" className=\"flex-1\" />\n        ))}\n      </div>\n      {/* Rows */}\n      {Array.from({ length: rows }, (_, rowIndex) => (\n        <div key={`row-${rowIndex}`} className=\"flex space-x-4\">\n          {Array.from({ length: columns }, (_, colIndex) => (\n            <Skeleton key={`cell-${rowIndex}-${colIndex}`} height=\"1.25rem\" className=\"flex-1\" />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport { Skeleton };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1996, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/ui/stat-card.tsx"],"sourcesContent":["import * as React from 'react';\nimport { cn } from './utils';\nimport { Card, CardContent } from './card';\nimport { Skeleton } from './skeleton';\nimport { TrendingUp, TrendingDown, Minus } from 'lucide-react';\n\nexport interface StatCardProps {\n  title: string;\n  value: string | number;\n  subtitle?: string;\n  icon?: React.ReactNode;\n  trend?: {\n    value: number;\n    direction: 'up' | 'down' | 'neutral';\n    period?: string;\n  };\n  loading?: boolean;\n  className?: string;\n  variant?: 'default' | 'compact';\n  color?: 'default' | 'primary' | 'success' | 'warning' | 'error';\n  onClick?: () => void;\n  actions?: React.ReactNode;\n}\n\nfunction StatCard({\n  title,\n  value,\n  subtitle,\n  icon,\n  trend,\n  loading = false,\n  className,\n  variant = 'default',\n  color = 'default',\n  onClick,\n  actions,\n}: StatCardProps) {\n  const colorClasses = {\n    default: '',\n    primary: 'border-primary/20 bg-primary/5',\n    success: 'border-green-500/20 bg-green-500/5',\n    warning: 'border-yellow-500/20 bg-yellow-500/5',\n    error: 'border-destructive/20 bg-destructive/5',\n  };\n\n  const trendClasses = {\n    up: 'text-green-600 bg-green-100 dark:bg-green-900/20 dark:text-green-400',\n    down: 'text-destructive bg-destructive/10 dark:bg-destructive/10 dark:text-destructive',\n    neutral: 'text-muted-foreground bg-muted',\n  };\n\n  const getTrendIcon = (direction: 'up' | 'down' | 'neutral') => {\n    switch (direction) {\n      case 'up':\n        return <TrendingUp className=\"h-3 w-3\" />;\n      case 'down':\n        return <TrendingDown className=\"h-3 w-3\" />;\n      case 'neutral':\n        return <Minus className=\"h-3 w-3\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <Card className={cn(colorClasses[color], className)}>\n        <CardContent className={variant === 'compact' ? 'p-4' : 'p-6'}>\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <Skeleton height=\"1rem\" width=\"60%\" />\n              {icon && <Skeleton variant=\"circular\" width=\"2rem\" height=\"2rem\" />}\n            </div>\n            <Skeleton height=\"2rem\" width=\"40%\" />\n            {subtitle && <Skeleton height=\"0.875rem\" width=\"50%\" />}\n            {trend && (\n              <div className=\"flex items-center space-x-1\">\n                <Skeleton variant=\"circular\" width=\"1rem\" height=\"1rem\" />\n                <Skeleton height=\"0.875rem\" width=\"30%\" />\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      className={cn(\n        'relative transition-all duration-200',\n        colorClasses[color],\n        onClick && 'cursor-pointer hover:shadow-md',\n        className\n      )}\n      onClick={onClick}\n    >\n      <CardContent className={variant === 'compact' ? 'p-4' : 'p-6'}>\n        <div className=\"space-y-3\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between\">\n            <p className=\"text-sm font-medium text-muted-foreground truncate\">\n              {title}\n            </p>\n            <div className=\"flex items-center space-x-2\">\n              {icon && (\n                <div className={cn(\n                  'p-2 rounded-lg',\n                  color === 'default' ? 'bg-muted text-muted-foreground' : 'bg-background/50'\n                )}>\n                  {icon}\n                </div>\n              )}\n              {actions && (\n                <div className=\"flex items-center\">\n                  {actions}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Value */}\n          <div>\n            <div className={cn(\n              'font-bold tracking-tight',\n              variant === 'compact' ? 'text-xl' : 'text-2xl lg:text-3xl'\n            )}>\n              {value}\n            </div>\n            {subtitle && (\n              <p className=\"text-xs text-muted-foreground mt-1\">\n                {subtitle}\n              </p>\n            )}\n          </div>\n\n          {/* Trend */}\n          {trend && (\n            <div className=\"flex items-center space-x-1\">\n              <div className={cn(\n                'inline-flex items-center space-x-1 rounded-full px-2 py-0.5 text-xs font-medium',\n                trendClasses[trend.direction]\n              )}>\n                {getTrendIcon(trend.direction)}\n                <span>\n                  {trend.direction === 'up' ? '+' : trend.direction === 'down' ? '-' : ''}\n                  {Math.abs(trend.value)}%\n                </span>\n              </div>\n              {trend.period && (\n                <span className=\"text-xs text-muted-foreground\">\n                  vs {trend.period}\n                </span>\n              )}\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n// Specialized stat card components\nexport interface MetricGridProps {\n  metrics: StatCardProps[];\n  loading?: boolean;\n  className?: string;\n  columns?: 1 | 2 | 3 | 4;\n}\n\nfunction MetricGrid({\n  metrics,\n  loading = false,\n  className,\n  columns = 4,\n}: MetricGridProps) {\n  const gridClasses = {\n    1: 'grid-cols-1',\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',\n  };\n\n  return (\n    <div className={cn(\n      'grid gap-4',\n      gridClasses[columns],\n      className\n    )}>\n      {metrics.map((metric, index) => (\n        <StatCard\n          key={index}\n          {...metric}\n          loading={loading}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport interface ComparisonStatCardProps {\n  title: string;\n  current: {\n    label: string;\n    value: string | number;\n  };\n  previous: {\n    label: string;\n    value: string | number;\n  };\n  icon?: React.ReactNode;\n  loading?: boolean;\n  className?: string;\n}\n\nfunction ComparisonStatCard({\n  title,\n  current,\n  previous,\n  icon,\n  loading = false,\n  className,\n}: ComparisonStatCardProps) {\n  if (loading) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center justify-between\">\n              <Skeleton height=\"1rem\" width=\"60%\" />\n              {icon && <Skeleton variant=\"circular\" width=\"2rem\" height=\"2rem\" />}\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-1\">\n                <Skeleton height=\"0.875rem\" width=\"70%\" />\n                <Skeleton height=\"1.5rem\" width=\"50%\" />\n              </div>\n              <div className=\"space-y-1\">\n                <Skeleton height=\"0.875rem\" width=\"70%\" />\n                <Skeleton height=\"1.5rem\" width=\"50%\" />\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardContent className=\"p-6\">\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <p className=\"text-sm font-medium text-muted-foreground\">\n              {title}\n            </p>\n            {icon && (\n              <div className=\"p-2 rounded-lg bg-muted text-muted-foreground\">\n                {icon}\n              </div>\n            )}\n          </div>\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <p className=\"text-xs text-muted-foreground\">{current.label}</p>\n              <p className=\"text-xl font-bold\">{current.value}</p>\n            </div>\n            <div>\n              <p className=\"text-xs text-muted-foreground\">{previous.label}</p>\n              <p className=\"text-xl font-bold\">{previous.value}</p>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport { StatCard, MetricGrid, ComparisonStatCard };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-metrics-cards.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { TrendingUp, TrendingDown, Package, AlertTriangle, Trash2, DollarSign } from 'lucide-react';\nimport { StatCard } from '@/components/ui/stat-card';\nimport { formatCurrency } from '@/lib/inventory/calculations';\nimport { getInventoryMetrics } from '@/lib/inventory/data';\nimport type { InventoryMetrics } from '@/lib/inventory/types';\n\ninterface InventoryMetricsCardsProps {\n  initialMetrics?: InventoryMetrics;\n  className?: string;\n}\n\nexport function InventoryMetricsCards({ initialMetrics, className }: InventoryMetricsCardsProps) {\n  const [metrics, setMetrics] = useState<InventoryMetrics | null>(initialMetrics || null);\n  const [loading, setLoading] = useState(!initialMetrics);\n\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        const data = await getInventoryMetrics();\n        setMetrics(data);\n      } catch (error) {\n        console.error('Failed to fetch metrics:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Only fetch if we don't have initial data\n    if (!initialMetrics) {\n      fetchMetrics();\n    }\n\n    // Set up real-time updates every 30 seconds\n    const interval = setInterval(fetchMetrics, 30 * 1000);\n    return () => clearInterval(interval);\n  }, [initialMetrics]);\n\n  if (loading || !metrics) {\n    return (\n      <div className={`grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 ${className}`}>\n        {[1, 2, 3, 4].map((i) => (\n          <div key={i} className=\"bg-white p-6 rounded-lg border border-gray-200 animate-pulse\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-2\">\n                <div className=\"h-4 bg-gray-200 rounded w-24\"></div>\n                <div className=\"h-8 bg-gray-200 rounded w-16\"></div>\n              </div>\n              <div className=\"h-8 w-8 bg-gray-200 rounded-full\"></div>\n            </div>\n            <div className=\"mt-4\">\n              <div className=\"h-3 bg-gray-200 rounded w-full\"></div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  const getStockStatusColor = (lowStock: number, outOfStock: number, total: number) => {\n    const criticalItems = outOfStock;\n    const warningItems = lowStock - outOfStock;\n    \n    if (criticalItems > 0) return 'text-red-600';\n    if (warningItems > 0) return 'text-orange-600';\n    return 'text-green-600';\n  };\n\n  const getStockStatusText = (lowStock: number, outOfStock: number, total: number) => {\n    if (outOfStock > 0) return `${outOfStock} out of stock`;\n    if (lowStock > 0) return `${lowStock} low stock`;\n    return 'Stock levels good';\n  };\n\n  const getTurnoverTrend = (rate: number) => {\n    // Optimal turnover rate for restaurants is typically 4-12 times per year\n    if (rate >= 8) return { icon: TrendingUp, color: 'text-green-600', label: 'Excellent' };\n    if (rate >= 4) return { icon: TrendingUp, color: 'text-blue-600', label: 'Good' };\n    if (rate >= 2) return { icon: TrendingDown, color: 'text-orange-600', label: 'Slow' };\n    return { icon: TrendingDown, color: 'text-red-600', label: 'Poor' };\n  };\n\n  const getWasteTrend = (wasteValue: number) => {\n    // Assuming threshold of $500/week for waste\n    if (wasteValue > 1000) return { icon: TrendingUp, color: 'text-red-600', trend: '+15%' };\n    if (wasteValue > 500) return { icon: TrendingUp, color: 'text-orange-600', trend: '+5%' };\n    return { icon: TrendingDown, color: 'text-green-600', trend: '-8%' };\n  };\n\n  const stockStatusColor = getStockStatusColor(metrics.lowStockItems, metrics.outOfStockItems, metrics.totalItems);\n  const stockStatusText = getStockStatusText(metrics.lowStockItems, metrics.outOfStockItems, metrics.totalItems);\n  const turnoverTrend = getTurnoverTrend(metrics.turnoverRate);\n  const wasteTrend = getWasteTrend(metrics.wasteValue);\n\n  return (\n    <div className={`grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 ${className}`}>\n      {/* Total Inventory Value */}\n      <StatCard\n        title=\"Total Value\"\n        value={formatCurrency(metrics.totalValue)}\n        icon={<DollarSign className=\"h-4 w-4\" />}\n        subtitle={`${metrics.totalItems} items`}\n        trend={{\n          value: 2.3,\n          direction: 'up',\n          period: 'last week'\n        }}\n        className=\"bg-gradient-to-r from-blue-50 to-blue-100 border-blue-200\"\n      />\n\n      {/* Stock Status */}\n      <StatCard\n        title=\"Stock Status\"\n        value={`${metrics.totalItems - metrics.lowStockItems} of ${metrics.totalItems}`}\n        icon={<Package className=\"h-4 w-4\" />}\n        subtitle={stockStatusText}\n        className=\"bg-gradient-to-r from-green-50 to-green-100 border-green-200\"\n      />\n\n      {/* Expiring Items */}\n      <StatCard\n        title=\"Expiring Soon\"\n        value={metrics.expiringItems.toString()}\n        icon={<AlertTriangle className=\"h-4 w-4\" />}\n        subtitle={`Items expiring in 3 days`}\n        className=\"bg-gradient-to-r from-orange-50 to-orange-100 border-orange-200\"\n      />\n\n      {/* Weekly Waste */}\n      <StatCard\n        title=\"Weekly Waste\"\n        value={formatCurrency(metrics.wasteValue)}\n        icon={<Trash2 className=\"h-4 w-4\" />}\n        subtitle=\"This week's total\"\n        trend={{\n          value: 8,\n          direction: wasteTrend.color.includes('green') ? 'down' : 'up',\n          period: 'last week'\n        }}\n        className=\"bg-gradient-to-r from-red-50 to-red-100 border-red-200\"\n      />\n\n      {/* Additional metrics row for larger screens */}\n      <div className=\"lg:col-span-4 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-4\">\n        {/* Inventory Turnover */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Turnover Rate</p>\n              <div className=\"flex items-baseline\">\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {metrics.turnoverRate.toFixed(1)}x\n                </p>\n                <p className=\"text-sm text-gray-500 ml-1\">annually</p>\n              </div>\n            </div>\n            {React.createElement(turnoverTrend.icon, { className: `h-5 w-5 ${turnoverTrend.color}` })}\n          </div>\n          <div className=\"mt-2\">\n            <p className={`text-xs ${turnoverTrend.color}`}>\n              {turnoverTrend.label} turnover rate\n            </p>\n          </div>\n        </div>\n\n        {/* Days to Turnover */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Avg Days to Turn</p>\n              <div className=\"flex items-baseline\">\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {Math.round(metrics.averageDaysToTurnover)}\n                </p>\n                <p className=\"text-sm text-gray-500 ml-1\">days</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-2\">\n            <p className=\"text-xs text-gray-500\">\n              Average inventory cycle\n            </p>\n          </div>\n        </div>\n\n        {/* Low Stock Items */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Low Stock</p>\n              <p className=\"text-2xl font-semibold text-orange-600\">\n                {metrics.lowStockItems}\n              </p>\n            </div>\n            <Package className=\"h-5 w-5 text-orange-500\" />\n          </div>\n          <div className=\"mt-2\">\n            <p className=\"text-xs text-gray-500\">\n              Items need reordering\n            </p>\n          </div>\n        </div>\n\n        {/* Out of Stock Items */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Out of Stock</p>\n              <p className=\"text-2xl font-semibold text-red-600\">\n                {metrics.outOfStockItems}\n              </p>\n            </div>\n            <AlertTriangle className=\"h-5 w-5 text-red-500\" />\n          </div>\n          <div className=\"mt-2\">\n            <p className=\"text-xs text-gray-500\">\n              Items unavailable\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3126, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-filters.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Search, Filter, X, Package, Users, MapPin, Tag } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { cn } from '@/utils';\nimport { getProductCategories, getSuppliers, getLocations } from '@/lib/inventory/data';\nimport type { InventoryFilters as InventoryFiltersType, ProductCategory, Supplier, Location } from '@/lib/inventory/types';\n\ninterface InventoryFiltersProps {\n  initialFilters?: InventoryFiltersType;\n  onFiltersChange?: (filters: InventoryFiltersType) => void;\n  className?: string;\n}\n\nexport function InventoryFilters({ initialFilters, onFiltersChange, className }: InventoryFiltersProps) {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  \n  const [filters, setFilters] = useState<InventoryFiltersType>(initialFilters || {});\n  const [categories, setCategories] = useState<ProductCategory[]>([]);\n  const [suppliers, setSuppliers] = useState<Supplier[]>([]);\n  const [locations, setLocations] = useState<Location[]>([]);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Load reference data\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const [categoriesData, suppliersData, locationsData] = await Promise.all([\n          getProductCategories(),\n          getSuppliers(),\n          getLocations(),\n        ]);\n        \n        setCategories(categoriesData);\n        setSuppliers(suppliersData.data);\n        setLocations(locationsData);\n      } catch (error) {\n        console.error('Failed to load filter data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  // Update URL when filters change\n  useEffect(() => {\n    const params = new URLSearchParams(searchParams.toString());\n    \n    // Clear existing filter params\n    ['search', 'category', 'supplier', 'location', 'status', 'lowStock', 'outOfStock', 'expiring'].forEach(key => {\n      params.delete(key);\n    });\n\n    // Add current filters\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined && value !== null && value !== '') {\n        if (typeof value === 'boolean') {\n          if (value) params.set(key, 'true');\n        } else if (key === 'categoryId') {\n          params.set('category', value.toString());\n        } else if (key === 'supplierId') {\n          params.set('supplier', value.toString());\n        } else if (key === 'locationId') {\n          params.set('location', value.toString());\n        } else {\n          params.set(key, value.toString());\n        }\n      }\n    });\n\n    router.push(`?${params.toString()}`, { scroll: false });\n    onFiltersChange?.(filters);\n  }, [filters, router, searchParams, onFiltersChange]);\n\n  const updateFilter = (key: keyof InventoryFiltersType, value: any) => {\n    setFilters(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n  };\n\n  const clearFilter = (key: keyof InventoryFiltersType) => {\n    setFilters(prev => {\n      const newFilters = { ...prev };\n      delete newFilters[key];\n      return newFilters;\n    });\n  };\n\n  const getActiveFiltersCount = () => {\n    return Object.entries(filters).filter(([key, value]) => {\n      if (key === 'search') return value && value.trim() !== '';\n      return value !== undefined && value !== null && value !== '';\n    }).length;\n  };\n\n  const quickFilters = [\n    { key: 'lowStock', label: 'Low Stock', icon: Package, color: 'bg-orange-100 text-orange-800 border-orange-300' },\n    { key: 'outOfStock', label: 'Out of Stock', icon: Package, color: 'bg-red-100 text-red-800 border-red-300' },\n    { key: 'expiring', label: 'Expiring Soon', icon: Package, color: 'bg-yellow-100 text-yellow-800 border-yellow-300' },\n  ];\n\n  if (loading) {\n    return (\n      <div className={`bg-white p-4 rounded-lg border border-gray-200 ${className}`}>\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          {[1, 2, 3, 4].map((i) => (\n            <div key={i} className=\"h-10 bg-gray-200 rounded animate-pulse flex-1\"></div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white rounded-lg border border-gray-200 ${className}`}>\n      <div className=\"p-4\">\n        {/* Main filters row */}\n        <div className=\"flex flex-col lg:flex-row gap-4\">\n          {/* Search */}\n          <div className=\"relative flex-1 max-w-md\">\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <Search className=\"h-4 w-4 text-gray-400\" />\n            </div>\n            <Input\n              type=\"search\"\n              placeholder=\"Search items, SKUs, barcodes...\"\n              value={filters.search || ''}\n              onChange={(e) => updateFilter('search', e.target.value)}\n              className=\"pl-10\"\n            />\n          </div>\n\n          {/* Category Filter */}\n          <select\n            value={filters.categoryId || ''}\n            onChange={(e) => updateFilter('categoryId', e.target.value || undefined)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map((category) => (\n              <option key={category.id} value={category.id}>\n                {category.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Supplier Filter */}\n          <select\n            value={filters.supplierId || ''}\n            onChange={(e) => updateFilter('supplierId', e.target.value || undefined)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">All Suppliers</option>\n            {suppliers.map((supplier) => (\n              <option key={supplier.id} value={supplier.id}>\n                {supplier.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Location Filter */}\n          <select\n            value={filters.locationId || ''}\n            onChange={(e) => updateFilter('locationId', e.target.value || undefined)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"\">All Locations</option>\n            {locations.map((location) => (\n              <option key={location.id} value={location.id}>\n                {location.name}\n              </option>\n            ))}\n          </select>\n\n          {/* Advanced Filters Toggle */}\n          <Button\n            variant=\"outline\"\n            onClick={() => setShowAdvanced(!showAdvanced)}\n            className=\"flex items-center\"\n          >\n            <Filter className=\"h-4 w-4 mr-1\" />\n            Filters\n            {getActiveFiltersCount() > 0 && (\n              <Badge variant=\"secondary\" className=\"ml-2 px-1.5 py-0.5 text-xs\">\n                {getActiveFiltersCount()}\n              </Badge>\n            )}\n          </Button>\n        </div>\n\n        {/* Quick Filter Tags */}\n        <div className=\"flex flex-wrap gap-2 mt-4\">\n          {quickFilters.map((filter) => {\n            const isActive = filters[filter.key as keyof InventoryFiltersType];\n            const Icon = filter.icon;\n            \n            return (\n              <button\n                key={filter.key}\n                onClick={() => updateFilter(filter.key as keyof InventoryFiltersType, !isActive)}\n                className={cn(\n                  'flex items-center px-3 py-1.5 rounded-full text-sm font-medium border transition-colors',\n                  isActive\n                    ? filter.color\n                    : 'bg-gray-50 text-gray-600 border-gray-200 hover:bg-gray-100'\n                )}\n              >\n                <Icon className=\"h-3 w-3 mr-1\" />\n                {filter.label}\n              </button>\n            );\n          })}\n        </div>\n\n        {/* Advanced Filters Panel */}\n        {showAdvanced && (\n          <div className=\"mt-4 pt-4 border-t border-gray-200\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {/* Status Filter */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Status\n                </label>\n                <select\n                  value={filters.status || ''}\n                  onChange={(e) => updateFilter('status', e.target.value as any || undefined)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"\">All Status</option>\n                  <option value=\"active\">Active</option>\n                  <option value=\"inactive\">Inactive</option>\n                  <option value=\"discontinued\">Discontinued</option>\n                </select>\n              </div>\n\n              {/* Price Range */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Price Range\n                </label>\n                <div className=\"flex space-x-2\">\n                  <Input\n                    type=\"number\"\n                    placeholder=\"Min\"\n                    value={filters.priceRange?.[0] || ''}\n                    onChange={(e) => {\n                      const min = e.target.value ? parseFloat(e.target.value) : undefined;\n                      const max = filters.priceRange?.[1];\n                      updateFilter('priceRange', min !== undefined || max !== undefined ? [min, max] : undefined);\n                    }}\n                    className=\"flex-1\"\n                  />\n                  <Input\n                    type=\"number\"\n                    placeholder=\"Max\"\n                    value={filters.priceRange?.[1] || ''}\n                    onChange={(e) => {\n                      const max = e.target.value ? parseFloat(e.target.value) : undefined;\n                      const min = filters.priceRange?.[0];\n                      updateFilter('priceRange', min !== undefined || max !== undefined ? [min, max] : undefined);\n                    }}\n                    className=\"flex-1\"\n                  />\n                </div>\n              </div>\n\n              {/* Tags Filter */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Tags\n                </label>\n                <Input\n                  placeholder=\"Enter tags...\"\n                  value={filters.tags?.join(', ') || ''}\n                  onChange={(e) => {\n                    const tags = e.target.value.split(',').map(t => t.trim()).filter(Boolean);\n                    updateFilter('tags', tags.length > 0 ? tags : undefined);\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Active Filters Display */}\n        {getActiveFiltersCount() > 0 && (\n          <div className=\"mt-4 pt-4 border-t border-gray-200\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex flex-wrap gap-2\">\n                <span className=\"text-sm font-medium text-gray-700 mr-2\">Active filters:</span>\n                \n                {filters.search && (\n                  <Badge variant=\"secondary\" className=\"flex items-center\">\n                    Search: \"{filters.search}\"\n                    <X\n                      className=\"h-3 w-3 ml-1 cursor-pointer\"\n                      onClick={() => clearFilter('search')}\n                    />\n                  </Badge>\n                )}\n\n                {filters.categoryId && (\n                  <Badge variant=\"secondary\" className=\"flex items-center\">\n                    {categories.find(c => c.id === filters.categoryId)?.name}\n                    <X\n                      className=\"h-3 w-3 ml-1 cursor-pointer\"\n                      onClick={() => clearFilter('categoryId')}\n                    />\n                  </Badge>\n                )}\n\n                {filters.supplierId && (\n                  <Badge variant=\"secondary\" className=\"flex items-center\">\n                    {suppliers.find(s => s.id === filters.supplierId)?.name}\n                    <X\n                      className=\"h-3 w-3 ml-1 cursor-pointer\"\n                      onClick={() => clearFilter('supplierId')}\n                    />\n                  </Badge>\n                )}\n\n                {filters.locationId && (\n                  <Badge variant=\"secondary\" className=\"flex items-center\">\n                    {locations.find(l => l.id === filters.locationId)?.name}\n                    <X\n                      className=\"h-3 w-3 ml-1 cursor-pointer\"\n                      onClick={() => clearFilter('locationId')}\n                    />\n                  </Badge>\n                )}\n\n                {Object.entries(filters).map(([key, value]) => {\n                  if (key === 'lowStock' && value) {\n                    return (\n                      <Badge key={key} variant=\"secondary\" className=\"flex items-center\">\n                        Low Stock\n                        <X\n                          className=\"h-3 w-3 ml-1 cursor-pointer\"\n                          onClick={() => clearFilter(key as keyof InventoryFiltersType)}\n                        />\n                      </Badge>\n                    );\n                  }\n                  return null;\n                })}\n              </div>\n\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={clearFilters}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                Clear all\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3841, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/inventory-table.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { \n  MoreHorizontal, \n  Edit, \n  Trash2, \n  Package, \n  AlertTriangle,\n  TrendingUp,\n  TrendingDown,\n  Scan,\n  Move,\n  Plus,\n  Minus\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Dropdown } from '@/components/ui/dropdown';\nimport { formatCurrency, formatQuantity } from '@/lib/inventory/calculations';\nimport { getInventoryItems } from '@/lib/inventory/data';\nimport type { InventoryItem, InventoryFilters, InventoryResponse } from '@/lib/inventory/types';\nimport { cn } from '@/utils';\n\ninterface InventoryTableProps {\n  initialData?: InventoryResponse;\n  initialFilters?: InventoryFilters;\n  onItemSelect?: (item: InventoryItem) => void;\n  className?: string;\n}\n\nexport function InventoryTable({ initialData, initialFilters, onItemSelect, className }: InventoryTableProps) {\n  const [data, setData] = useState<InventoryResponse>(initialData || { data: [], total: 0, page: 1, limit: 50 });\n  const [loading, setLoading] = useState(!initialData);\n  const [selectedItems, setSelectedItems] = useState<Set<string>>(new Set());\n  const [sortConfig, setSortConfig] = useState<{ key: string; direction: 'asc' | 'desc' } | null>(null);\n\n  // Refetch data when filters change\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!initialData) {\n        setLoading(true);\n        try {\n          const response = await getInventoryItems(initialFilters);\n          setData(response);\n        } catch (error) {\n          console.error('Failed to fetch inventory data:', error);\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n\n    fetchData();\n  }, [initialFilters, initialData]);\n\n  const getStockStatus = (item: InventoryItem) => {\n    if (item.currentStock <= 0) {\n      return { status: 'out-of-stock', color: 'bg-red-100 text-red-800 border-red-300', label: 'Out of Stock' };\n    }\n    if (item.currentStock <= item.minimumStock) {\n      return { status: 'low-stock', color: 'bg-orange-100 text-orange-800 border-orange-300', label: 'Low Stock' };\n    }\n    if (item.maximumStock && item.currentStock >= item.maximumStock) {\n      return { status: 'overstock', color: 'bg-purple-100 text-purple-800 border-purple-300', label: 'Overstock' };\n    }\n    return { status: 'normal', color: 'bg-green-100 text-green-800 border-green-300', label: 'In Stock' };\n  };\n\n  const getStockLevel = (item: InventoryItem) => {\n    if (item.maximumStock) {\n      return (item.currentStock / item.maximumStock) * 100;\n    }\n    if (item.minimumStock > 0) {\n      return Math.min((item.currentStock / (item.minimumStock * 2)) * 100, 100);\n    }\n    return 50; // Default if no thresholds set\n  };\n\n  const handleSort = (key: string) => {\n    setSortConfig(current => ({\n      key,\n      direction: current?.key === key && current.direction === 'asc' ? 'desc' : 'asc'\n    }));\n  };\n\n  const handleSelectItem = (itemId: string) => {\n    setSelectedItems(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(itemId)) {\n        newSet.delete(itemId);\n      } else {\n        newSet.add(itemId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleSelectAll = () => {\n    if (selectedItems.size === data.data.length) {\n      setSelectedItems(new Set());\n    } else {\n      setSelectedItems(new Set(data.data.map(item => item.id)));\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className={`bg-white rounded-lg border border-gray-200 ${className}`}>\n        <div className=\"p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-4 bg-gray-200 rounded w-1/4 mb-4\"></div>\n            <div className=\"space-y-3\">\n              {[1, 2, 3, 4, 5].map((i) => (\n                <div key={i} className=\"h-16 bg-gray-200 rounded\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`bg-white rounded-lg border border-gray-200 ${className}`}>\n      {/* Table Header */}\n      <div className=\"px-6 py-4 border-b border-gray-200\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Inventory Items</h3>\n            <Badge variant=\"secondary\">{data.total} items</Badge>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            {selectedItems.size > 0 && (\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm text-gray-600\">\n                  {selectedItems.size} selected\n                </span>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Move className=\"h-4 w-4 mr-1\" />\n                  Transfer\n                </Button>\n                <Button size=\"sm\" variant=\"outline\">\n                  <Package className=\"h-4 w-4 mr-1\" />\n                  Adjust Stock\n                </Button>\n              </div>\n            )}\n            \n            <Button size=\"sm\">\n              <Plus className=\"h-4 w-4 mr-1\" />\n              Add Item\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Table */}\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.size === data.data.length && data.data.length > 0}\n                  onChange={handleSelectAll}\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                />\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                <button\n                  onClick={() => handleSort('name')}\n                  className=\"flex items-center space-x-1 hover:text-gray-700\"\n                >\n                  <span>Item</span>\n                  {sortConfig?.key === 'name' && (\n                    sortConfig.direction === 'asc' ? <TrendingUp className=\"h-3 w-3\" /> : <TrendingDown className=\"h-3 w-3\" />\n                  )}\n                </button>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                SKU / Barcode\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                <button\n                  onClick={() => handleSort('currentStock')}\n                  className=\"flex items-center space-x-1 hover:text-gray-700\"\n                >\n                  <span>Stock Level</span>\n                  {sortConfig?.key === 'currentStock' && (\n                    sortConfig.direction === 'asc' ? <TrendingUp className=\"h-3 w-3\" /> : <TrendingDown className=\"h-3 w-3\" />\n                  )}\n                </button>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                <button\n                  onClick={() => handleSort('costPrice')}\n                  className=\"flex items-center space-x-1 hover:text-gray-700\"\n                >\n                  <span>Cost Price</span>\n                  {sortConfig?.key === 'costPrice' && (\n                    sortConfig.direction === 'asc' ? <TrendingUp className=\"h-3 w-3\" /> : <TrendingDown className=\"h-3 w-3\" />\n                  )}\n                </button>\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Status\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Last Updated\n              </th>\n              <th className=\"relative px-6 py-3\">\n                <span className=\"sr-only\">Actions</span>\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {data.data.map((item) => {\n              const stockStatus = getStockStatus(item);\n              const stockLevel = getStockLevel(item);\n              \n              return (\n                <tr\n                  key={item.id}\n                  className={cn(\n                    'hover:bg-gray-50 transition-colors',\n                    selectedItems.has(item.id) && 'bg-blue-50'\n                  )}\n                  onClick={() => onItemSelect?.(item)}\n                >\n                  <td className=\"px-6 py-4\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedItems.has(item.id)}\n                      onChange={(e) => {\n                        e.stopPropagation();\n                        handleSelectItem(item.id);\n                      }}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                  </td>\n                  \n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex items-center\">\n                      <div className=\"h-12 w-12 flex-shrink-0\">\n                        <div className=\"h-12 w-12 rounded-lg bg-gray-200 flex items-center justify-center\">\n                          <Package className=\"h-6 w-6 text-gray-400\" />\n                        </div>\n                      </div>\n                      <div className=\"ml-4\">\n                        <div className=\"text-sm font-medium text-gray-900 cursor-pointer hover:text-blue-600\">\n                          {item.name}\n                        </div>\n                        {item.description && (\n                          <div className=\"text-sm text-gray-500 truncate max-w-xs\">\n                            {item.description}\n                          </div>\n                        )}\n                        <div className=\"flex items-center mt-1 space-x-2\">\n                          {item.supplierName && (\n                            <span className=\"text-xs text-gray-500\">{item.supplierName}</span>\n                          )}\n                          {item.isPerishable && (\n                            <Badge variant=\"secondary\" className=\"text-xs\">Perishable</Badge>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </td>\n                  \n                  <td className=\"px-6 py-4 text-sm text-gray-900\">\n                    <div>\n                      {item.sku && <div className=\"font-medium\">{item.sku}</div>}\n                      {item.barcode && (\n                        <div className=\"text-xs text-gray-500 font-mono\">{item.barcode}</div>\n                      )}\n                    </div>\n                  </td>\n                  \n                  <td className=\"px-6 py-4\">\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-sm font-medium text-gray-900\">\n                          {formatQuantity(item.currentStock, 'units')}\n                        </span>\n                        {item.currentStock <= item.minimumStock && (\n                          <AlertTriangle className=\"h-4 w-4 text-orange-500\" />\n                        )}\n                      </div>\n                      \n                      {/* Stock level bar */}\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className={cn(\n                            'h-2 rounded-full transition-all',\n                            stockLevel <= 25 ? 'bg-red-500' : \n                            stockLevel <= 50 ? 'bg-orange-500' : 'bg-green-500'\n                          )}\n                          style={{ width: `${Math.max(5, Math.min(100, stockLevel))}%` }}\n                        />\n                      </div>\n                      \n                      <div className=\"text-xs text-gray-500\">\n                        Min: {formatQuantity(item.minimumStock, 'units')}\n                        {item.maximumStock && ` | Max: ${formatQuantity(item.maximumStock, 'units')}`}\n                      </div>\n                    </div>\n                  </td>\n                  \n                  <td className=\"px-6 py-4 text-sm text-gray-900\">\n                    <div>\n                      <div className=\"font-medium\">{formatCurrency(item.costPrice)}</div>\n                      {item.averageCost && item.averageCost !== item.costPrice && (\n                        <div className=\"text-xs text-gray-500\">\n                          Avg: {formatCurrency(item.averageCost)}\n                        </div>\n                      )}\n                    </div>\n                  </td>\n                  \n                  <td className=\"px-6 py-4\">\n                    <Badge \n                      variant=\"secondary\" \n                      className={cn('text-xs border', stockStatus.color)}\n                    >\n                      {stockStatus.label}\n                    </Badge>\n                  </td>\n                  \n                  <td className=\"px-6 py-4 text-sm text-gray-500\">\n                    {new Date(item.updatedAt).toLocaleDateString()}\n                  </td>\n                  \n                  <td className=\"px-6 py-4 text-right text-sm font-medium\">\n                    <Dropdown\n                      trigger={\n                        <Button variant=\"ghost\" size=\"sm\">\n                          <MoreHorizontal className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">Open menu</span>\n                        </Button>\n                      }\n                      items={[\n                        {\n                          icon: Edit,\n                          label: 'Edit Item',\n                          onClick: () => console.log('Edit item:', item.id)\n                        },\n                        {\n                          icon: Scan,\n                          label: 'Scan Barcode',\n                          onClick: () => console.log('Scan barcode:', item.id)\n                        },\n                        {\n                          icon: Move,\n                          label: 'Transfer Stock',\n                          onClick: () => console.log('Transfer stock:', item.id)\n                        },\n                        {\n                          icon: Plus,\n                          label: 'Adjust Stock',\n                          onClick: () => console.log('Adjust stock:', item.id)\n                        },\n                        {\n                          type: 'separator'\n                        },\n                        {\n                          icon: Trash2,\n                          label: 'Delete Item',\n                          onClick: () => console.log('Delete item:', item.id),\n                          className: 'text-red-600'\n                        }\n                      ]}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n\n      {/* Empty State */}\n      {data.data.length === 0 && (\n        <div className=\"text-center py-12\">\n          <Package className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-sm font-medium text-gray-900 mb-2\">No inventory items</h3>\n          <p className=\"text-sm text-gray-500 mb-4\">\n            Get started by adding your first inventory item.\n          </p>\n          <Button size=\"sm\">\n            <Plus className=\"h-4 w-4 mr-1\" />\n            Add Item\n          </Button>\n        </div>\n      )}\n\n      {/* Pagination */}\n      {data.total > data.limit && (\n        <div className=\"px-6 py-4 border-t border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"text-sm text-gray-700\">\n              Showing {((data.page - 1) * data.limit) + 1} to {Math.min(data.page * data.limit, data.total)} of {data.total} items\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                disabled={data.page === 1}\n              >\n                Previous\n              </Button>\n              <span className=\"text-sm text-gray-700\">\n                Page {data.page} of {Math.ceil(data.total / data.limit)}\n              </span>\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                disabled={data.page >= Math.ceil(data.total / data.limit)}\n              >\n                Next\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4856, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/quick-actions.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Plus, FileText, ClipboardList, Scan, MoreHorizontal, Users, Trash2, BarChart3 } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Dropdown } from '@/components/ui/dropdown';\n\ninterface QuickActionsProps {\n  className?: string;\n}\n\nexport function QuickActions({ className }: QuickActionsProps) {\n  const [isCreating, setIsCreating] = useState(false);\n\n  const primaryActions = [\n    {\n      icon: Plus,\n      label: 'Add Item',\n      action: () => {\n        setIsCreating(true);\n        console.log('Add new inventory item');\n        // In real app: redirect to /inventory/items/new or open modal\n      },\n      variant: 'default' as const,\n    },\n    {\n      icon: FileText,\n      label: 'Create PO',\n      action: () => console.log('Create purchase order'),\n      variant: 'outline' as const,\n    },\n    {\n      icon: Scan,\n      label: 'Scan',\n      action: () => console.log('Open barcode scanner'),\n      variant: 'outline' as const,\n    },\n  ];\n\n  const moreActions = [\n    {\n      icon: Users,\n      label: 'Add Supplier',\n      onClick: () => console.log('Add supplier')\n    },\n    {\n      icon: ClipboardList,\n      label: 'Start Stock Count',\n      onClick: () => console.log('Start stock count')\n    },\n    {\n      icon: Trash2,\n      label: 'Log Waste',\n      onClick: () => console.log('Log waste')\n    },\n    {\n      type: 'separator' as const\n    },\n    {\n      icon: BarChart3,\n      label: 'View Reports',\n      onClick: () => console.log('View reports')\n    },\n  ];\n\n  return (\n    <div className={`flex items-center space-x-2 ${className}`}>\n      {/* Primary Actions */}\n      {primaryActions.map((action) => {\n        const Icon = action.icon;\n        return (\n          <Button\n            key={action.label}\n            variant={action.variant}\n            size=\"sm\"\n            onClick={action.action}\n            disabled={isCreating}\n            className=\"flex items-center\"\n          >\n            <Icon className=\"h-4 w-4 mr-1\" />\n            {action.label}\n          </Button>\n        );\n      })}\n\n      {/* More Actions Dropdown */}\n      <Dropdown\n        trigger={\n          <Button variant=\"outline\" size=\"sm\" className=\"px-2\">\n            <MoreHorizontal className=\"h-4 w-4\" />\n            <span className=\"sr-only\">More actions</span>\n          </Button>\n        }\n        items={moreActions}\n      />\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AALA;;;;;;;;;;;;AAWO,SAAS,aAAa,KAAgC;QAAhC,EAAE,SAAS,EAAqB,GAAhC;;IAC3B,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAE7C,MAAM,iBAAiB;QACrB;YACE,MAAM,6KAAI;YACV,OAAO;YACP,QAAQ;gBACN,cAAc;gBACd,QAAQ,GAAG,CAAC;YACZ,8DAA8D;YAChE;YACA,SAAS;QACX;QACA;YACE,MAAM,qLAAQ;YACd,OAAO;YACP,QAAQ,IAAM,QAAQ,GAAG,CAAC;YAC1B,SAAS;QACX;QACA;YACE,MAAM,6KAAI;YACV,OAAO;YACP,QAAQ,IAAM,QAAQ,GAAG,CAAC;YAC1B,SAAS;QACX;KACD;IAED,MAAM,cAAc;QAClB;YACE,MAAM,8KAAK;YACX,OAAO;YACP,SAAS,IAAM,QAAQ,GAAG,CAAC;QAC7B;QACA;YACE,MAAM,0LAAa;YACnB,OAAO;YACP,SAAS,IAAM,QAAQ,GAAG,CAAC;QAC7B;QACA;YACE,MAAM,mLAAM;YACZ,OAAO;YACP,SAAS,IAAM,QAAQ,GAAG,CAAC;QAC7B;QACA;YACE,MAAM;QACR;QACA;YACE,MAAM,wLAAS;YACf,OAAO;YACP,SAAS,IAAM,QAAQ,GAAG,CAAC;QAC7B;KACD;IAED,qBACE,6LAAC;QAAI,WAAW,AAAC,+BAAwC,OAAV;;YAE5C,eAAe,GAAG,CAAC,CAAC;gBACnB,MAAM,OAAO,OAAO,IAAI;gBACxB,qBACE,6LAAC,wIAAM;oBAEL,SAAS,OAAO,OAAO;oBACvB,MAAK;oBACL,SAAS,OAAO,MAAM;oBACtB,UAAU;oBACV,WAAU;;sCAEV,6LAAC;4BAAK,WAAU;;;;;;wBACf,OAAO,KAAK;;mBARR,OAAO,KAAK;;;;;YAWvB;0BAGA,6LAAC,4IAAQ;gBACP,uBACE,6LAAC,wIAAM;oBAAC,SAAQ;oBAAU,MAAK;oBAAK,WAAU;;sCAC5C,6LAAC,iLAAc;4BAAC,WAAU;;;;;;sCAC1B,6LAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;gBAG9B,OAAO;;;;;;;;;;;;AAIf;GAtFgB;KAAA","debugId":null}},
    {"offset": {"line": 5017, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/lib/inventory/barcode.ts"],"sourcesContent":["import type { \n  InventoryItem, \n  BarcodeLog, \n  ScanResult, \n  ScanSession \n} from './types';\n\n/**\n * Barcode format detection and validation utilities\n */\nexport class BarcodeUtils {\n  // Common barcode format patterns\n  static readonly FORMATS = {\n    UPC_A: /^\\d{12}$/,\n    UPC_E: /^\\d{8}$/,\n    EAN_13: /^\\d{13}$/,\n    EAN_8: /^\\d{8}$/,\n    CODE_128: /^[\\x20-\\x7F]+$/,\n    CODE_39: /^[0-9A-Z\\-\\.\\$\\/\\+\\%\\*\\s]+$/,\n    CODABAR: /^[0-9\\-\\$\\:\\.\\+\\/]+$/,\n    ITF: /^\\d+$/,\n    QR_CODE: /^[\\s\\S]*$/, // QR codes can contain any characters\n    PDF_417: /^[\\s\\S]*$/, // PDF417 can contain any characters\n  };\n\n  /**\n   * Detect barcode format based on content pattern\n   */\n  static detectFormat(barcode: string): string {\n    const cleaned = barcode.trim();\n    \n    if (this.FORMATS.UPC_A.test(cleaned)) return 'UPC-A';\n    if (this.FORMATS.UPC_E.test(cleaned)) return 'UPC-E';\n    if (this.FORMATS.EAN_13.test(cleaned)) return 'EAN-13';\n    if (this.FORMATS.EAN_8.test(cleaned)) return 'EAN-8';\n    if (this.FORMATS.CODE_39.test(cleaned)) return 'CODE-39';\n    if (this.FORMATS.CODABAR.test(cleaned)) return 'CODABAR';\n    if (this.FORMATS.ITF.test(cleaned)) return 'ITF';\n    if (this.FORMATS.CODE_128.test(cleaned)) return 'CODE-128';\n    \n    // Default for unknown formats\n    return 'UNKNOWN';\n  }\n\n  /**\n   * Validate barcode format and checksum where applicable\n   */\n  static validateBarcode(barcode: string): { isValid: boolean; format: string; error?: string } {\n    const cleaned = barcode.trim();\n    const format = this.detectFormat(cleaned);\n\n    if (format === 'UNKNOWN') {\n      return { isValid: false, format, error: 'Unknown barcode format' };\n    }\n\n    // Validate UPC-A checksum\n    if (format === 'UPC-A') {\n      const isValid = this.validateUPCAChecksum(cleaned);\n      return { \n        isValid, \n        format, \n        error: isValid ? undefined : 'Invalid UPC-A checksum' \n      };\n    }\n\n    // Validate EAN-13 checksum\n    if (format === 'EAN-13') {\n      const isValid = this.validateEAN13Checksum(cleaned);\n      return { \n        isValid, \n        format, \n        error: isValid ? undefined : 'Invalid EAN-13 checksum' \n      };\n    }\n\n    // For other formats, basic validation passed\n    return { isValid: true, format };\n  }\n\n  /**\n   * Validate UPC-A checksum digit\n   */\n  static validateUPCAChecksum(barcode: string): boolean {\n    if (barcode.length !== 12) return false;\n\n    const digits = barcode.split('').map(Number);\n    const checkDigit = digits[11];\n    \n    let sum = 0;\n    for (let i = 0; i < 11; i++) {\n      sum += digits[i] * (i % 2 === 0 ? 1 : 3);\n    }\n    \n    const calculatedCheckDigit = (10 - (sum % 10)) % 10;\n    return checkDigit === calculatedCheckDigit;\n  }\n\n  /**\n   * Validate EAN-13 checksum digit\n   */\n  static validateEAN13Checksum(barcode: string): boolean {\n    if (barcode.length !== 13) return false;\n\n    const digits = barcode.split('').map(Number);\n    const checkDigit = digits[12];\n    \n    let sum = 0;\n    for (let i = 0; i < 12; i++) {\n      sum += digits[i] * (i % 2 === 0 ? 1 : 3);\n    }\n    \n    const calculatedCheckDigit = (10 - (sum % 10)) % 10;\n    return checkDigit === calculatedCheckDigit;\n  }\n\n  /**\n   * Generate check digit for UPC-A\n   */\n  static generateUPCACheckDigit(barcode11: string): string {\n    if (barcode11.length !== 11) {\n      throw new Error('UPC-A code must be 11 digits for check digit generation');\n    }\n\n    const digits = barcode11.split('').map(Number);\n    let sum = 0;\n    \n    for (let i = 0; i < 11; i++) {\n      sum += digits[i] * (i % 2 === 0 ? 1 : 3);\n    }\n    \n    const checkDigit = (10 - (sum % 10)) % 10;\n    return barcode11 + checkDigit;\n  }\n\n  /**\n   * Format barcode for display with proper spacing\n   */\n  static formatForDisplay(barcode: string): string {\n    const format = this.detectFormat(barcode);\n    \n    switch (format) {\n      case 'UPC-A':\n        // Format: X XXXXX XXXXX X\n        return `${barcode[0]} ${barcode.slice(1, 6)} ${barcode.slice(6, 11)} ${barcode[11]}`;\n      \n      case 'EAN-13':\n        // Format: X XXXXXX XXXXXX\n        return `${barcode[0]} ${barcode.slice(1, 7)} ${barcode.slice(7, 13)}`;\n      \n      case 'UPC-E':\n        // Format: X XXXXXX X\n        return `${barcode[0]} ${barcode.slice(1, 7)} ${barcode[7]}`;\n      \n      default:\n        return barcode;\n    }\n  }\n\n  /**\n   * Clean barcode input (remove spaces, hyphens, etc.)\n   */\n  static cleanBarcode(input: string): string {\n    return input.replace(/[\\s\\-]/g, '').trim();\n  }\n\n  /**\n   * Convert UPC-A to UPC-E if possible\n   */\n  static convertUPCAToUPCE(upcA: string): string | null {\n    if (upcA.length !== 12 || !this.validateUPCAChecksum(upcA)) {\n      return null;\n    }\n\n    // UPC-E conversion rules (simplified)\n    const numberSystem = upcA[0];\n    const manufacturer = upcA.slice(1, 6);\n    const product = upcA.slice(6, 11);\n    const checkDigit = upcA[11];\n\n    // Only certain UPC-A codes can be converted to UPC-E\n    if (manufacturer.endsWith('000') || manufacturer.endsWith('100') || manufacturer.endsWith('200')) {\n      // This is a simplified conversion - full rules are more complex\n      return null;\n    }\n\n    return null; // Return null if conversion not possible\n  }\n}\n\n/**\n * Barcode scanning session management\n */\nexport class ScanSessionManager {\n  private sessions: Map<string, ScanSession> = new Map();\n\n  /**\n   * Start a new scanning session\n   */\n  startSession(\n    type: 'count' | 'receive' | 'transfer',\n    locationId: string,\n    userId: string\n  ): ScanSession {\n    const session: ScanSession = {\n      id: this.generateSessionId(),\n      type,\n      locationId,\n      startTime: new Date(),\n      scans: [],\n      userId,\n      isActive: true,\n    };\n\n    this.sessions.set(session.id, session);\n    return session;\n  }\n\n  /**\n   * Add scan result to session\n   */\n  addScanToSession(sessionId: string, scanResult: Omit<ScanResult, 'timestamp'>): ScanResult | null {\n    const session = this.sessions.get(sessionId);\n    if (!session || !session.isActive) {\n      return null;\n    }\n\n    const fullScanResult: ScanResult = {\n      ...scanResult,\n      timestamp: new Date(),\n    };\n\n    session.scans.push(fullScanResult);\n    return fullScanResult;\n  }\n\n  /**\n   * End scanning session\n   */\n  endSession(sessionId: string): ScanSession | null {\n    const session = this.sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n\n    session.isActive = false;\n    session.endTime = new Date();\n    return session;\n  }\n\n  /**\n   * Get active session\n   */\n  getSession(sessionId: string): ScanSession | null {\n    return this.sessions.get(sessionId) || null;\n  }\n\n  /**\n   * Get all sessions for a user\n   */\n  getUserSessions(userId: string): ScanSession[] {\n    return Array.from(this.sessions.values()).filter(\n      session => session.userId === userId\n    );\n  }\n\n  /**\n   * Get session statistics\n   */\n  getSessionStats(sessionId: string): {\n    totalScans: number;\n    successfulScans: number;\n    failedScans: number;\n    uniqueItems: number;\n    duration: number; // in minutes\n  } | null {\n    const session = this.sessions.get(sessionId);\n    if (!session) {\n      return null;\n    }\n\n    const totalScans = session.scans.length;\n    const successfulScans = session.scans.filter(scan => scan.success).length;\n    const failedScans = totalScans - successfulScans;\n    \n    const uniqueItems = new Set(\n      session.scans\n        .filter(scan => scan.item)\n        .map(scan => scan.item!.id)\n    ).size;\n\n    const endTime = session.endTime || new Date();\n    const duration = (endTime.getTime() - session.startTime.getTime()) / (1000 * 60);\n\n    return {\n      totalScans,\n      successfulScans,\n      failedScans,\n      uniqueItems,\n      duration,\n    };\n  }\n\n  private generateSessionId(): string {\n    return `scan-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n}\n\n/**\n * Barcode scanning utilities for web/mobile\n */\nexport class BarcodeScanner {\n  private stream: MediaStream | null = null;\n  private videoElement: HTMLVideoElement | null = null;\n  private canvasElement: HTMLCanvasElement | null = null;\n  private context: CanvasRenderingContext2D | null = null;\n  private isScanning = false;\n  private scanCallback: ((result: ScanResult) => void) | null = null;\n\n  /**\n   * Initialize camera for barcode scanning\n   */\n  async initializeCamera(videoElement: HTMLVideoElement): Promise<void> {\n    try {\n      // Request camera access with ideal constraints for barcode scanning\n      this.stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          facingMode: { ideal: 'environment' }, // Back camera on mobile\n          focusMode: { ideal: 'continuous' },\n          zoom: { ideal: 1.0 }\n        },\n        audio: false\n      });\n\n      this.videoElement = videoElement;\n      this.videoElement.srcObject = this.stream;\n      this.videoElement.setAttribute('playsinline', 'true');\n      \n      await new Promise((resolve) => {\n        this.videoElement!.onloadedmetadata = resolve;\n      });\n\n      await this.videoElement.play();\n\n      // Create canvas for image processing\n      this.canvasElement = document.createElement('canvas');\n      this.context = this.canvasElement.getContext('2d');\n      \n    } catch (error) {\n      console.error('Failed to initialize camera:', error);\n      throw new Error('Camera access denied or not available');\n    }\n  }\n\n  /**\n   * Start scanning for barcodes\n   */\n  startScanning(callback: (result: ScanResult) => void): void {\n    if (!this.videoElement || !this.canvasElement || !this.context) {\n      throw new Error('Scanner not initialized');\n    }\n\n    this.isScanning = true;\n    this.scanCallback = callback;\n    this.scanFrame();\n  }\n\n  /**\n   * Stop scanning\n   */\n  stopScanning(): void {\n    this.isScanning = false;\n    this.scanCallback = null;\n  }\n\n  /**\n   * Release camera resources\n   */\n  cleanup(): void {\n    this.stopScanning();\n    \n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n      this.stream = null;\n    }\n\n    if (this.videoElement) {\n      this.videoElement.srcObject = null;\n      this.videoElement = null;\n    }\n\n    this.canvasElement = null;\n    this.context = null;\n  }\n\n  /**\n   * Capture and process frame for barcode detection\n   */\n  private scanFrame(): void {\n    if (!this.isScanning || !this.videoElement || !this.canvasElement || !this.context) {\n      return;\n    }\n\n    // Set canvas size to video size\n    this.canvasElement.width = this.videoElement.videoWidth;\n    this.canvasElement.height = this.videoElement.videoHeight;\n\n    // Draw video frame to canvas\n    this.context.drawImage(\n      this.videoElement,\n      0,\n      0,\n      this.canvasElement.width,\n      this.canvasElement.height\n    );\n\n    // Get image data for processing\n    const imageData = this.context.getImageData(\n      0,\n      0,\n      this.canvasElement.width,\n      this.canvasElement.height\n    );\n\n    // Process image for barcode detection\n    this.processImageData(imageData);\n\n    // Schedule next frame\n    if (this.isScanning) {\n      requestAnimationFrame(() => this.scanFrame());\n    }\n  }\n\n  /**\n   * Process image data for barcode detection\n   * Note: This is a simplified implementation. In production, you would use\n   * a library like @zxing/library or QuaggaJS for actual barcode detection\n   */\n  private processImageData(imageData: ImageData): void {\n    // This is a mock implementation - replace with actual barcode detection\n    // For now, we'll simulate random successful scans for demo purposes\n    \n    if (Math.random() < 0.1) { // 10% chance of \"detecting\" a barcode per frame\n      const mockBarcode = this.generateMockBarcode();\n      const validation = BarcodeUtils.validateBarcode(mockBarcode);\n      \n      const result: ScanResult = {\n        barcode: mockBarcode,\n        format: validation.format,\n        success: validation.isValid,\n        timestamp: new Date(),\n      };\n\n      if (this.scanCallback) {\n        this.scanCallback(result);\n      }\n    }\n  }\n\n  /**\n   * Generate mock barcode for demo purposes\n   */\n  private generateMockBarcode(): string {\n    const barcodes = [\n      '1234567890123', // UPC-A\n      '4012345678901', // EAN-13\n      '12345670',      // UPC-E\n      'CODE128DEMO',   // CODE-128\n    ];\n    \n    return barcodes[Math.floor(Math.random() * barcodes.length)];\n  }\n\n  /**\n   * Check if device has camera capability\n   */\n  static async hasCameraSupport(): Promise<boolean> {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return devices.some(device => device.kind === 'videoinput');\n    } catch {\n      return false;\n    }\n  }\n\n  /**\n   * Get available camera devices\n   */\n  static async getCameraDevices(): Promise<MediaDeviceInfo[]> {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      return devices.filter(device => device.kind === 'videoinput');\n    } catch {\n      return [];\n    }\n  }\n}\n\n/**\n * Barcode generation utilities\n */\nexport class BarcodeGenerator {\n  /**\n   * Generate internal barcode for new inventory items\n   */\n  static generateInternalBarcode(prefix: string = '2'): string {\n    // Internal barcodes typically start with 2 (for internal use)\n    // followed by manufacturer code (5 digits) and product code (5 digits)\n    const manufacturerCode = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\n    const productCode = Math.floor(Math.random() * 100000).toString().padStart(5, '0');\n    const code11 = prefix + manufacturerCode + productCode;\n    \n    return BarcodeUtils.generateUPCACheckDigit(code11);\n  }\n\n  /**\n   * Generate batch/lot number barcode\n   */\n  static generateBatchBarcode(itemId: string, batchNumber: string): string {\n    // Create a unique barcode combining item ID and batch number\n    const combined = `${itemId}-${batchNumber}`;\n    const hash = this.simpleHash(combined);\n    \n    // Create a CODE-128 compatible string\n    return `BATCH${hash.toString().padStart(6, '0')}`;\n  }\n\n  /**\n   * Generate location barcode for warehouse management\n   */\n  static generateLocationBarcode(locationId: string, zone?: string, shelf?: string): string {\n    let code = `LOC${locationId.padStart(3, '0')}`;\n    \n    if (zone) {\n      code += `Z${zone.padStart(2, '0')}`;\n    }\n    \n    if (shelf) {\n      code += `S${shelf.padStart(3, '0')}`;\n    }\n    \n    return code;\n  }\n\n  /**\n   * Simple hash function for generating consistent codes\n   */\n  private static simpleHash(str: string): number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return Math.abs(hash) % 1000000;\n  }\n}\n\n/**\n * Barcode scanning history and analytics\n */\nexport class ScanAnalytics {\n  /**\n   * Analyze scan success rates\n   */\n  static analyzeScanPerformance(logs: BarcodeLog[]): {\n    successRate: number;\n    averageScansPerHour: number;\n    topScannedItems: Array<{ itemId: string; itemName: string; scanCount: number }>;\n    errorsByType: Record<string, number>;\n  } {\n    const totalScans = logs.length;\n    const successfulScans = logs.filter(log => log.isSuccessful).length;\n    const successRate = totalScans > 0 ? (successfulScans / totalScans) * 100 : 0;\n\n    // Calculate scans per hour\n    const timeSpan = this.getTimeSpanHours(logs);\n    const averageScansPerHour = timeSpan > 0 ? totalScans / timeSpan : 0;\n\n    // Top scanned items\n    const itemCounts = new Map<string, { itemName: string; count: number }>();\n    logs.forEach(log => {\n      if (log.itemId && log.itemName) {\n        const existing = itemCounts.get(log.itemId) || { itemName: log.itemName, count: 0 };\n        itemCounts.set(log.itemId, { ...existing, count: existing.count + 1 });\n      }\n    });\n\n    const topScannedItems = Array.from(itemCounts.entries())\n      .map(([itemId, data]) => ({\n        itemId,\n        itemName: data.itemName,\n        scanCount: data.count,\n      }))\n      .sort((a, b) => b.scanCount - a.scanCount)\n      .slice(0, 10);\n\n    // Error analysis\n    const errorsByType: Record<string, number> = {};\n    logs.filter(log => !log.isSuccessful).forEach(log => {\n      const error = log.errorMessage || 'Unknown error';\n      errorsByType[error] = (errorsByType[error] || 0) + 1;\n    });\n\n    return {\n      successRate,\n      averageScansPerHour,\n      topScannedItems,\n      errorsByType,\n    };\n  }\n\n  /**\n   * Get time span in hours for a set of scan logs\n   */\n  private static getTimeSpanHours(logs: BarcodeLog[]): number {\n    if (logs.length === 0) return 0;\n\n    const dates = logs.map(log => log.createdAt.getTime()).sort();\n    const earliest = dates[0];\n    const latest = dates[dates.length - 1];\n\n    return (latest - earliest) / (1000 * 60 * 60); // Convert to hours\n  }\n\n  /**\n   * Generate scan efficiency report\n   */\n  static generateEfficiencyReport(\n    logs: BarcodeLog[],\n    periodDays: number = 30\n  ): {\n    totalScans: number;\n    uniqueItems: number;\n    averageScansPerItem: number;\n    peakScanningHours: Array<{ hour: number; scanCount: number }>;\n  } {\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - periodDays);\n\n    const recentLogs = logs.filter(log => log.createdAt >= cutoffDate);\n    const totalScans = recentLogs.length;\n    \n    const uniqueItems = new Set(recentLogs.map(log => log.itemId).filter(Boolean)).size;\n    const averageScansPerItem = uniqueItems > 0 ? totalScans / uniqueItems : 0;\n\n    // Analyze peak scanning hours\n    const hourCounts = new Array(24).fill(0);\n    recentLogs.forEach(log => {\n      const hour = log.createdAt.getHours();\n      hourCounts[hour]++;\n    });\n\n    const peakScanningHours = hourCounts\n      .map((count, hour) => ({ hour, scanCount: count }))\n      .sort((a, b) => b.scanCount - a.scanCount)\n      .slice(0, 5);\n\n    return {\n      totalScans,\n      uniqueItems,\n      averageScansPerItem,\n      peakScanningHours,\n    };\n  }\n}\n\n// Export singleton instances\nexport const scanSessionManager = new ScanSessionManager();\nexport const barcodeUtils = BarcodeUtils;\nexport const barcodeGenerator = BarcodeGenerator;\nexport const scanAnalytics = ScanAnalytics;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5556, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/barcode-scanner-modal.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { X, Camera, Flashlight, RotateCcw, Check, AlertTriangle, Package } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { BarcodeScanner, BarcodeUtils } from '@/lib/inventory/barcode';\nimport { lookupItemByBarcode } from '@/lib/inventory/data';\nimport { cn } from '@/utils';\nimport type { InventoryItem, ScanResult } from '@/lib/inventory/types';\n\ninterface BarcodeScannerModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  mode: 'lookup' | 'count' | 'receive' | 'transfer';\n  onScanResult?: (result: ScanResult & { item?: InventoryItem }) => void;\n  className?: string;\n}\n\nexport function BarcodeScannerModal({ \n  isOpen, \n  onClose, \n  mode, \n  onScanResult, \n  className \n}: BarcodeScannerModalProps) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const scannerRef = useRef<BarcodeScanner | null>(null);\n  const [hasCamera, setHasCamera] = useState(false);\n  const [isScanning, setIsScanning] = useState(false);\n  const [lastScanResult, setLastScanResult] = useState<ScanResult & { item?: InventoryItem } | null>(null);\n  const [manualBarcode, setManualBarcode] = useState('');\n  const [flashlightEnabled, setFlashlightEnabled] = useState(false);\n  const [scanHistory, setScanHistory] = useState<Array<ScanResult & { item?: InventoryItem }>>([]);\n  const [quantity, setQuantity] = useState(1);\n  const [error, setError] = useState<string | null>(null);\n\n  // Initialize camera and scanner\n  useEffect(() => {\n    const initializeScanner = async () => {\n      if (!isOpen || !videoRef.current) return;\n\n      try {\n        // Check camera support\n        const cameraSupported = await BarcodeScanner.hasCameraSupport();\n        setHasCamera(cameraSupported);\n\n        if (cameraSupported) {\n          scannerRef.current = new BarcodeScanner();\n          await scannerRef.current.initializeCamera(videoRef.current);\n          setIsScanning(true);\n          \n          // Start scanning\n          scannerRef.current.startScanning(handleScanResult);\n        }\n      } catch (error) {\n        console.error('Failed to initialize scanner:', error);\n        setError('Failed to access camera. Please check permissions.');\n      }\n    };\n\n    initializeScanner();\n\n    // Cleanup on unmount or close\n    return () => {\n      if (scannerRef.current) {\n        scannerRef.current.cleanup();\n        scannerRef.current = null;\n      }\n      setIsScanning(false);\n    };\n  }, [isOpen]);\n\n  const handleScanResult = async (scanResult: ScanResult) => {\n    if (!scanResult.success) {\n      setError('Failed to read barcode. Please try again.');\n      return;\n    }\n\n    try {\n      // Validate barcode format\n      const validation = BarcodeUtils.validateBarcode(scanResult.barcode);\n      if (!validation.isValid) {\n        setError(`Invalid barcode format: ${validation.error}`);\n        return;\n      }\n\n      // Lookup item in inventory\n      const item = await lookupItemByBarcode(scanResult.barcode);\n      \n      const result = {\n        ...scanResult,\n        item: item || undefined,\n      };\n\n      setLastScanResult(result);\n      setScanHistory(prev => [result, ...prev.slice(0, 9)]); // Keep last 10 scans\n      setError(null);\n      \n      // Call the callback\n      onScanResult?.(result);\n\n      // Auto-close for lookup mode if item found\n      if (mode === 'lookup' && item) {\n        setTimeout(() => onClose(), 1500);\n      }\n    } catch (error) {\n      setError('Failed to lookup item in inventory.');\n    }\n  };\n\n  const handleManualBarcode = async () => {\n    if (!manualBarcode.trim()) return;\n\n    const scanResult: ScanResult = {\n      barcode: manualBarcode.trim(),\n      format: BarcodeUtils.detectFormat(manualBarcode.trim()),\n      success: true,\n      timestamp: new Date(),\n    };\n\n    await handleScanResult(scanResult);\n    setManualBarcode('');\n  };\n\n  const toggleFlashlight = async () => {\n    if (scannerRef.current) {\n      try {\n        // In a real implementation, you'd control the flashlight via MediaTrackConstraints\n        setFlashlightEnabled(!flashlightEnabled);\n      } catch (error) {\n        console.error('Failed to toggle flashlight:', error);\n      }\n    }\n  };\n\n  const getModeTitle = () => {\n    switch (mode) {\n      case 'lookup': return 'Item Lookup';\n      case 'count': return 'Stock Count';\n      case 'receive': return 'Receive Items';\n      case 'transfer': return 'Transfer Items';\n      default: return 'Barcode Scanner';\n    }\n  };\n\n  const getModeDescription = () => {\n    switch (mode) {\n      case 'lookup': return 'Scan to view item details';\n      case 'count': return 'Scan items for physical inventory count';\n      case 'receive': return 'Scan items to receive into inventory';\n      case 'transfer': return 'Scan items to transfer between locations';\n      default: return 'Scan barcodes to identify items';\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className={cn('fixed inset-0 z-50 flex items-center justify-center', className)}>\n      {/* Backdrop */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-75\" onClick={onClose} />\n      \n      {/* Modal */}\n      <div className=\"relative bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-hidden\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900\">{getModeTitle()}</h2>\n            <p className=\"text-sm text-gray-500\">{getModeDescription()}</p>\n          </div>\n          <Button variant=\"ghost\" size=\"sm\" onClick={onClose}>\n            <X className=\"h-5 w-5\" />\n          </Button>\n        </div>\n\n        {/* Scanner Area */}\n        <div className=\"relative bg-black\">\n          {hasCamera ? (\n            <div className=\"relative\">\n              <video\n                ref={videoRef}\n                className=\"w-full h-64 object-cover\"\n                playsInline\n                muted\n              />\n              \n              {/* Scanning Overlay */}\n              <div className=\"absolute inset-0 flex items-center justify-center\">\n                <div className=\"relative\">\n                  {/* Scanning frame */}\n                  <div className=\"w-48 h-32 border-2 border-white border-opacity-50 relative\">\n                    <div className=\"absolute top-0 left-0 w-6 h-6 border-t-4 border-l-4 border-blue-500\"></div>\n                    <div className=\"absolute top-0 right-0 w-6 h-6 border-t-4 border-r-4 border-blue-500\"></div>\n                    <div className=\"absolute bottom-0 left-0 w-6 h-6 border-b-4 border-l-4 border-blue-500\"></div>\n                    <div className=\"absolute bottom-0 right-0 w-6 h-6 border-b-4 border-r-4 border-blue-500\"></div>\n                  </div>\n                  \n                  {/* Scanning line animation */}\n                  {isScanning && (\n                    <div className=\"absolute inset-x-0 top-0 h-0.5 bg-blue-500 animate-pulse\"></div>\n                  )}\n                </div>\n              </div>\n\n              {/* Camera Controls */}\n              <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2\">\n                <Button\n                  size=\"sm\"\n                  variant=\"secondary\"\n                  onClick={toggleFlashlight}\n                  className={cn(\n                    'bg-black bg-opacity-50 text-white border-white border-opacity-50',\n                    flashlightEnabled && 'bg-yellow-500 bg-opacity-75'\n                  )}\n                >\n                  <Flashlight className=\"h-4 w-4\" />\n                </Button>\n                \n                <Button\n                  size=\"sm\"\n                  variant=\"secondary\"\n                  onClick={() => {\n                    // Restart scanner\n                    if (scannerRef.current) {\n                      scannerRef.current.stopScanning();\n                      scannerRef.current.startScanning(handleScanResult);\n                    }\n                  }}\n                  className=\"bg-black bg-opacity-50 text-white border-white border-opacity-50\"\n                >\n                  <RotateCcw className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"h-64 flex items-center justify-center bg-gray-100\">\n              <div className=\"text-center\">\n                <Camera className=\"h-12 w-12 text-gray-400 mx-auto mb-2\" />\n                <p className=\"text-sm text-gray-600\">Camera not available</p>\n                <p className=\"text-xs text-gray-500\">Use manual input below</p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Manual Input */}\n        <div className=\"p-4 border-b border-gray-200\">\n          <div className=\"flex space-x-2\">\n            <Input\n              placeholder=\"Enter barcode manually...\"\n              value={manualBarcode}\n              onChange={(e) => setManualBarcode(e.target.value)}\n              onKeyPress={(e) => e.key === 'Enter' && handleManualBarcode()}\n              className=\"flex-1\"\n            />\n            <Button onClick={handleManualBarcode} size=\"sm\">\n              Scan\n            </Button>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"p-4 bg-red-50 border-l-4 border-red-400\">\n            <div className=\"flex items-center\">\n              <AlertTriangle className=\"h-4 w-4 text-red-400 mr-2\" />\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Last Scan Result */}\n        {lastScanResult && (\n          <div className=\"p-4 bg-green-50 border-l-4 border-green-400\">\n            <div className=\"flex items-start\">\n              <Check className=\"h-5 w-5 text-green-400 mr-2 mt-0.5\" />\n              <div className=\"flex-1\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <p className=\"text-sm font-medium text-green-800\">\n                    Barcode Scanned Successfully\n                  </p>\n                  <Badge variant=\"secondary\" className=\"text-xs\">\n                    {lastScanResult.format}\n                  </Badge>\n                </div>\n                \n                <p className=\"text-xs text-green-700 font-mono mb-2\">\n                  {BarcodeUtils.formatForDisplay(lastScanResult.barcode)}\n                </p>\n                \n                {lastScanResult.item ? (\n                  <div className=\"bg-white rounded p-3 border\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Package className=\"h-8 w-8 text-gray-400\" />\n                      <div>\n                        <h4 className=\"text-sm font-medium text-gray-900\">\n                          {lastScanResult.item.name}\n                        </h4>\n                        <p className=\"text-xs text-gray-500\">\n                          Current Stock: {lastScanResult.item.currentStock}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">\n                          SKU: {lastScanResult.item.sku}\n                        </p>\n                      </div>\n                    </div>\n                    \n                    {/* Mode-specific controls */}\n                    {(mode === 'count' || mode === 'receive' || mode === 'transfer') && (\n                      <div className=\"mt-3 flex items-center space-x-2\">\n                        <label className=\"text-xs text-gray-600\">Quantity:</label>\n                        <Input\n                          type=\"number\"\n                          min=\"0\"\n                          value={quantity}\n                          onChange={(e) => setQuantity(parseInt(e.target.value) || 1)}\n                          className=\"w-20 h-8 text-sm\"\n                        />\n                        <Button size=\"sm\" className=\"h-8\">\n                          {mode === 'count' ? 'Count' : mode === 'receive' ? 'Receive' : 'Transfer'}\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"bg-yellow-50 rounded p-3 border border-yellow-200\">\n                    <p className=\"text-sm text-yellow-800\">\n                      Item not found in inventory. Would you like to add it?\n                    </p>\n                    <Button size=\"sm\" className=\"mt-2\">\n                      Add New Item\n                    </Button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Scan History */}\n        {scanHistory.length > 0 && (\n          <div className=\"p-4 max-h-40 overflow-y-auto\">\n            <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Recent Scans</h3>\n            <div className=\"space-y-2\">\n              {scanHistory.slice(0, 5).map((scan, index) => (\n                <div key={index} className=\"flex items-center justify-between text-sm\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                    <span className=\"font-mono text-xs\">{scan.barcode}</span>\n                  </div>\n                  <div className=\"text-right\">\n                    {scan.item ? (\n                      <span className=\"text-green-600 text-xs\">{scan.item.name}</span>\n                    ) : (\n                      <span className=\"text-yellow-600 text-xs\">Not found</span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Footer */}\n        <div className=\"p-4 bg-gray-50 text-center\">\n          <p className=\"text-xs text-gray-500\">\n            {isScanning ? 'Position barcode within the frame' : 'Scanner ready'}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6339, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/Other/restaurant%20Dashboard%20Frontend%20Development%20Plan/restaurant-dashboard/components/inventory/mobile-barcode-fab.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Scan, Package, Plus, Move, X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { BarcodeScannerModal } from './barcode-scanner-modal';\nimport { cn } from '@/utils';\n\ninterface MobileBarcodeFABProps {\n  className?: string;\n}\n\nexport function MobileBarcodeFAB({ className }: MobileBarcodeFABProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [showScanner, setShowScanner] = useState(false);\n  const [scanMode, setScanMode] = useState<'lookup' | 'count' | 'receive' | 'transfer'>('lookup');\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const openScanner = (mode: typeof scanMode) => {\n    setScanMode(mode);\n    setShowScanner(true);\n    setIsOpen(false);\n  };\n\n  const quickActions = [\n    {\n      icon: Scan,\n      label: 'Quick Scan',\n      action: () => openScanner('lookup'),\n      color: 'bg-blue-600 hover:bg-blue-700',\n    },\n    {\n      icon: Package,\n      label: 'Stock Count',\n      action: () => openScanner('count'),\n      color: 'bg-green-600 hover:bg-green-700',\n    },\n    {\n      icon: Plus,\n      label: 'Receive Items',\n      action: () => openScanner('receive'),\n      color: 'bg-purple-600 hover:bg-purple-700',\n    },\n    {\n      icon: Move,\n      label: 'Transfer',\n      action: () => openScanner('transfer'),\n      color: 'bg-orange-600 hover:bg-orange-700',\n    },\n  ];\n\n  return (\n    <>\n      <div className={cn('fixed bottom-20 right-4 z-40', className)}>\n        {/* Quick Action Buttons */}\n        <div className={cn(\n          'mb-4 space-y-3 transition-all duration-300 transform',\n          isOpen ? 'opacity-100 scale-100' : 'opacity-0 scale-95 pointer-events-none'\n        )}>\n          {quickActions.map((action, index) => {\n            const Icon = action.icon;\n            return (\n              <div\n                key={action.label}\n                className={cn(\n                  'transform transition-all duration-300',\n                  isOpen \n                    ? 'translate-y-0 opacity-100'\n                    : 'translate-y-4 opacity-0',\n                )}\n                style={{\n                  transitionDelay: isOpen ? `${index * 50}ms` : `${(quickActions.length - index - 1) * 50}ms`\n                }}\n              >\n                <Button\n                  onClick={action.action}\n                  className={cn(\n                    'h-12 w-12 rounded-full shadow-lg text-white transition-all duration-200 hover:scale-110',\n                    action.color\n                  )}\n                  size=\"sm\"\n                >\n                  <Icon className=\"h-5 w-5\" />\n                  <span className=\"sr-only\">{action.label}</span>\n                </Button>\n                \n                {/* Label */}\n                <div className=\"absolute right-16 top-1/2 transform -translate-y-1/2\">\n                  <div className=\"bg-gray-900 text-white text-xs px-2 py-1 rounded whitespace-nowrap\">\n                    {action.label}\n                  </div>\n                  <div className=\"absolute left-full top-1/2 transform -translate-y-1/2 w-0 h-0 border-t-4 border-b-4 border-l-4 border-transparent border-l-gray-900\"></div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Main FAB */}\n        <Button\n          onClick={toggleMenu}\n          className={cn(\n            'h-14 w-14 rounded-full shadow-lg bg-blue-600 hover:bg-blue-700 text-white transition-all duration-300',\n            isOpen && 'rotate-45'\n          )}\n        >\n          {isOpen ? (\n            <X className=\"h-6 w-6\" />\n          ) : (\n            <Scan className=\"h-6 w-6\" />\n          )}\n          <span className=\"sr-only\">\n            {isOpen ? 'Close menu' : 'Open scanning menu'}\n          </span>\n        </Button>\n\n        {/* Backdrop */}\n        {isOpen && (\n          <div\n            className=\"fixed inset-0 bg-black bg-opacity-25 -z-10\"\n            onClick={toggleMenu}\n          />\n        )}\n      </div>\n\n      {/* Barcode Scanner Modal */}\n      {showScanner && (\n        <BarcodeScannerModal\n          isOpen={showScanner}\n          onClose={() => setShowScanner(false)}\n          mode={scanMode}\n          onScanResult={(result) => {\n            console.log('Scan result:', result);\n            // Handle scan result based on mode\n          }}\n        />\n      )}\n\n      {/* Quick access hint for first-time users */}\n      <div className=\"fixed bottom-36 right-4 z-30\">\n        <div className=\"bg-blue-600 text-white text-xs px-3 py-2 rounded-lg shadow-lg max-w-xs\">\n          <div className=\"flex items-start space-x-2\">\n            <Scan className=\"h-4 w-4 mt-0.5 flex-shrink-0\" />\n            <div>\n              <div className=\"font-medium mb-1\">Quick Barcode Scanning</div>\n              <div className=\"text-blue-100\">\n                Tap to scan items, count stock, or receive inventory on the go\n              </div>\n            </div>\n            <button \n              className=\"text-blue-200 hover:text-white ml-2\"\n              onClick={() => {\n                // Hide hint - in real app, save to local storage\n              }}\n            >\n              <X className=\"h-3 w-3\" />\n            </button>\n          </div>\n          <div className=\"absolute bottom-full right-8 w-0 h-0 border-l-4 border-r-4 border-b-4 border-transparent border-b-blue-600\"></div>\n        </div>\n      </div>\n\n      {/* Offline capability indicator */}\n      <div className=\"fixed bottom-2 right-4 z-30\">\n        <div className=\"flex items-center space-x-2 bg-white rounded-full shadow-sm border border-gray-200 px-3 py-1\">\n          <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n          <span className=\"text-xs text-gray-600\">Offline Ready</span>\n        </div>\n      </div>\n    </>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}