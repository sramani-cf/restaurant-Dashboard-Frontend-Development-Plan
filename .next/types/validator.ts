// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response> | Response | Promise<void> | void
}


// Validate ..\..\app\accessibility\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\accessibility\\page.js")
  handler satisfies AppPageConfig<"/accessibility">
}

// Validate ..\..\app\analytics\[report]\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\analytics\\[report]\\page.js")
  handler satisfies AppPageConfig<"/analytics/[report]">
}

// Validate ..\..\app\analytics\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\analytics\\page.js")
  handler satisfies AppPageConfig<"/analytics">
}

// Validate ..\..\app\auth\error\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\auth\\error\\page.js")
  handler satisfies AppPageConfig<"/auth/error">
}

// Validate ..\..\app\auth\login\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\auth\\login\\page.js")
  handler satisfies AppPageConfig<"/auth/login">
}

// Validate ..\..\app\dashboard\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\dashboard\\page.js")
  handler satisfies AppPageConfig<"/dashboard">
}

// Validate ..\..\app\docs\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\docs\\page.js")
  handler satisfies AppPageConfig<"/docs">
}

// Validate ..\..\app\inventory\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\inventory\\page.js")
  handler satisfies AppPageConfig<"/inventory">
}

// Validate ..\..\app\kds\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\kds\\page.js")
  handler satisfies AppPageConfig<"/kds">
}

// Validate ..\..\app\login\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\login\\page.js")
  handler satisfies AppPageConfig<"/login">
}

// Validate ..\..\app\menu\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\menu\\page.js")
  handler satisfies AppPageConfig<"/menu">
}

// Validate ..\..\app\orders\[id]\edit\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\orders\\[id]\\edit\\page.js")
  handler satisfies AppPageConfig<"/orders/[id]/edit">
}

// Validate ..\..\app\orders\[id]\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\orders\\[id]\\page.js")
  handler satisfies AppPageConfig<"/orders/[id]">
}

// Validate ..\..\app\orders\analytics\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\orders\\analytics\\page.js")
  handler satisfies AppPageConfig<"/orders/analytics">
}

// Validate ..\..\app\orders\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\orders\\page.js")
  handler satisfies AppPageConfig<"/orders">
}

// Validate ..\..\app\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ..\..\app\pos\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\pos\\page.js")
  handler satisfies AppPageConfig<"/pos">
}

// Validate ..\..\app\reservations\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\reservations\\page.js")
  handler satisfies AppPageConfig<"/reservations">
}

// Validate ..\..\app\settings\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\settings\\page.js")
  handler satisfies AppPageConfig<"/settings">
}

// Validate ..\..\app\staff\page.tsx
{
  const handler = {} as typeof import("..\\..\\app\\staff\\page.js")
  handler satisfies AppPageConfig<"/staff">
}

// Validate ..\..\app\api\analytics\performance\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\analytics\\performance\\route.js")
  handler satisfies RouteHandlerConfig<"/api/analytics/performance">
}

// Validate ..\..\app\api\auth\[...nextauth]\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\auth\\[...nextauth]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/auth/[...nextauth]">
}

// Validate ..\..\app\api\health\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\health\\route.js")
  handler satisfies RouteHandlerConfig<"/api/health">
}

// Validate ..\..\app\api\reports\[type]\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\reports\\[type]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/reports/[type]">
}

// Validate ..\..\app\api\reports\cache\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\reports\\cache\\route.js")
  handler satisfies RouteHandlerConfig<"/api/reports/cache">
}

// Validate ..\..\app\api\reports\download\[filename]\route.ts
{
  const handler = {} as typeof import("..\\..\\app\\api\\reports\\download\\[filename]\\route.js")
  handler satisfies RouteHandlerConfig<"/api/reports/download/[filename]">
}





// Validate ..\..\app\analytics\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\analytics\\layout.js")
  handler satisfies LayoutConfig<"/analytics">
}

// Validate ..\..\app\dashboard\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\dashboard\\layout.js")
  handler satisfies LayoutConfig<"/dashboard">
}

// Validate ..\..\app\inventory\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\inventory\\layout.js")
  handler satisfies LayoutConfig<"/inventory">
}

// Validate ..\..\app\kds\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\kds\\layout.js")
  handler satisfies LayoutConfig<"/kds">
}

// Validate ..\..\app\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\layout.js")
  handler satisfies LayoutConfig<"/">
}

// Validate ..\..\app\menu\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\menu\\layout.js")
  handler satisfies LayoutConfig<"/menu">
}

// Validate ..\..\app\reservations\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\reservations\\layout.js")
  handler satisfies LayoutConfig<"/reservations">
}

// Validate ..\..\app\settings\layout.tsx
{
  const handler = {} as typeof import("..\\..\\app\\settings\\layout.js")
  handler satisfies LayoutConfig<"/settings">
}
